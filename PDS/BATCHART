./ ADD NAME=$$README 0105-01046-02060-1217-00034-00024-00000-TSO057

      BATCHART can be used to create GDFs in batch, using an input
      file of commands.

      Using BATCHART, the GDFs can be printed on an AFP printer,
      plotted, or converted to .gif files or PSEGs

      BATCHART needs LE, GDDM and GDDM-PGF.

      Instructions for installation and use are in member BATCDOC of
      this library

      BATCHART is written in COBOL and distributed as COBOL source code.




     Copyright (C) 2000  Andy Robertson

     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License as
     published by the Free Software Foundation; either version 2 of the
     License, or (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


./ ADD NAME=BATCCGIF 0131-01056-03197-0958-00073-00004-00000-TSO057
    /* rexx */
    /*************************************************************/
    /*                                                           */
    /*  This is a "wrapper" for ADMUGIF.  It checks the TO parm  */
    /*  if it is an HFS file and if so preallocates that file,   */
    /*  CHMODs it to 755 and does other sensible stuff to it     */
    /*                                                           */
    /*************************************************************/
    trace o
    parse arg parm
    say " "
    say "BATCCGIF: entered"
    /*************************************************************/
    /*                                                           */
    /*  massage the parm to see if it has a hfs file in it       */
    /*                                                           */
    /*************************************************************/

    r  = syscalls("ON")
    if rc > 3 then say "BATCCGIF: syscalls('ON') ended"  r

    parse var parm p1 " TO(" outfile ") " p2
    outfile = strip(outfile)

    if pos("/",outfile) = 0 then do
      call batcckps outfile
      if result <> 0 then exit 12
      say "BATCCGIF: ADMUGIF being called with:"  parm
      address LINKMVS "ADMUGIF  parm"
      exit rc
    end

    say 'BATCCGIF: outfile' outfile ' assumed to be HFS file '

    if length(outfile) < 12 then do
      say 'BATCCGIF: outfile too short for safety'
      exit 12
      end
    if left(outfile,1) <> "/" then do
      say "BATCCGIF: outfile must be absolute"
      exit 12
      end
    address syscall  'unlink' outfile
    x = msg("OFF")
    address TSO ,
    "FREE FILE(BATCCGIF)"
    x = msg("ON")
    address TSO ,
    "ALLOCATE FILE(BATCCGIF) PATH('"outfile"')" ,
    "PATHMODE (SIRWXU, SIRWXG, SIRWXO)" ,
    "PATHOPTS (OCREAT, OWRONLY)"
    if rc <> 0 then do
      say 'BATCCGIF: allocation of' outfile 'failed' rc
      exit 12
      end
    say 'BATCCGIF: ' outfile 'created'
    parm = p1 'TO(BATCCGIF)' p2
    say "BATCCGIF: ADMUGIF being called with:"  parm
    address LINKMVS "ADMUGIF  parm"
    if rc <> 0 then do
      say 'BATCCGIF: conversion failed' rc
      exit 12
      end
    address syscall  'chmod' outfile '0755'
    if rc <> 0 then do
      say 'BATCCGIF: chmod failed' rc
      exit 12
      end
    say 'BATCCGIF: ' outfile "chmod'd to 0755"

    say 'BATCCGIF: converted chart to file' outfile
    exit 0

./ ADD NAME=BATCCKPS 0107-02060-02060-1616-00046-00040-00000-TSO057
     /* rexx */

     trace o

     arg ddname .
     if ddname = "ADMPRINT" then exit 0


     if ddname = "" then exit   4
     r = listdsi(ddname 'FILE')
     if r > 4 then exit r
     if sysdsorg = 'PS' then exit 0
     if sysdsorg <>'PO' then exit 12


     /* is it a member of a PDS? */

     x=outtrap(OFF)
     x=outtrap('l.')
     address tso 'lista st'
     x=outtrap(OFF)

     do lno = 1 to l.0
       if substr(l.lno,1,2) = ' ' & substr(l.lno,3,2) <> ' ' then do
         dd     = word(l.lno,1)
         if ddname = dd     then call test
         end
       else do
         ds     = word(l.lno,1)
         end
     end
     exit 12





test:

     if right(ds,1) = ")" then exit 0
     say "         ddname "ddname" points to a PDS" ,
     "but no member is specified in the JCL"

     exit 12


./ ADD NAME=BATCDISP 0115-01075-03196-1043-00065-00046-00000-TSO057
/******************************** REXX *******************************/
/*+-----------------------------------------------------------------+*/
/*| BATCDISP - display one member of an GDF library                 |*/
/*|                                                                 |*/
/*| Run under TSO as                                                |*/
/*|                                                                 |*/
/*|        BATCDISP GDF_library_name member_name                    |*/
/*|                                                                 |*/
/*| e.g.                                                            |*/
/*|                                                                 |*/
/*|        BATCDISP TSO057.ADMGDF  IVPWEBBA                         |*/
/*|                                                                 |*/
/*|                                                                 |*/
/*| NOTE   If your GDDM.SADMMOD is not in LINKLIB/LPALIB/STEPLIB    |*/
/*|        may have to change the line                              |*/
/*|                                                                 |*/
/*|        "CALL *(ADMUCDSO)" ,                                     |*/
/*|                                                                 |*/
/*|        to                                                       |*/
/*|                                                                 |*/
/*|        "CALL 'GDDM.SADMMOD(ADMUCDSO)'  " ,                      |*/
/*|                                                                 |*/
/*|                                                                 |*/
/*| NOTE   Before running this you may need to allocate ADMSYMBL.   |*/
/*|        If you do not do this, you will get msg ADM0320, but the |*/
/*|        graph will still display                                 |*/
/*|                                                                 |*/
/*|        Allocate it to your GDDM.SADMSYM library                 |*/
/*|                                                                 |*/
/*+-----------------------------------------------------------------+*/
/*********************************************************************/

address TSO
trace o

arg gdflib gdfmem


"ALLOC F(ADMGDF) DA("gdflib") SHR REUSE"

if rc > 0 then do
  say "BATCDISP:  ALLOCATION TO " gdflib "FAILED"
  exit 12
end


x = msg("ON")

/* line below may need changing */

"CALL *(ADMUCDSO)" ,
"'"  gdfmem gdfmem "99 1'"
if rc =107  then do
  say "BATCDISP:  DISPLAY FAILED - MEMBER " gdfmem "NOT FOUND"
  "FREE F(ADMGDF)"
  exit 12
end
if rc > 0 then do
  say "BATCDISP:  DISPLAY FAILED " rc
  "FREE F(ADMGDF)"
  exit 12
end

"FREE F(ADMGDF)"
exit 0
./ ADD NAME=BATCDOC  0157-01044-03280-1629-01556-01396-00000-TSO057
                                                           Ver 1.4
                                                           25 jul 2003


  FUNCTION - GENERAL DESCRIPTION
  ------------------------------


  1.  BATCHART is a program which builds high-quality high-definition
      charts using IBM's GDDM-PGF facility.

      No terminal is needed.  BATCHART runs as an ordinary batch job
      taking FB-80 SYSIN control cards.

      Charts may be plotted (on graphics pen devices), printed in
      monochrome on AFP printers, converted to .gif files, converted to
      PSEGs, or saved as GDF members on a library for subsequent
      print/plot/conversion or for display on 3270 screens.


  2.  BATCHART will plot line graphs, surface charts, pie charts, bar
      charts, histograms, polar charts, scatter charts or tower charts.

      Charts can also be plotted in mixed format, with different data
      groups in line, surface, bar and histogram format.


  3.  These charts use the full image-processing capacity of AFP and
      GDDM.  They are vector graphics, and will be rendered with an
      accuracy limited only by the capacities of the output medium.
      They will be in full color if the output device allows it.


  4.  A clist BATCDISP is provided to display saved GDF charts under a
      TSO session.


  5.  A clist BATCICU  is provided as  "starter" for interactive work
      with the GDDM ICU which can be used to define your own formats
      and save them for use by BATCHART


  JCL FORMAT
  ----------

  6.  A typical run.

      This will build a bar chart and save it as a GDF member IVP1 in
      the FB/400 library TSO057.ADMGDF


      //*
      //         EXEC BATCPROC
      //ADMGDF   DD   DSN=TSO057.ADMGDF,DISP=OLD
      //SYSIN    DD   *

        BUILD Sales for this year

        TIEDXVALUES Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec

        GROUP Dept_stores
         DATUM Jan  1207692
         DATUM Feb  1448871
         ....
         ....

        GROUP Supermarkets
         DATUM Jan  1954404
         DATUM Feb  1266730
         ....
         ....

        GROUP Factories
         DATUM Jan  335400
         DATUM Feb  60300
         ....
         ....

        FORMAT  BATPRTBA YRANGE 1000000 2000000 +
          YTITLE millions_of_pounds XTITLE Sales_for_1999 +
          YMULTIPLIER 0.000001

        SAVE IVP1


      Normally, of course, all the commands would be generated by a
      program feeding data to BATCHART.


  7.  The GDF library must be a PDS or PDSE with LRECL=400,RECFM=FB. It
      must be in existence before the BATCHART run.  This is where any
      charts you save are kept.

    ******************************************************************
    * BATCHART uses a GDF member called $$$$TEMP as a                *
    * "scratch-pad".  Therefore you cannot share an GDF library      *
    * between two simultaneous runs of BATCHART.  DISP=OLD is        *
    * recommended.                                                   *
    ******************************************************************




  COMMANDS USED TO SET UP THE CHART'S DATA
  ----------------------------------------


 10.  The next section is an explanation of the commands supported by
      BATCHART.

      In general, commands are freeformat.  You can end a line with a
      '+' to continue it.  Blank lines are ignored, and lines with '*'
      in col 1 are considered comments.

      Numbers are freeformat, may have a leading sign, may include
      decimals, and may be up to 30 characters long.  Note however that
      the accuracy of data storage in the underlying GDDM software is
      limited to short floating point, which is about 7 significant
      figures.


      Optional elements are shown below inside <...>


 11.  BUILD command

          BUILD < chart header line . . . . >

      This command resets all internal information and starts build of a
      new chart.  The characters following BUILD are used as the chart's
      heading unless replaced by a later HEADER command.


 12.  TIEDXVALUES command

          TIEDXVALUE tiedXvaluename1 tiedXvaluename2 . . . . .

      If specified, it symbolically names a series of X values, one or
      other of which ALL the datum points on the chart must specify.

      The names specified in TIEDXVALUES are displayed EQUALLY SPACED as
      labels along the X axis.

      TIEDXVALUES is optional.  If TIEDXVALUES is NOT used there are no
      constraints on the X values of datum points, and the X-axis labels
      will normally be numeric.

      Each name may be folded to multiple lines by using a semicolon as
      a line delimiter.  Underscores will be converted to spaces on
      displaying. E.g the string

                Sales_for;__1999_

      Will be displayed as

                Sales for
                  1999


 13.  GROUP command

          GROUP < group-name >


      Typically there will be multiple GROUP commands, each GROUP
      command followed by several DATUM commands.

      Each GROUP command and its associated DATUM commands defines one
      data group: that is to say, a line on a line graph, a pie in a pie
      chart, a set of bars in a bar chart, and so on.

      The group-name for each group will be displayed in a legend box at
      the top right of the chart, identifying what the group is.
      Underscores will be replaced by spaces.


 14.  DATUM command

          DATUM Xvalue Yvalue


      Each DATUM command specifies one datum point, slice in a pie
      chart, bar on a bar chart, etc.


      Yvalue must be a number.


      If you DID NOT specify TIEDXVALUES, Xvalue will normally just be
      a number.

      for instance:

          DATUM   1.33     24
          DATUM   2.888    44
          DATUM   5.888    14.6


      If you DID specify TIEDXVALUES, then the Xvalue may either be a
      tied value name or may be a cardinal number n, indicating the
      nth tied Xvalue.

      for instance:

          TIEDXVALUES TP1 TP2 TP3 TP4 TP5 TP6 TP7 TP8 TP9 TP10 TP11 TP12

           .....
           .....
          DATUM   TP1 120
          DATUM   TP2 234
          DATUM   3   233 /* same as DATUM TP3 233    */
           .....


      X values as Dates
      -----------------

      If you DID NOT specify TIEDXVALUES, Xvalue can alternatively be a
      date in European, ISO, or DD/MM/YY format  (or other formats if
      BATCHART is customised to accept them).  This is automatically
      translated to a base date adjusted for start at 01 Jan 0001, and
      then treated as a number.

      for instance:

          DATUM   12/03/98        20013
          DATUM   1998-11-04      34413

      The date can be specified as RUN_DATE, and an integral number of
      days forward or backward from it can be specified as
      RUN_DATE+-nnnn

      for instance:

          DATUM   RUN_DATE        12228.55
          DATUM   RUN_DATE-14     33955
          DATUM   RUN_DATE+2      88752.44

      If you use dates you will probably want to use XNOTE commands
      or the YEARS modifier of the FORMAT command to get meaningful
      labels along the X axis (see later).




  COMMANDS USED TO DEFINE THE CHART'S FORMAT
  ------------------------------------------

 15.  FORMAT command

          FORMAT formatname

              < XRANGE startXvalue endXvalue < interceptXvalue >>
              < XTITLE x_axis_logo >
              < XLABELROTATE degrees >
              < XLABELS > < NOXLABELS >
              < XLINEAR > < XLOGARITHMIC >
              < XMULTIPLIER scalingfactor > < YEARS >
              < XINTERVAL interval < minor-tick-marks > >

              < YRANGE startYvalue endYvalue < interceptYvalue >>
              < YTITLE y_axis_logo >
              < YLABELROTATE degrees >
              < YLABELS > < NOYLABELS >
              < YLINEAR > < YLOGARITHMIC >
              < YMULTIPLIER scalingfactor >
              < YINTERVAL interval < minor-tick-marks > >

              < NORMALAXES > < SWAPAXES >
              < LEGEND  < BOX > < NOBOX > >  < NOLEGEND >

              < TOPMARGIN rows >
              < BOTTOMMARGIN rows >
              < LEFTMARGIN columns >
              < RIGHTMARGIN columns >
              < ASPECT aspectratio  >

              < CHARSET charsetname >
              < CHARSACROSS columns >
              < CHARSDOWN rows >
              < CENTRELABELS >

              < NOXGRIDLINES > < XGRIDLINES >
              < NOYGRIDLINES > < YGRIDLINES >
              < XREFERENCELINE Xvalue >
              < YREFERENCELINE Yvalue >
              < XDATUMLINE Xvalue >
              < YDATUMLINE Yvalue >
              < CORNER > < BASE > < SIDEWALL > < BACKWALL >
              < NOSCALETOWER > < SCALETOWER >
              < TICKSHADOWS > < NOTICKSHADOWS >

              < PLOT%OFXVALUE Xvalue >
              < PLOT%OFGROUP group-name >
              < PLOT%OFGROUPTOTAL >
              < PLOT%OFXVALUETOTAL >

              < PLOTHEIGHT > < PLOTAREA >
              < PLOTABSOLUTE > < PLOTRELATIVE >
              < RANKBARS > < OVERLAYBARS > < STACKBARS >
              < SEPARATE > < ADJACENT > < OVERLAP >
              < SEPARATESETS > < ADJACENTSETS >
              < SHADING > < NOSHADING >
              < MARKERS > < NOMARKERS >
              < LINES > < NOLINES >
              < NOMOUNTAIN > < MOUNTAIN >
              < NOVALUES > < VALUES decimalplaces >

              < ZSIZE percentofXAxissize >
              < ZANGLE degrees >
              < SMOOTH smoothingvalue >

              < BLACKLINE < group-name < group-name ... > > >
              < SHADECLEAR < group-name < group-name ... > > >
              < SHADEOPAQUE < group-name < group-name ... > > >
              < EXPLODE < tiedXvaluename < tiedXvaluename . . > >
              < HILITE < group-name < group-name ... > > >
              < DONTSHOW < group-name < group-name ... > > >
              < COLOR colorspec < group-name < group-name ... > > >
              < LINETYPE linetypespec < group-name < group-name ... > > >
              < MARKER markerspec < group-name < group-name ... > >     >
              < SHADINGPATTERN number < group-name < group-name ... > >     >

              < PLOTASBAR < group-name < group-name ... > > >
              < PLOTASHISTOGRAM < group-name < group-name ... > > >
              < PLOTASLINE < group-name < group-name ... > > >
              < PLOTASSURFACE < group-name < group-name ... > > >


 16.  What are FORMATs?

      The FORMAT command specifies a preexisting GDDM-PGF format, which
      exists as a member on an ADMCFORM library.  ((The supplied formats
      are in a library that is concatenated to the RO1CFORM DD in the
      BATCPROC procedure.

      A format defines the type of the chart, its coloration, shading,
      character set, and so on.

      Formats distributed with BATCHART are in the BATCHART ADMCFORM
      library.

      You may create your own formats using the ICU and save them on
      this library.  Clist BATCICU may be helpful as a starter for work
      with the ICU.

      Other format libraries may be supplied by IBM or other software
      manufacturers: they may be concatenated to RO1CFORM DD

      The following formats are distributed with BATCHART


        o  For display on 3270's, or for conversion to .gif files for
           PC's or the web.

             BATWEBBA        Bar chart
             BATWEBHI        Histogram
             BATWEBLI        Line graph
             BATWEBPI        Pie chart
             BATWEBPO        Polar chart
             BATWEBSC        Scatter chart
             BATWEBSU        Surface chart
             BATWEBTO        Tower chart

        o  For printing in monochrome (though they are coloured and can
           be displayed)

             BATPRTBA        Bar chart
             BATPRTHI        Histogram
             BATPRTLI        Line graph
             BATPRTPI        Pie chart
             BATPRTPO        Polar chart
             BATPRTSC        Scatter chart
             BATPRTSU        Surface chart
             BATPRTTO        Tower chart


      In all formats the axes lines, grid lines, datum lines, reference
      lines, and all text are printed black, while the data groups are
      in colour.  On a display with a black background, like a 3720, the
      "black" elements are displayed white but the data group colours
      remain the same.


      For a fuller understanding of formats, play with the GDDM
      Interactive Chart Utility (ICU), which is used to set up new
      formats, and consult the IBM documentation on GDDM-PGF. The
      clist BATCICU is provided to help you set up your work
      with the ICU.


 19.  What are the format modifiers?


      Any saved format, whether created by you or one of the standard
      ones, may be MODIFIED before use.  This modification is temporary
      - it affects your use of the format only.

      Generally speaking you WILL want to supply modifiers.  However you
      will most frequently employ XRANGE and YRANGE, XTITLE and YTITLE.
      There are a very large number of other modifiers which are very
      rarely used.  You can skip the explanation of other modifiers on a
      first reading.

      The following modifiers may be supplied.


      Modifiers that affect the chart's axes and labels:
      --------------------------------------------------

           XRANGE   Specify the range of the X axis and optionally the
                    intercept where the Y axis crosses it.  If not
                    specified the X range will be set to the highest and
                    lowest input X values.

                    Whenever an X value is specified on the FORMAT
                    modifier, as it is here, it may be specified in the
                    same way as in the DATUM command - as a number, as a
                    date in YYYY-MM-DD, DD.MM.YYYY or DD/MM/YY format,
                    as a tied X value, or as a cardinal number m
                    indicating the mth tied X value.  Additionally (if
                    you have used tied X values) you may specify a
                    fractional number to indicate a position part way
                    between two tied X values.

           YRANGE   Specify the range of the Y axis and optionally the
                    place where the X axis crosses it.  If not specified
                    the Y range will be set to the highest and lowest
                    input Y values

           XTITLE   Specify a logo to be written under the X axis.
                    Underscores in this logo will be replaced by spaces
                    Multiple lines may be entered if you use semicolon
                    as a line delimiter.

           YTITLE   Specify a logo to be written to the left of Y axis.
                    Underscores in this logo will be replaced by spaces.
                    Multiple lines may be entered if you use semicolon
                    as a line delimiter.

           CENTRELABELS  Specify that if the labels are of different
                    lengths they should be centre-justified on display

           YMULTIPLIER  Multiply numeric Y labels by this value.  This
                    does not affect the real Y values - only the numbers
                    on the labels.  If you want to display (say)
                    millions of pounds you might use these modifiers

                      YRANGE 0 20000000 YTITLE Millions_of_pounds +
                      YMULTIPLIER .000001

           XMULTIPLIER  Multiply numeric X labels by this value.  This
                    does not affect the real X values - only the numbers
                    on the labels.

                    You may specify XMULTIPLIER YEARS to get multiplier
                    1/365.2425   If X values have been supplied as dates
                    this will put numeric labels equal to the julian
                    year along the X axis at one year intervals. (there
                    is no way of allowing for leap years: the labels are
                    very slightly inaccurate).

           YLABELS  Display Y axis labels. This is the default for all
                    BATxxxxx formats

           XLABELS  Display X axis labels. This is the default for all
                    BATxxxxx formats

           NOYLABELS  Do not display Y axis labels

           NOXLABELS  Do not display X axis labels

           YLABELROTATE  Rotate labels on the Y axis by this number of
                    degrees from the horizontal.

           XLABELROTATE  Rotate labels on the X axis by this number of
                    degrees from the horizontal.  You will probably have
                    to specify BOTTOMMARGIN to get enough room.

           XINTERVAL  Interval between major tickmarks on the X axis.
                    Each major tick mark has a label written against it.

                    If you specified TIEDXVALUES the interval is
                    interpreted as a number of tied X values.
                    Otherwise it is simply taken as a number.

                    You may optionally also specify the number of minor
                    tick marks between each major tick mark.  This is
                    the number of tick marks NOT the number of
                    divisions.  Eg if you want to have a major tick mark
                    every 100 with 10 subdivisions in each major
                    interval specify:

                      XINTERVAL 100 9

                    You may specify XINTERVAL YEARS to get interval
                    365.2425   This effectively puts a major tick mark
                    every year, if you have entered X values as dates.

           YINTERVAL  Interval between major tickmarks on the Y axis.
                    Each major tick mark has a (numeric) label written
                    against it.  You may optionally also specify the
                    number of minor tick marks between each major tick
                    mark.

           YEARS    This is equivalent to XMULTIPLIER YEARS XINTERVAL
                    YEARS 11.  Use it when all your X values are in
                    dates and you want year labels along the X axis.
                    There will be 11 minor tick marks between each major
                    tick mark, giving 12 subdivisions, one approximately
                    equivalent to each month.  (However these
                    subdivisions are of exactly equal size and so will
                    not correspond exactly to calendar months).

           SWAPAXES  X axis up-and-down, Y axis across, bar values (if
                    any) horizontal.

           NORMALAXES  Y axis up-and-down, X axis across, bar values (if
                    any) vertical.  This is the default for all BATxxxxx
                    formats.

           YLOGARITHMIC  The Y axis is logarithmic

           YLINEAR  The Y axis is linear.  This is the default for all
                    BATxxxxx formats.

           XLOGARITHMIC  The X axis is logarithmic

           XLINEAR  The X axis is linear.  This is the default for
                    all BATxxxxx formats.


      Modifiers that affect the chart's size and positioning:
      -------------------------------------------------------

           TOPMARGIN / BOTTOMMARGIN / LEFTMARGIN / RIGHTMARGIN.  The
                    chart created is split up into 32 logical rows by 80
                    columns.  (or whatever number you specify in
                    CHARSACROSS and CHARSDOWN). The actual chart is
                    placed in the centre of this:  around it are the
                    various text elements (header, x/ytitle, labels,
                    etc) in the MARGINs.

                    The xxxMARGIN modifiers specify the margin size in
                    rows or columns. The default margins are different
                    for each of the standard formats and should usually
                    be left unchanged.  However you may specify these
                    modifiers if you need to (if for instance you want
                    to have a multi-line heading and need more space for
                    it).  You will probably have to experiment to get
                    the exact effect you want.

           ASPECT   Specify the width to height ratio of the chart.
                    This will default to filling the area defined
                    for output on the PRINT or SAVE command.


      Modifiers that affect the indexing of the data:
      -----------------------------------------------

      For these to work properly you must use TIEDXVALUES, or the data
      must be "dynamically reformatable to tied format".  Essentially
      this will be true if:

           o  All X values are in ascending order within groups

           o  There are 99 or fewer unique X values in all groups taken
              together

      Reformatting will be done automatically if the above is true.


           PLOT%OFGROUP Name a group which will be considered the
                    "indexing" group.  Y values will be plotted as a
                    percentage of the indexing group's Y values.

                    This is typically used to compare several different
                    groups to a standard group.

                    You may apply DONTSHOW to the indexing group. This
                    suppresses display of the indexing group, which
                    would otherwise be a horizontal line at a uniform
                    100%.  If you do this the indexing group should (for
                    technical reasons) be the first group.

                    You can call the indexing group _ (a single
                    underscore) to suppress its display in the legend,
                    and specify FORMAT LEGEND NOBOX to suppress the
                    empty box that would otherwise be displayed.

                    The indexing group must have a datum at every X
                    value which occurs in any other group. Other groups
                    will NOT be plotted if they have ANY datum with an X
                    value the indexing group does NOT have.

           PLOT%OFXVALUE  Specify an X value which will be considered an
                    "indexing" X value.  The Y values for each group
                    will be plotted as a percent of the group's Y value
                    at the indexing X value.

                    This is typically used to show % growth of some
                    quality relative to its value at a fixed time or
                    date.

                    A group will not be displayed if does not have a
                    datum at the indexing X value.

           PLOT%OFGROUPTOTAL The Y values for each separate group are
                    rebased (differently for each group) so that the sum
                    of all the Y values for the group is 100.

           PLOT%OFXVALUETOTAL The Y values for each separate X value are
                    rebased (differently at each X value) so that the
                    sum of all the Y values at each X value is 100.


      Modifiers that affect grids, datum lines and reference lines:
      -------------------------------------------------------------

           NOYGRIDLINES  Do not draw lines across from the major tick
                    marks on the Y axis parallel to the X axis.  This is
                    the default for all BATxxxxx formats except tower
                    charts

           YGRIDLINES  Draw lines across from the major tick marks on
                    the Y axis parallel to the X axis.  This is the
                    default for all BATxxxxx tower chart formats.

           NOXGRIDLINES  Do not draw lines up from the major tick marks
                    on the X axis parallel to the Y axis.  This is the
                    default for all BATxxxxx formats except tower charts

           XGRIDLINES  Draw lines up from the major tick marks on the X
                    axis parallel to the Y axis.  This is the default
                    for all BATxxxxx tower chart formats.

           XDATUMLINE  Draw a line up from the X axis parallel to the Y
                    axis at this X value.

           YDATUMLINE  Draw a line across from the Y axis parallel to
                    the X axis at this Y value.

           XREFERENCELINE  Draw a line up from the X axis parallel to
                    the Y axis at this X value.

           YREFERENCELINE  Draw a line across from the Y axis parallel
                    to the X axis at this Y value.  Unlike the
                    YDATUMLINE, This line acts as a "shading reference"
                    for values - Surface charts, polar charts and bars
                    are shaded up to or down to this line rather than to
                    the X axis.

           SCALETOWER  Tower charts: draw a scale tower

           NOSCALETOWER  Tower chart: do not draw scale tower. Default
                    for all BATxxxxx tower chart formats.

           TICKSHADOWS  Tower chart: put shadows of tick marks on
                    towers.  These shadows are white on paper, black on
                    a 3270 display (i.e the reverse of the text elements
                    and the axes lines)

           NOTICKSHADOWS  Tower chart: do not put shadows of tick marks
                    on towers

           BASE     Tower chart: draw the chart with a base but no back
                    or side wall.

           SIDEWALL Tower chart: draw the chart with a base and side
                    wall.

           BACKWALL Tower chart: draw the chart with a base and back
                    wall.

           CORNER   Tower chart: draw the chart with a base, back wall
                    and side wall.  This is the default for all BATxxxxx
                    tower chart formats.



      Modifiers that create a mixed chart
      -----------------------------------

      By using these modifiers you can create a MIXED chart, where some
      groups are plotted as bars, some as lines, some as histograms
      and/or some as surface.

      Use these modifiers to change the plotting mode of a subset of the
      groups in the chart.  Specify the groups by group name or
      number e.g.

              FORMAT BATPRTBA PLOTASLINE Factories  Supermarkets

      Do not attempt to use tower, scatter, pie or polar charts in a
      mixed chart.


           PLOTASBAR  Plot this group as bars, even on a chart of type
                    line, surface or histogram.

           PLOTASLINE  Plot this group as line, even on a chart of type
                    bar, surface or histogram.

           PLOTASHISTOGRAM  Plot this group as histogram, even on a
                    chart of type bar, surface or line.

           PLOTASSURFACE  Plot this group as surface, even on a chart of
                    type bar, histogram or line.



      Modifiers that affect Presentation of a subset of the groups
      ------------------------------------------------------------

      Use these modifiers to change the presentation of a subset of the
      groups in the chart. Specify the groups by group name or number
      e.g.

              FORMAT BATPRTBA HILITE Factories

      You may specify one or more groups OR you may specify no group, on
      which case ALL groups are affected by the modifier.

      If you are drawing a pie chart you should specify a tied X value
      name rather than a group name.  For pie charts each group is
      used to make one pie and it is the the different X values within
      the group that are coloured, shaded, etc.  differently.


           SHADEOPAQUE Use a solid opague color for the group.

           SHADECLEAR Do not shade the group, draw outlines only.

           EXPLOAD  Explode this pie slice.

           BLACKLINE  Draw lines on line graphs and the outlines on pie
                    charts, polar charts, surface charts, tower charts
                    and bar charts, in black.  Normally lines are the
                    same color as the shading, except in BATxxxxx tower
                    chart formats where black lines are the default.

                    These "black" lines display white if the background
                    is black e.g on a 3270 display.

           HILITE   Emphasise this group: lines and markers are made
                    double width, shaded areas are made solid black, and
                    slices are exploded.

           DONTSHOW Do not display this group.  Space will still be
                    taken up on the chart but it will not be coloured
                    in.  You might use this to create a "floating"
                    stratum on a surface or stacked bar chart.

                    This does not work well with tower chart because the
                    grid lines where the missing towers were are
                    not redrawn.

           COLOR    Change the color of this group.  Colorspec may be
                    a number, or it may be one of the colors coded by
                    the standard color number descriptions

                       DEFAULT       0
                       BLUE          1
                       RED           2
                       PINK          3
                       GREEN         4
                       TURQUOISE     5
                       YELLOW        6
                       NEUTRAL       7
                       BACKGROUND    8

                    The color number may be higher than 8 depending on
                    whether your default setup has user-defined color
                    numbers

           LINETYPE Change the line type of this group.  Linetypespec
                    may be a number, or it may be one of the the
                    standard line type descriptions

                       DEFAULT             0
                       DOTTED              1
                       SHORT-DASHED        2
                       DASH-DOT            3
                       DOUBLE-DOTTED       4
                       LONG-DASHED         5
                       DASH-DOUBLE-DOTTED  6
                       SOLID               7
                       INVISIBLE           8

           MARKER   Change the marker of this group.  Markerspec
                    may be a number, or it may be one of the the
                    standard marker descriptions

                       INVISIBLE           0
                       EX                  1
                       PLUS                2
                       DIAMOND             3
                       RECTANGLE           4
                       STICKBUNDLE         5
                       ASTERISK            6
                       SOLIDDIAMOND        7
                       SOLIDRECTANGLE      8

           SHADINGPATTERN   Change the shading pattern of this group.
                    No acronyms are available, a number must be supplied
                    to give one of the standard shading patterns



      Modifiers that affect data presentation of the entire chart:
      -----------------------------------------------------------

      These modifiers normally affect all groups in the chart, e.g

               FORMAT BATPRTLI +
                  SMOOTH 10

      However you may specify one or more of the type qualifiers BAR
      LINE HISTOGRAM SURFACE.  On a mixed chart this makes the modifier
      apply only to groups that have been plotted in that way e.g.

               FORMAT BATPRTSU +
                  PLOTASLINE Factories Supermarkets +
                  PLOTASSURFACE Dept_Stores     +
                  SMOOTH 10 LINE +
                  SMOOTH 40 SURFACE



           SMOOTH   This modifier only affects line graphs, surface
                    charts and polar charts.  Specify a value from 1 to
                    100 which defines how smooth the chart lines are:
                    the higher the value the smoother the lines.  The
                    default for all BATxxxxx formats is to join data
                    points with straight lines.

                    This is NOT a line fitting algorithm: the line will
                    always go through ALL points.

           PLOTRELATIVE If this is specified the Y value plotted for a
                    data point in a group will be obtained by summing
                    the supplied Y values of all the data points, in
                    that group and in all previous groups, which have
                    the same X values as that data point.  In effect
                    successive groups are 'layered' on top of each other
                    like geological strata.  This is the default for
                    BATxxxxx surface chart formats.

                    For pie charts this option means that the Y values
                    given will be treated as % of the pie, not as real
                    qualities.  If Y values do not sum to 100 you get a
                    pie with a slice missing.

           PLOTABSOLUTE If this is specified the Y values plotted will
                    be those actually given.  This is the default for
                    all BATxxxxx chart formats except surface charts.

                    For pie charts this option means that the Y values
                    given will be treated as real qualities.  Pies will
                    always be complete, pie slices being proportional
                    to the % of the total Y values in the group.  This
                    is the default for all BATxxxxx pie chart formats.

           PLOTAREA  For histograms, the Y value is the AREA under the
                    step.  For pie charts, the size of a pie is made
                    proportional to the sum of all Y values in the
                    group.

           PLOTHEIGHT  For histograms, the Y value is the HEIGHT of the
                    step.  For pie charts, the size of all pies are the
                    same.  This is the default for all BATxxxxx pie
                    chart and histogram formats

           NOLINES  Do not connect points in a polar chart or line chart
                    Do not draw riser lines in a histogram.

           LINES    Connect points in a polar chart or line chart.  Draw
                    riser lines in a histogram.  This is default for all
                    BATxxxxx formats.

           NOMARKERS  Do not use datum point markers on line and polar
                    charts.

           MARKERS  Do use markers on line and polar charts.  This is
                    default for all BATxxxxx formats.

           NOSHADING  Do not shade in solid areas in a bar chart, polar
                    tower chart, chart, pie chart, or histogram. Leave
                    them in outline.

           SHADING  Shade in solid areas in a bar chart, polar chart,
                    tower chart, pie chart, or histogram.  This is
                    default for all BATxxxxx formats. The shading
                    pattern for the different groups defaults to a solid
                    opaque colour for BATWEBxx formats and a cyclic set
                    of patterns for BATPRTxx formats.

           MOUNTAIN Each group on a polar or surface chart obliterates
                    previous groups where it overlays them.

           NOMOUNTAIN  Groups on a polar or surface chart overlay each
                    other without obliteration (but groups underneath
                    will still not be visible if shading is opaque)

           RANKBARS  Bar charts only: If this is specified the bars for
                    different groups with the same tied X value will be
                    plotted side by side.  This is the default for all
                    BATxxxxx bar chart formats.

           STACKBARS  Bar charts only: If this is specified the bars for
                    different groups with the same tied X value will be
                    piled one on top of each other.  The total height of
                    the bar drawn will be equal to the sum of all Y
                    values.

           OVERLAYBARS  Bar charts only: If this is specified the bars
                    for different groups with the same tied X value will
                    be overlaid.

           ADJACENT  Bar and tower charts.  Towers or RANKED bars for
                    different groups with the same tied X value will be
                    adjacent, with no gap.

           SEPARATE  Bar and tower charts.  Towers or RANKED bars for
                    different groups with the same tied X value will be
                    separated by a space.  This is default for all
                    BATxxxxx bar chart and tower chart formats.

           OVERLAP  Bar charts only: If this is specified RANKED bars
                    for different groups with the same tied X value will
                    be partly overlapping.

           ADJACENTSETS  Bar and tower charts.  If this is specified the
                    sets of bars/towers from different groups will be
                    adjacent, with no gap.

           SEPARATESETS  Bar and tower charts.  If this is specified the
                    sets of bars/towers from different groups will be
                    separated by a space.  This is default for all
                    BATxxxxx bar chart and tower chart formats.

           VALUES   Pie and Bar charts only: append the Y value to the
                    bar or slice. For a pie chart this value is in
                    percent of the total for the group making up the
                    pie.  This is the default for all BATxxxxx pie chart
                    formats.

                    For a bar chart you may optionally specify a number
                    of decimal places eg VALUES 3

           NOVALUES  Pie and Bar charts only: do not append the value to
                    the bar or slice.  This is the default for all
                    BATxxxxx bar chart formats.

           ZANGLE   For pie charts, the angle which the pies are tilted
                    away from the viewer.  For tower charts, the angle
                    of the Z axis (anticlockwise from parallel with X
                    axis). Defaults for BATxxxxx pie and tower formats
                    are 20 degrees and 30 degrees respectively.

           ZSIZE    For pie charts, the thickness compared with the
                    diameter.  For tower charts, the length of the of
                    the Z axis compared to X axis.  Defaults for
                    BATxxxxx pie and tower formats are 10% and 60%
                    respectively.



      Modifiers that affect text:
      --------------------------

           CHARSET  The name of a character set to be used for the
                    writing on the chart.  These are provided by IBM and
                    you should consult the GDDM manuals online for a
                    list.  Normally you should allow this to default:
                    however it is worth mentioning the character set
                    ADMDVSSE, which is the only IBM-supplied character
                    set available which will display the currency
                    symbol, X'5B', as a pound instead of a dollar.

           CHARSACROSS / CHARSDOWN By default the chart created is split
                    up into 32 logical rows by 80 columns.  Each
                    standard alphanumeric character fits one "cell"
                    defined by this size.  By specifying CHARSACROSS and
                    CHARSDOWN you can change the standard cell
                    dimensions, and so in effect the size and proportion
                    of the writing on the chart.

                    This does NOT change the size or aspect of the chart
                    itself - The size is defined by the output medium,
                    eg by the PAPERWIDTH and PAPERDEPTH modifiers on a
                    PRINT or PLOT command, and the aspect is defined by
                    ASPECT, PORTRAIT, LANDSCAPE or SQUARE.  But the
                    higher value you give CHARSACROSS and CHARSDOWN, the
                    smaller the writing will be relative to the total
                    size of the chart created.

                    Characters in the header are larger than the
                    "standard" size and bar values are smaller.  However
                    all scale in proportion.

           LEGEND   Put a legend in a box defining the groups.  The
                    legend may be BOXed or NOBOXed.  LEGEND BOX is the
                    default for all BATxxxxx formats.

           NOLEGEND No legend




      If you need them, we can in future define other modifiers.
      However, if you need a really exotic format you will probably have
      to use the ICU to define a private format of your own.

      Be abstemious in using modifiers that change the coloring, marker
      type, shade pattern or line type of the groups on the chart.
      Charts should have a standard format and coloration so that
      successive groups can be intuitively recognised.  The coloration,
      marker type, shade pattern and line type follow one standard,
      optimised for terminal display, in the BATWEBxx formats, and
      another, optimised for monochrome printing, in the BATPRTxx
      formats.  You may use these formats or create your own, but you
      should try to stick to a standard format.


 18.  HEADER command

          HEADER chart header line . . . .


      This is used to change the chart's header



  17. NOTE   command

          NOTE < TEXT label_text >
               < XVALUE Xvalue   > < YVALUE Yvalue >
               < COLSACROSS cols > < ROWSUP rows >
               < BOX > < NOBOX >
               < ROTATE  degrees >
               < PREBLANK > < NOPREBLANK >


      This is used to set up a note - a 'box' of text at an arbitrary
      position - on the chart.

      The note may be specified by the TEXT modifier.  In the text given
      underscores are replaced by spaces and ; is used to split the line

      //*
      //         EXEC BATCPROC,PAPER='2,COPIES=12'
      //ADMGDF   DD   DSN=your.GDF.library,DISP=OLD
        BUILD a graph
        ....
        TIEDXLABELS A B C D F G H I J
        ....
        GROUP ..
        ....
        GROUP ..


        NOTE TEXT lineone;linetwo  XVALUE 3 YVALUE 3

        FORMAT .......
        SAVE ......


      The note will be centred at the X and Y values specified.  X and Y
      values may be fractional.

      You may specify the X value in the usual way - as a number, as a
      date, as RUN_DATE+-nnnn, as one of the tied X value names, as a
      cardinal number referring to the nth tied X value, as a number
      with a fractional part to get a position intermediate between two
      tied X values.

      You may specify position (relative to the lower left hand corner
      of the image) by using ROWSUP and COLSACROSS. This allows you to
      position the note in the margins. You may combine XVALUE and
      ROWSUP, or YVALUE and COLSACROSS.

      The note's width and depth will be the minimum necessary to hold
      its non-blank text.

      There is a limit of 255 characters per note.  If you continue a
      note's text, use a + as the last nonblank character in the
      continued line and start the continuing line in col 1

      The note may be ROTATEd a specified number of degrees from the
      vertical.

      The note may be boxed and/or pre-blanked.  BOXing and PREBLANKing
      gives the effect of a "post-it" stuck on the chart.  These two
      options are defaults for all BATxxxxx formats.  You may
      specify NOBOX and/or NOPREBLANK if you want

      NOTE commands should precede FORMAT commands.  Notes are only
      "applied" to the chart when the program processes a FORMAT
      command, and all notes are then reset to blank.  Hence if you want
      to plot the same chart using several different formats you will
      have to repeat the NOTE command(s) before each FORMAT command.



  18. XNOTE command

          XNOTE Xvalue < text >

      This is used to put a note and a major tick mark at an arbitrary
      point under the X axis.  The note is unboxed and not preblanked.
      It cannot be referred to symbolically by any DATUM command.

      If you do not specify any text you will just get a minor tick
      mark.  To get a major tick mark and no text specify the text as a
      single underscore.

      This is the only way you can specify "labels" under the X axis
      at arbitrary or irregular intervals.  (Tied X values if specified
      are always plotted along the X axis at equal intervals.) To get
      multiple labels use multiple XNOTE commands.

      Like NOTE commands, XNOTE commands should precede FORMAT commands.
      They are only "applied" to the chart when the program processes a
      FORMAT command, and all xnotes are then reset to blank.  Hence if
      you want to plot the same chart using several different formats
      you will have to repeat the XNOTE command(s) before each FORMAT
      command.

      XNOTE can not be used on pie or polar charts.  Charts must have
      their X axis horizontal (ie not SWAPAXES)

      Xnotes are really notes simulating labels.  Therefore XLABEL.....
      modifiers on the FORMAT command do not affect Xnotes, and
      XGRIDLINE will not cause lines to be drawn from the xnote tick
      marks.


  19. YNOTE command

          YNOTE Yvalue < text >

      This is used to put a note and a tick mark at an arbitrary point
      beside the Y axis. The note is unboxed and not preblanked.

      You specify the Y value as a number.  If you do not specify any
      text you will just get a tick mark.

      This is the only way you can specify "labels" by the Y axis at
      arbitrary or irregular intervals.  To get multiple labels use
      multiple YNOTE commands.

      Like NOTE commands, YNOTE commands should precede FORMAT commands.
      They are only "applied" to the chart when the program processes a
      FORMAT command, and all ynotes are then reset to blank.  Hence if
      you want to plot the same chart using several different formats
      you will have to repeat the YNOTE command(s) before each FORMAT
      command.

      YNOTE can not be used on pie or polar charts. Charts must have
      their Y axis vertical (ie  not SWAPAXES)

      Ynotes are really notes simulating labels.  Therefore YLABEL.....
      modifiers on the FORMAT command do not affect Y axis marks, and
      YGRIDLINE will not cause lines to be drawn from the YNOTE tick
      marks.

      We sometimes need to mark two Y scales on a graph, and plot a
      different set of groups on each scale.  You cannot truely do this
      with BATCHART but you can simulate it.  You will have to adjust
      the Y values of the second set of groups suitably, and use YNOTEs
      with a lot of ----- or ____ to define the second scale.

      Suppose you wanted to plot one group on a scale 30 times all
      the others.  You might specify something like this:


          YNOTE 10 300-___
          YNOTE 20 600-___
          YNOTE 30 900-___
          . . . . . . .

          FORMAT BATxxxxx YLABELS LEFTMARGIN 10 YINTERVAL 50 0

      YLABELS forces the standard Y axis labels to be displayed (by
      default YNOTE turns them off).  The underscores are turned to
      spaces but they still serve to displace the "second Y scale" some
      columns to the left of the standard one.

      The group plotted on the second Y scale must then have its Y
      values divided by 30 e.g specify 21 not 620, and so on.


  COMMANDS USED TO OUTPUT THE CHART
  ---------------------------------

  20. PRINT command

          PRINT < PAPERWIDTH width > < PAPERDEPTH depth >
              < ROTATE >
              < MEMBER member> < TOKEN devicetoken >

      This is used to output the chart on an AFP printer.   The ddname
      used is ADMPRINT.

      PAPERWIDTH and PAPERDEPTH specify the page's width and depth in
      10ths of an inch.  Default is 110 wide and 70 deep.  Note that
      this is the paper size, not chart size.  The chart's aspect ratio
      is set by ASPECT and is not changed by PAPERWIDTH or PAPERDEPTH,
      but it will be shrunk to fit the smallest page dimension.

      ROTATE specifies that you print 90 degrees rotated.  This does NOT
      change the chart's aspect automatically.

      The optional modifier MEMBER specifies the name of a pre-saved GDF
      member that you want to print.  This member may have been created
      by BATCHART or by any other application that can save a GDF member
      - for instance SLR or QMF.

      TOKEN is a special parameter which is used to pass a dummy device
      token and family to GDDM.  The default is IMG240X, which is
      suitable for the 3800-3/3820 printer family.   You may need to
      change this, for example to IMG600X for the 4250 family.  See the
      GDDM manuals.


  21. PLOT command

          PLOT nickname < PAPERWIDTH width > < PAPERDEPTH width >
          < COPIES copynum >

      This is used to output the chart to a plotter

      The plotter must be defined by a nickname in the system nickname
      file

      PAPERWIDTH and PAPERDEPTH specify the paper size in tenths of
      an inch

      COPIES specifies the number of copies



  22. SAVE command

          SAVE membername < PORTRAIT > < LANDSCAPE > < SQUARE >


      This is used to save the chart on your GDF library

      Once saved, the chart can be displayed on a 3720 or can be
      converted to a .gif file for use on a PC or the web, or can be
      printed by a later run of BATCHART using PRINT MEMBER.

      PORTRAIT, LANDSCAPE or SQUARE specify the output area aspect ratio
      - approx 1 to 1.4, 1 to 1, and 1.4 to 1 respectively. LANDSCAPE
      is the default.

      The chart is centred in the output area.  By default it will have
      the same aspect ratio as the output area and will fill the output
      area.  However, if you also modified the chart's aspect by using
      ASPECT on the FORMAT command, the chart will obey the ASPECT ratio
      you specified there while remaining centred in the output area.




  23. GIF command

          GIF OUTFILE ddname_or_HFS_file_name
              < MEMBER > membername
              < STRETCH > < ADJUST > < KEEP >
              < BLACK > < WHITE > < TRANSPARENT >
              < WIDTH width >  < DEPTH depth >

      This is used to convert the chart to a .gif file by calling the
      ADMUGIF utility.

      WIDTH and DEPTH are in pixels.  Default is 800 and 550
      respectively. Maximum is 1024.

      BLACK, WHITE and TRANSPARENT describe the background of the chart.
      If you specify TRANSPARENT the chart background is transparent and
      if you place it on a web page the background color will show
      through

      STRETCH, ADJUST and KEEP pass the parameter ASPECT to ADMUGIF
      as 0, 1 or 2.  See the IBM doc on ADMUGIF to understand this.

      The OUTFILE can be a ddname, or it can be the name of an HFS
      file.  If it is an HFS file it must start with / i.e. be
      absolute, not relative to your home directory.

           GIF OUTFILE /u/tso057/aaa.gif

      If it is a ddname it must point to a member of an FB-80 PDS

           GIF OUTFILE OOO

         //OOO DD DISP=SHR,DSN=TSO057.GIF(AAA)


      The optional modifier MEMBER specifies the name of a pre-saved GDF
      member that you want to convert to a .gif.   This member must
      already reside on the GDF library.  It may have been created by
      BATCHART or by any other application that can save a GDF member -
      for instance SLR or QMF.


  24. PSEG command

          PSEG OUTFILE ddname
              < PSEGWIDTH width > < PSEGDEPTH depth >
              < ROTATE >
              < MEMBER member> < TOKEN devicetoken >

      This is used to output the chart to a PSEGLIB as an AFP segment

      A PSEGLIB is a VBM lrecl 8206 blksize 8210 partitioned dataset
      where AFP print segments are stored ready to be combined to
      create a page.   It should be DISP=OLD.  (for reasons of
      robustness we sugget you create this dataset afresh before
      each run and copy members from it to your primary PSEG library
      after use)

      The OUTFILE specifies ddname which points to one member of the
      PSEGLIB.  Do not just point to the dataset or you will destroy
      the directory.

      PSEGWIDTH and PSEGDEPTH specify the segment's width and depth in
      10ths of an inch.  Default is 50 wide and 30 deep.

      ROTATE specifies that you rotate 90 degrees.

      The optional modifier MEMBER specifies the name of a pre-saved GDF
      member that you want to convert.   This member may have been
      created by BATCHART or by any other application that can save a
      GDF member - for instance SLR or QMF.

      TOKEN is a special parameter which is used to pass a dummy device
      token and family to GDDM.  The default is IMG240X, which is
      suitable for the 3800-3/3820 printer family.   You may need to
      change this, for example to IMG600X for the 4250 family.  See the
      GDDM manuals.


      This job will create a segment called AWR1.   Remember segment
      members have prefix S1


      //*
      //G EXEC BATCPROC
      //ADMGDF   DD DSN=SFT.TEST.ADMGDF,DISP=OLD
       BUILD a pie
        GROUP line_1
         DATUM   1      12
         DATUM   2.3    4
         DATUM   3.3    9
        FORMAT BATPRTPI  xrange 0 6

        PSEG OUTFILE PIEPSEG
      //PIEPSEG  DD DISP=OLD,DSN=OPS.TEST.PSEGLIB(S1AWR1)







  COMBINING COMMANDS TO SAVE TIME
  -------------------------------

  26. Once the chart's data has been defined by the BUILD, TIEDXVALUES,
      GROUP and DATUM commands, the chart can be printed, plotted, and
      saved any number of times.  It can also have its format, notes and
      header changed any number of times.  The FORMAT, NOTE, HEADER,
      XNOTE, YNOTE, SAVE, PRINT and PLOT commands can be
      intermixed in any order and repeated any number of times.

  27. There may be any number of BUILD command-groups, each consisting
      of a BUILD command followed by other commands.  Each BUILD command
      re-initialises the program and must be used to build a completely
      new chart.


  USE OF BATCDISP TO DISPLAY MEMBERS
  ----------------------------------

  28. Copy BATCDISP to a clist library and use it to display the charts
      generated in a TSO session e.g.

          %BATCDISP  TSO057.ADMGDF  IVPWEBBA



  29. You may have to modify BATCDISP if you do not have SADMMOD in your
      LINKLIST/STEPLIB.   You may also have to preallocate the
      ADMSYMBL DD to avoid msg ADM0320.

      To make these modifications, see comments embedded in BATCDISP




  ADVICE ON PROGRAMMING
  ---------------------

  31. In most cases you WILL want to use TIEDXVALUES.  The most frequent
      exceptions will be charts plotted with dates as X values.  In this
      case you may get X labels by using XNOTEs, or supply the YEARS
      modifier on the FORMAT command to get years as X labels.

      o  Use TIEDXVALUES when you want to plot groups which
         repeatedly reuse a fixed set of X values, and these X values
         can be meaningfully plotted at equal intervals

         Examples: hours in a day; months of a year; trading periods
         of a trading year; degrees in a circle.

      o  Do not use TIEDXVALUES if you want to plot groups which
         use X values at arbitrary and irregular intervals.

      o  Use FORMAT YEARS when you want to specify X values as dates and
         want to have X axis labels as calendar years.

      o  XNOTES normally turns off the standard X labels derived from
         tied X values or FORMAT YEARS.  If you want both standard X
         labels and XNOTES, specify XLABELS on the FORMAT command.

      If you use neither TIEDXVALUES, YEARS nor XNOTES, the labels along
      the X axis will be numeric.  You can control them to some extent
      by using XRANGE, XINTERVAL and XLABELROTATE


  32. A warning on Polar charts: the X axis is plotted clockwise through
      360 degrees from the vertical.  In some circumstances you must
      specify a dummy "last X value" and/or use the XRANGE modifier to
      get a Polar chart looking right.

      For instance, if you wished to plot data along the points of the
      compass you might start by specifying:

          TIEDXVALUES N NW W SW S SE E NE
          GROUP Max_windspeed
          DATUM N  14
          DATUM NW 12
          DATUM W  23
          DATUM SW 20
          DATUM S  13
          DATUM SE 11
          DATUM E  9
          DATUM NE 8


      However both N and NE would be plotted at 0 degrees (or rather N
      would be plotted at 0 degrees and NE at 360 degrees).

      To get past this specify a dummy last datum with the same Y value
      as the first.

        TIEDXVALUES N NW W SW S SE E NE _N_
        GROUP Max_windspeed
          DATUM N  14
          DATUM NW 12
          DATUM W  23
          DATUM SW 20
          DATUM S  13
          DATUM SE 11
          DATUM E  9
          DATUM NE 8
          DATUM _N_ 14

      N is plotted at 0 degrees and _N_ at 360 degrees.  Both N and _N_
      give a label "N" because the underscores are changed to spaces.

      The XRANGE modifier on the FORMAT command may help if you still
      have problems.  In the case above specify XRANGE 1 9 to make sure
      that N is plotted at 0 degrees and _N_ at 360 degrees.


  33. For histograms please note that the X values you give specify the
      START of the "steps".  You must provide an extra dummy X value to
      specify the ending point of the last step.  The Y value for
      this X value is ignored.



  ADVANCED TECHNIQUES - CREATING YOUR OWN FORMATS
  -----------------------------------------------


  40. If none of the standard formats will fulfil your needs, you can
      create your own formats using the GDDM-PGF  Interactive Chart
      Utility. See SC33-0328-??.  Save them on the BATCHART ADMCFORM
      library or on another library you concatenate.


  41. To do this you may wish to use the sample clist BATCICU.  This is
      packaged in this library.  Customise it in accordance with the
      comments within it and run it.



  HOW TO INSTALL BATCHART
  -----------------------


 60.  Prerequisites:

      o  OS/390, any level

      o  Language Environment, any level.

      o  COBOL II or later

      o  GDDM and GDDM-PGF


 61.  To install BATCHART

      o  The BATCHART COBOL library is in zipped TSO XMIT format. It is
         available from:

              http://home.clara.net/andywrobertson/mvsindex.html

         Follow the instructions at that site to download it, unzip it,
         SEND it to your mainframe as a flat file and TSO RECEIVE it
         into a library.

      o  Examine member BATCDOC (this member) for any updates

      o  Perform any customisations on the source of BATCHART.
         Sections where customisation is recommended are commented
         (search for the string "customise")  In particular you may
         want to change the section which recognises dates to adapt
         it to e.g. European or USA date formats.

      o  Customise and run the job BATCINS1. This will put BATCHART
         in a load library, which you must create beforehand.

      o  Customise and run the job BATCINS2. This will create the
         BATCHART ADMCFORM library.

      o  Copy BATCPROC to a procedure library and customise it according
         to its internal documentation (basically change dataset names).

      o  You may run BATCIVP1 and BATCIVP2.

      o  Copy BATCDISP to a CLIST library your TSO users can access.
         BATCDISP can be used on any graphics-capable terminal to
         display a GDF member created by BATCHART

      o  Sample clist BATCICU can be used to interface to the ICU
         and cause it to read/write to multiple libraries instead of
         one.  See comments in member BATCICU.

./ ADD NAME=BATCFORM 0100-10324-10324-2237-02085-02085-00000-TSO057
ß\INMR01 â  &  NODENAME  TSO057  MC1  TSO057  2003
42  È\INMR02     IEBCOPY       Ø    â    °     ° 
ñ  Ø         SFT BATCHART ADMCFORMå\INMR02     INMCOPY   
      â    "4      ñ  ç\INMR03         â   & ñ   {
 ­_ °°Ø  Ø  "8 Vs  ê    Å;Ø°&  ¦  Ø      ±  r0½ìÖh  
                                                                           
                                                                                
                                                                               
                Ø           WBATPRTBA  BATPRTHI   BATPRTLI   BATP
RTPI 	 BATPRTPO  BATPRTSC  BATPRTSU  BATPRTTO  BATPRTVE  BATWEBBA  
BATWEBHI  BATWEBLI  BATWEBPI  BATWEBPO 	 BATWEBSC 	 BATWEBSU  BATWEBTO
  BATWEBVE         
                                    Ø       
°BATPRTHIADMCFORM                       r€Í08 JUN 1999 11:57 AM      
                                                                                
                                                                                
   ~                                                                            
                                                                                
  ¬Ø       °BATPRTHIADMCFORM     BS                   çf  / H    
     â   {     *                                   çf  - õ^ H&     
â   {     *                                   çf  ¬ õÇ H     â   {  
   *            ~                        çf  ; õ õ^     â   {     
*                                   çf  ) óQ õÇ     â   {     *
                    Ø       °BATPRTHIADMCFORM           çf  * ó° õ
    â   {     *                                   çf  $ óç óQ     â  
 {     *                                   çf  ! ó  ó°     â   {     
*                               ~     çf  ß ò½ óç     â   {     *
                                çf  ì òø ó      â   {     *           
                        çf  ï ò Ø       °BATPRTHIADMCFORM   ò½     
â   {     *                                   çf  ê ö\ òø     â   {  
   *                                   çf  é öq ò     â   {     *
                                  çf  & ö& ö\~      â   {     *
                            çf  | ö öq     â   {     *               
                    çf  + ·^ ö&     â   {   Ø       °BATPRTHIADMCFO
RM   	  *                                   çf  ( ·Ç ö     â   {     
*                                   çf  < · ·^     â   {     *
                              çf  . ¥Q ·Ç     â   {     *~            
                        çf  ¢ ¥° ·     â   {     *                   
                çf  ñ ¥ç ¥Q     â   {     *               Ø       
°BATPRTHIADMCFORM                       çf  ç ¥  ¥°     â   {     *
                                  çf  å £½ ¥ç     â   {     *         
                          çf  ã £ø ¥      â   {     *                 
   ~                çf   £ £½     â   {     *                       
            çf   ^\ £ø     â   {     *                               
   Ø       °BATPRTHIADMCFORM    çf   ^q £     â   {     *
                              çf   ^& ^\     â   {     *             
                      çf   ^ ^q     â   {     *                     
              çf  ~  ¼^ ^&     â   {     *                           
        çf   ¼Ç ^     â   {     *                                  
 çf   ¼ ¼^   Ø       °BATPRTHIADMCFORM     â   {     *         
                          çf   ¶Q ¼Ç     â   {     *                 
                  çf   ¶° ¼     â   {     *                         
          çf   ¶ç ¶Q     â ~   {     *                               
    çf   ¶  ¶°     â   {     *                                   çf 
 	 §½ ¶ç     â   {     *   Ø       °BATPRTHIADMCFORM             
                      çf   §ø ¶      â   {     *                     
              çf   § §½     â   {     *                             
      çf   ©\ §ø     â   {     *        ~                           
 çf   ©q §     â   {     *                                   çf   
©& ©\     â   {     *                       Ø       °BATPRTHIADMCFO
RM               çf   © ©q     â   {     *                         
          çf   ]^ ©&     â   {     *                                
   çf   ]Ç ©     â   {     *                            ~        çf 
  ] ]^     â   {     *                                   çf   [Q 
]Ç     â   {     *                                   çf   Ø       
°BATPRTHIADMCFORM   [° ]     â   {     *                             
      çf   [ç [Q     â   {     *                                   ç
f   [  [°     â   {     *                                   çf   ¾½
 [~ ç     â   {     *                                   çf   ¾ø [ 
     â   {     *                                   çf   ¾ ¾½     â
   {Ø       °BATPRTHIADMCFORM        *                                
   çf   ½\ ¾ø     â   {     *                                   çf  
 ½q ¾     â   {     *                                   çf   ½& ½\
     â   {    ~  *                                   çf   ½ ½q   
  â   {     *                                   çf   ×^ ½&     â   {
     *           Ø       °BATPRTHIADMCFORM                           ç
f   ×Ç ½     â   {     *                                   çf   ×
 ×^     â   {     *                                   çf   ´Q ×Ç
    â   {     *                ~                    çf   ´° ×     â
   {     *                                   çf   ´ç ´Q     â   {   
  *                               Ø       °BATPRTHIADMCFORM       çf  
 ´  ´°     â   {     *                                   çf   ¨½ ´ç
     â   {     *                                   çf   ¨ø ´      
â   {     *                                   ~ çf   ¨ ¨½     â   {
     *                                   çf   ¯\ ¨ø     â   {     
*                                   çf   ¯q ¨Ø       °BATPRTHIADMCFO
RM        â   {     *                                   çf   ¯& ¯\
    â   {     *                                   çf   ¯ ¯q     â  
 {     *                                   çf  
 ë^ ¯&    ~  â   {   
  *                                   çf   ëÇ ¯     â   {     *
                                çf   ë ë^     â   {     Ø       
°BATPRTHIADMCFORM   *                                   çf  à êQ ëÇ     
â   {     *                                   çf  ä ê° ë     â   {  
   *                                   çf  â êç êQ     â   {     *
   ~                                çf    ê  ê°     â   {     *
                            çf    é½ êç     â   {     *               
    Ø       °BATPRTHIADMCFORM                   çf   éø ê      â  
 {     *                                   çf   é é½     â   {     
*                                   çf   &\ éø     â   {     *
                   ~            çf   &q é     â   {     *           
                        çf   && &\     â   {     *                   
                çf Ø       °BATPRTHIADMCFORM     & &q     â   {  
   *                                   çf   åh &&     â   {     *
                                  çf   å  &     â   {     *         
                          çf   ã~ 8 åh     â   {     *               
                    çf   ã^ å      â   {     *                       
            çf   ãÇ ã8     âØ       °BATPRTHIADMCFORM      {     
*                                   çf   áø ã^     â   {     *
                              4e    á ãÇØ ØØØØ ØØØÀØ      
   Øâ  âH             *                        ~                ØØØ â
  â  âÀ  â     {À  À    Ø âÀ                 .                  
     *                             çf  Ä à\ áøØ       °BATPRTHIADMCFO
RM        â   {     *                                   çf  Â àq á
    â   {     *                                   çf  î à& à\     â  
 {     *                                   çf  í à àq    ~  â   {   
  *                                   çf  è +} à&     â   {     *
                                çf  ë +h à     â   {     Ø       
°BATPRTHIADMCFORM   *                                   çf  á  Ç +}     
â   {     *                                   çf   (& +h     â   {  
   *                                  a        Ç                   
   ~                                                    
                                     	            	        
  Ø       °BATPRTHIADMCFORM                               
                                                  Åb    q
 (&                    Ø                                          
              Åb  ~  .µ   Ø                   Ø                
                                       g     &  q   *                     
       çd     .µØ       °BATPRTHIADMCFORM      	   *           
                              çd   .Ç  &      *                   
                      c   .     *                                  
 c   ¢} .Ç   *              ~                      -Ø    ¢h .Ø
  &	        Ø                      *       ØØ                   àh  
 ¢  ¢}{                           Ø       °BATPRTHIADMCFORM   âÀ      âÀ
             àh   ä^ ¢h                         µ  â  â  â!        
     àh   äÇ ¢                         â  â!  â  â!             àh   
ä ä^                         µ  â   µ  â     ~         àh  	 âQ äÇ    
                    â  â!   µ  â             çf        ä	     â  â  
   ADMUUKSF                                     {         Ø       °
BATPRTLIADMCFORM                       r€08 JUN 1999 12:00 PM        
                                                                                
                                                                                
 ~                                                                              
                                                                                
¬Ø       °BATPRTLIADMCFORM     ëÛ                   çf  ë H    
     â   {     *                                   çf  ê õ^ H&     â
   {     *                                   çf  é õÇ H     â   {   
  *            ~                        çf  & õ õ^     â   {     *
                                  çf  | óQ õÇ     â   {     *         
                  Ø       °BATPRTLIADMCFORM           çf  + ó° õ   
  â   {     *                                   çf  ( óç óQ     â   {
     *                                   çf  < ó  ó°     â   {     
*                               ~     çf  . ò½ óç     â   {     *
                              çf  ¢ òø ó      â   {     *             
                      çf  ñ ò Ø       °BATPRTLIADMCFORM   ò½     â
   {     *                                   çf  ç ö\ òø     â   {   
  *                                   çf  å öq ò     â   {     *
                                çf  ã ö& ö\~      â   {     *         
                          çf  á ö öq     â   {     *                 
                  çf  à ·^ ö&     â   {   Ø      
 °BATPRTLIADMCFORM
   	  *                                   çf  ä ·Ç ö     â   {     
*                                   çf  â · ·^     â   {     *
                            çf    ¥Q ·Ç     â   {     *~              
                      çf    ¥° ·     â   {     *                     
              çf   ¥ç ¥Q     â   {     *               Ø       °
BATPRTLIADMCFORM                       çf   ¥  ¥°     â   {     *
                                çf   £½ ¥ç     â   {     *           
                        çf   £ø ¥      â   {     *                   
 ~                çf   £ £½     â   {     *                         
          çf   ^\ £ø     â   {     *                                
  Ø       °BATPRTLIADMCFORM    çf   ^q £     â   {     *
                            çf   ^& ^\     â   {     *               
                    çf   ^ ^q     â   {     *                       
            çf  ~  ¼^ ^&     â   {     *                             
      çf   ¼Ç ^     â   {     *                                   ç
f   ¼ ¼^   Ø       °BATPRTLIADMCFORM     â   {     *           
                        çf   ¶Q ¼Ç     â   {     *                   
                çf   ¶° ¼     â   {     *                           
        çf   ¶ç ¶Q     â ~   {     *                                
   çf   ¶  ¶°     â   {     *                                   çf  
 §½ ¶ç     â   {     *   Ø       °BATPRTLIADMCFORM               
                    çf   §ø ¶      â   {     *                       
            çf   § §½     â   {     *                               
    çf   ©\ §ø     â   {     *        ~                            ç
f  * ©q §     â   {     *                                   çf  $ ©&
 ©\     â   {     *                       Ø       °BATPRTLIADMCFORM
               çf  ! © ©q     â   {     *                           
        çf  ß ]^ ©&     â   {     *                                  
 çf  ì ]Ç ©     â   {     *                            ~        çf  ï
 ] ]^     â   {     *                                   çf  î [Q ]Ç
     â   {     *                                   çf  í Ø       °
BATPRTLIADMCFORM   [° ]     â   {     *                               
    çf  è [ç [Q     â   {     *                                   çf 
  [  [°     â   {     *                                   çf   ¾½ 
[~ ç     â   {     *                                   çf   ¾ø [ 
    â   {     *                                   çf   ¾ ¾½     â  
 {Ø       °BATPRTLIADMCFORM        *                                  
 çf   ½\ ¾ø     â   {     *                                   çf   
½q ¾     â   {     *                                   çf  
 ½& ½\
     â   {    ~  *                                   çf   ½ ½q     
â   {     *                                   çf   ×^ ½&     â   {  
   *           Ø       °BATPRTLIADMCFORM                           çf 
  ×Ç ½     â   {     *                                   çf   × 
×^     â   {     *                                   çf   ´Q ×Ç   
  â   {     *                ~                    çf   ´° ×     â  
 {     *                                   çf   ´ç ´Q     â   {     
*                               Ø       °BATPRTLIADMCFORM       çf   
´  ´°     â   {     *                                   çf   ¨½ ´ç
     â   {     *                                   çf   ¨ø ´      â
   {     *                                   ~ çf   ¨ ¨½     â   {  
   *                                   çf   ¯\ ¨ø     â   {     *
                                  çf   ¯q ¨Ø       °BATPRTLIADMCFORM
        â   {     *                                   çf   ¯& ¯\   
  â   {     *                                   çf  	 ¯ ¯q     â   {
     *                                   çf   ë^ ¯&    ~  â   {     
*                                   çf   ëÇ ¯     â   {     *
                              çf   ë ë^     â   {     Ø       °
BATPRTLIADMCFORM   *                                   çf   êQ ëÇ     â
   {     *                                   çf   ê° ë     â   {   
  *                                   çf   êç êQ     â   {     *
 ~                                çf   ê  ê°     â   {     *         
                          çf   é½ êç     â   {     *                 
  Ø       °BATPRTLIADMCFORM                   çf   éø ê      â   {
     *                                   çf   é é½     â   {     
*                                   çf   &\ éø     â   {     *
                 ~            çf   &q é     â   {     *             
                      çf   && &\     â   {     *                     
              çf Ø       °BATPRTLIADMCFORM     & &q     â   {   
  *                                   çf   å½ &&     â   {     *
                                çf   åø &     â   {     *           
                        çf   å~  å½     â   {     *                 
                  çf   ã\ åø     â   {     *                         
          çf   ãq å     âØ       °BATPRTLIADMCFORM      {     
*                                   çf   ã& ã\     â   {     *
                            àh  	 ã ãq                        â  â!   µ  â
             àh   á{ ã&                   ~       µ  â   µ  â       
      àh   áÌ ã                        â  â!  â  â!             àh  
 á á{                         µ  â  â  â!   Ø       °BATPRTLIADMCFORM
             àh   à} áÌ{                           âÀ      âÀ        
     -Ø    àq áØ  &	        Ø                      *
Ø                    c    Ì à}   *                        ~            
c   à& àq   *                                   çd   à  Ì      
*                                         çd    ç à&   	Ø       °
BATPRTLIADMCFORM      *                                         g    
 \ à   *                            Åb   +h  çØ                   Ø   
                                                    Åb   (&  \  
 ~                  Ø                                               
        a     q +h                                             
 Ø       °BATPRTLIADMCFORM                                  
                                   	                      
            	   	                                      
             ~             çf    & (&     â   {     *
                            çf  )    q     â   {     *               
                 Ø       °BATPRTLIADMCFORM      çf  ; ä^  &     â  
 {     *                                   çf  ¬ äÇ       â   {     
*                                   çf  - ä ä^     â   {     *
                              çf~   / .Ø äÇ     â   {     *           
                        çf  Â . ä     â   {     *                   
                çf  Ä ¢  .Ø Ø       °BATPRTLIADMCFORM       â   {  
   *                                   4e    âQ .Ø ØØØØ ØØØÀØ
         Øâ  âH             *                                       
ØØØ â  â  âÀ  â     {À  À    Ø âÀ  ~                .      
                 *                             çf        ¢ 	     â  â   
  ADMUUKSF                                     {         Ø      	 °BA
TPRTPIADMCFORM                       r€ä?08 JUN 1999 12:24 PM          
                                                                                
                                                                               ~
                                                                                
                                                                              ¬
Ø       °BATPRTPIADMCFORM     â2 	                  çf  ë h    
    â   {     *                                   çf  ê ±^ h&     â  
 {     *                                   çf   ±Ç h     â   {     
*            ~                        çf   ± ±^     â   {     *
                                çf   þQ ±Ç     â   {     *           
                Ø       °BATPRTPIADMCFORM           çf   þ° ±     
â   {     *                                   çf   þç þQ     â   {  
   *                                   çf   þ  þ°     â   {     *
                              ~     çf   ý½ þç     â   {     *
                            çf   ýø þ      â   {     *               
                    çf   ý Ø       °BATPRTPIADMCFORM   ý½     â  
 {     *                                   çf   ð\ ýø     â   {     
*                                   çf   ðq ý     â   {     *
                              çf   ð& ð\~      â   {     *           
                        çf   ð ðq     â   {     *                   
                çf   Ë^ ð&     â   {   Ø       °BATPRTPIADMCFORM  
 	  *                                   çf   ËÇ ð     â   {     *
                                  çf   Ë Ë^     â   {     *         
                          çf   ÊQ ËÇ     â   {     *~                
                    çf   Ê° Ë     â   {     *                       
            çf   Êç ÊQ     â   {     *               Ø       °BA
TPRTPIADMCFORM                       çf   Ê  Ê°     â   {     *
                              çf  	 É½ Êç     â   {     *             
                      çf   Éø Ê      â   {     *                    ~
                çf   É É½     â   {     *                           
        çf  
 ø\ Éø     â   {     *                                  
Ø       °BATPRTPIADMCFORM    çf   øq É     â   {     *         
                          çf   ø& ø\     â   {     *                 
                  çf   ø øq     â   {     *                         
          çf  ~  Ï^ ø&     â   {     *                               
    çf   ÏÇ ø     â   {     *                                   çf 
  Ï Ï^   Ø       °BATPRTPIADMCFORM     â   {     *             
                      çf   ÎQ ÏÇ     â   {     *                     
              çf   Î° Ï     â   {     *                             
      çf   Îç ÎQ     â ~   {     *                                  
 çf   Î  Î°     â   {     *                                   çf   
Í½ Îç     â   {     *   Ø       °BATPRTPIADMCFORM                 
                  çf   Íø Î      â   {     *                         
          çf   Í Í½     â   {     *                                
   çf   È\ Íø     â   {     *        ~                            çf 
  Èq Í     â   {     *                                   çf   È& 
È\     â   {     *                       Ø       °BATPRTPIADMCFORM  
             çf   È Èq     â   {     *                             
      çf   #^ È&     â   {     *                                   ç
f   #Ç È     â   {     *                            ~        çf   
# #^     â   {     *                                   çf   :Q #Ç
     â   {     *                                   çf   Ø       °BA
TPRTPIADMCFORM   :° #     â   {     *                                
   çf   :ç :Q     â   {     *                                   çf  
 :  :°     â   {     *                                   çf   `½ :~
 ç     â   {     *                                   çf   `ø :    
  â   {     *                                   çf   ` `½     â   {
Ø       °BATPRTPIADMCFORM        *                                   ç
f   Ì\ `ø     â   {     *                                   çf   Ìq
 `     â   {     *                                   çf   Ì& Ì\
    â   {    ~  *                                   çf   Ì Ìq     â
   {     *                                   çf  ñ "^ Ì&     â   {   
  *           Ø       °BATPRTPIADMCFORM                           çf  ç
 "Ç Ì     â   {     *                                   çf  å " "^
     â   {     *                                   çf  ã =Q "Ç     
â   {     *                ~                    çf  á =° "     â   {
     *                                   çf  à =ç =Q     â   {     
*                               Ø       °BATPRTPIADMCFORM       çf  ä = 
 =°     â   {     *                                   çf  â '½ =ç
    â   {     *                                   çf    'ø =      â  
 {     *                                   ~ çf    ' '½     â   {   
  *                                   çf   @\ 'ø     â   {     *
                                çf   @q 'Ø       °BATPRTPIADMCFORM  
      â   {     *                                   çf   @& @\     
â   {     *                                   çf   @ @q     â   {  
   *                                   çf   ^ @&    ~  â   {     
*                                   çf   Ç @     â   {     *
                            çf    ^     â   {     Ø       °BA
TPRTPIADMCFORM   *                                   çf  * Q Ç     â  
 {     *                                   çf  $ °      â   {     
*                                   çf  ! ç Q     â   {     *    ~
                                çf  ß   °     â   {     *           
                        çf  ì ½ ç     â   {     *                   
Ø       °BATPRTPIADMCFORM                   çf  ï ø       â   {  
   *                                   çf  î  ½     â   {     *
                                  çf  í \ ø     â   {     *         
               ~            çf  è q      â   {     *               
                    çf  é & \     â   {     *                       
            çf Ø       °BATPRTPIADMCFORM    &  q     â   {     
*                                   çf  | ½ &     â   {     *
                              çf  + ø      â   {     *             
                      çf  ( ~  ½     â   {     *                   
                çf  < \ ø     â   {     *                           
        çf  . q      âØ       °BATPRTPIADMCFORM      {     *
                                  çf  ¢ & \     â   {     *         
                          àh  	  q                        â  â!   µ  â  
           àh   	{ &                   ~       µ  â   µ  â        
     àh   	Ì                         â  â!  â  â!             àh   
	 	{                         µ  â  â  â!   Ø       °BATPRTPIADMCFORM  
           àh   } 	Ì{                           âÀ      âÀ          
   -Ø    q 	Ø  &        Ø                      *       Ø 
                   c   Ì }   *                        ~            c
   & q   *                                   çd    Ì      
*                                         çd   ç &   	Ø       °BA
TPRTPIADMCFORM      *                                         g     \
    *                            Åb   h çØ                   Ø    
                                                   Åb   &  \   ~
                  Ø                                                 
      a     q h                                            
Ø       °BATPRTPIADMCFORM                                    
                                 	            	          
                                                       
           ~             çf    & &     â   {     *         
                          çf  )    q     â   {     *                 
               Ø       °BATPRTPIADMCFORM      çf  ; ^  &     â   {
     *                                   çf  ¬ Ç       â   {     
*                                   çf  -  ^     â   {     *
                            çf~   / Ø Ç     â   {     *             
                      çf  Â       â   {     *                     
              çf  Ä   Ø Ø       °BATPRTPIADMCFORM       â   {   
  *                                   4e    Q 	Ø ØØØØ ØØØÀØ
         Øâ  âH             *                                     
ØØØ â  â  âÀ  â     {À  À    Ø âÀ  ~                .        
               *                             çf         	     â  â     
ADMUUKSF                                     {         Ø       °BATP
RTPOADMCFORM                       r22 JUN 1999  1:02 PM            
                                                                                
                                                                             ~  
                                                                                
                                                                            ¬Ø
       °BATPRTPOADMCFORM     sä                   çf  / y       
  â   {     *                                   çf  - ®^ y&     â   {
     *                                   çf  ¬ ®Ç y     â   {     
*            ~                        çf  ; ® ®^     â   {     *
                              çf  ) ÞQ ®Ç     â   {     *             
              Ø       °BATPRTPOADMCFORM           çf  * Þ° ®     â
   {     *                                   çf  $ Þç ÞQ     â   {   
  *                                   çf  ! Þ  Þ°     â   {     *
                            ~     çf  ß Ý½ Þç     â   {     *         
                          çf  ì Ýø Þ      â   {     *                 
                  çf  ï Ý Ø       °BATPRTPOADMCFORM   Ý½     â   {
     *                                   çf   Ð\ Ýø     â   {     
*                                   çf   Ðq Ý     â   {     *
                            çf   Ð& Ð\~      â   {     *             
                      çf   Ð Ðq     â   {     *                     
              çf   l^ Ð&     â   {   Ø       °BATPRTPOADMCFORM   
  *                                   çf   lÇ Ð     â   {     *
                                çf   l l^     â   {     *           
                        çf   kQ lÇ     â   {     *~                  
                  çf   k° l     â   {     *                         
          çf   kç kQ     â   {     *               Ø       °BATP
RTPOADMCFORM                       çf  	 k  k°     â   {     *
                            çf   j½ kç     â   {     *               
                    çf   jø k      â   {     *                    ~  
              çf   j j½     â   {     *                             
      çf   °\ jø     â   {     *                                  Ø
       °BATPRTPOADMCFORM    çf   °q j     â   {     *           
                        çf   °& °\     â   {     *                   
                çf   ° °q     â   {     *                           
        çf  ~  p^ °&     â   {     *                                
   çf   pÇ °     â   {     *                                   çf  
 p p^   Ø      
 °BATPRTPOADMCFORM     â   {     *               
                    çf   oQ pÇ     â   {     *                       
            çf   o° p     â   {     *                               
    çf   oç oQ     â ~   {     *                                   ç
f   o  o°     â   {     *                                   çf   n½
 oç     â   {     *   Ø       °BATPRTPOADMCFORM                   
                çf   nø o      â   {     *                           
        çf   n n½     â   {     *                                  
 çf   m\ nø     â   {     *        ~                            çf  
 mq n     â   {     *                                   çf   m& m\
     â   {     *                       Ø       °BATPRTPOADMCFORM   
            çf   m mq     â   {     *                               
    çf   º^ m&     â   {     *                                   çf 
  ºÇ m     â   {     *                            ~        çf   º
 º^     â   {     *                                   çf   ªQ ºÇ
    â   {     *                                   çf  
 Ø       °BATP
RTPOADMCFORM   ª° º     â   {     *                                  
 çf   ªç ªQ     â   {     *                                   çf   
ª  ª°     â   {     *                                   çf   r½ ª~ ç
     â   {     *                                   çf   rø ª      
â   {     *                                   çf   r r½     â   {Ø
       °BATPRTPOADMCFORM        *                                   çf 
  q\ rø     â   {     *                                   çf   qq 
r     â   {     *                                   çf   q& q\   
  â   {    ~  *                                   çf   q qq     â  
 {     *                                   çf    €^ q&     â   {     
*           Ø       °BATPRTPOADMCFORM                           çf   
€Ç q     â   {     *                                   çf   € €^
     â   {     *                                   çf   ÆQ €Ç     â
   {     *                ~                    çf   Æ° €     â   {  
   *                                   çf   Æç ÆQ     â   {     *
                              Ø       °BATPRTPOADMCFORM       çf   Æ  
Æ°     â   {     *                                   çf   ¸½ Æç   
  â   {     *                                   çf   ¸ø Æ      â   {
     *                                   ~ çf   ¸ ¸½     â   {     
*                                   çf   æ\ ¸ø     â   {     *
                              çf   æq ¸Ø       °BATPRTPOADMCFORM   
     â   {     *                                   çf   æ& æ\     â
   {     *                                   çf   æ æq     â   {   
  *                                   çf   ^ æ&    ~  â   {     *
                                  çf   Ç æ     â   {     *         
                          çf    ^     â   {     Ø       °BATP
RTPOADMCFORM   *                                   çf  é Q Ç     â   {
     *                                   çf  & °      â   {     
*                                   çf  | ç Q     â   {     *    ~
                              çf  +   °     â   {     *             
                      çf  ( ½ ç     â   {     *                   Ø
       °BATPRTPOADMCFORM                   çf  < ø       â   {   
  *                                   çf  .  ½     â   {     *
                                çf  ¢ \ ø     â   {     *           
             ~            çf  ñ q      â   {     *                 
                  çf  ç & \     â   {     *                         
          çf Ø       °BATPRTPOADMCFORM    å  q     â   {     
*                                   çf  ã ½ &     â   {     *
                            çf  á ø      â   {     *               
                    çf  à ~  ½     â   {     *                     
              çf  ä \ ø     â   {     *                             
      çf  â q      âØ       °BATPRTPOADMCFORM      {     *
                                çf    & \     â   {     *           
                        àh  	  q                        â  â!   µ  â   
          àh   
{ &                   ~       µ  â   µ  â          
   àh   
Ì                         â  â!  â  â!             àh   

 
{                         µ  â  â  â!   Ø       °BATPRTPOADMCFORM   
          àh   } 
Ì{                           âÀ      âÀ            
 -Ø    q 
Ø  &                              *       Ø   
                 c   Ì }   *                        ~            c  
 & q   *                                   çd    Ì      *
                                        çd   ç &   	Ø       °BATP
RTPOADMCFORM      *                                         g    \ 
   *                            Åb   h ç                    Ø    
                                                   Åb   & \   ~  
                Ø                                                   
    a    q h                                            Ø
       °BATPRTPOADMCFORM                                     
                                	            	          
                                                        
          ~             çf   & &     â   {     *           
                        çf  ê  q     â   {     *                   
             Ø       °BATPRTPOADMCFORM      çf  ë ^ &     â   {  
   *                                   çf  è Ç      â   {     *
                                  çf  í  ^     â   {     *         
                          çf~   î Ø Ç     â   {     *               
                    çf  Â       â   {     *                       
            çf  Ä   Ø Ø       °BATPRTPOADMCFORM       â   {     
*                                   4e    Q Ø ØØØØ ØØØÀØ
         Øâ  âH             *                                       ØØ
Ø â  â  âÀ  â     {À  À    Ø âÀ  ~                .          
             *                             çf         	     â  â     
ADMUUKSF                                     {         Ø       °BATPRT
SCADMCFORM                       r€08 JUN 1999  1:33 PM              
                                                                                
                                                                           ~    
                                                                                
                                                                          ¬Ø  
     °BATPRTSCADMCFORM     øÂ                   çf   Ì         
â   {     *                                   çf   "^ Ì&     â   {  
   *                                   çf   "Ç Ì     â   {     *
           ~                        çf   " "^     â   {     *
                            çf   =Q "Ç     â   {     *               
            Ø       °BATPRTSCADMCFORM           çf   =° "     â  
 {     *                                   çf   =ç =Q     â   {     
*                                   çf   =  =°     â   {     *
                          ~     çf   '½ =ç     â   {     *           
                        çf   'ø =      â   {     *                   
                çf   ' Ø       °BATPRTSCADMCFORM   '½     â   {  
   *                                   çf   @\ 'ø     â   {     *
                                  çf  	 @q '     â   {     *         
                          çf   @& @\~      â   {     *               
                    çf   @ @q     â   {     *                       
            çf   ^ @&     â   {   Ø       °BATPRTSCADMCFORM   	  
*                                   çf  ë Ç @     â   {     *
                              çf  ê  ^     â   {     *             
                      çf  é Q Ç     â   {     *~                    
                çf  & °      â   {     *                           
        çf  | ç Q     â   {     *               Ø      	 °BATPRT
SCADMCFORM                       çf  +   °     â   {     *         
                          çf  ( ½ ç     â   {     *                 
                  çf  < ø       â   {     *                    ~    
            çf  .  ½     â   {     *                               
    çf  ¢ \ ø     â   {     *                                  Ø  
     °BATPRTSCADMCFORM    çf  ñ q      â   {     *             
                      çf  ç & \     â   {     *                     
              çf  å  q     â   {     *                             
      çf  ~ ã ^ &     â   {     *                                  
 çf  á Ç      â   {     *                                   çf  à 
 ^   Ø       °BATPRTSCADMCFORM     â   {     *                 
                  çf  ä Q Ç     â   {     *                         
          çf  â °      â   {     *                                
   çf    ç Q     â ~   {     *                                   çf 
     °     â   {     *                                   çf   ½ 
ç     â   {     *   Ø       °BATPRTSCADMCFORM                     
              çf   ø       â   {     *                             
      çf    ½     â   {     *                                   ç
f   \ ø     â   {     *        ~                            çf   
q      â   {     *                                   çf   & \
     â   {     *                       Ø       °BATPRTSCADMCFORM     
          çf    q     â   {     *                                
   çf   ^ &     â   {     *                                   çf  
 Ç      â   {     *                            ~        çf    
^     â   {     *                                   çf   Q Ç   
  â   {     *                                   çf   Ø       °BATPRT
SCADMCFORM   °      â   {     *                                   ç
f   ç Q     â   {     *                                   çf    
 °     â   {     *                                   çf   ½ ~ ç
     â   {     *                                   çf   ø       â
   {     *                                   çf    ½     â   {Ø  
     °BATPRTSCADMCFORM        *                                   çf  
 \ ø     â   {     *                                   çf   q 
     â   {     *                                   çf   & \     
â   {    ~  *                                   çf    q     â   {
     *                                   çf   ^ &     â   {     
*           Ø       °BATPRTSCADMCFORM                           çf   Ç
      â   {     *                                   çf    ^
    â   {     *                                   çf   Q Ç     â  
 {     *                ~                    çf  
 °      â   {   
  *                                   çf   ç Q     â   {     *
                            Ø       °BATPRTSCADMCFORM       çf     °
     â   {     *                                   çf   ½ ç     
â   {     *                                   çf   ø       â   {  
   *                                   ~ çf    ½     â   {     
*                                   çf   \ ø     â   {     *
                            çf   q Ø       °BATPRTSCADMCFORM   
    â   {     *                                   çf   & \     â  
 {     *                                   çf    q     â   {     
*                                   çf   L^ &    ~  â   {     *
                                çf   LÇ      â   {     *           
                        çf   L L^     â   {     Ø       °BATPRT
SCADMCFORM   *                                   çf  * KQ LÇ     â   {  
   *                                   çf  $ K° L     â   {     *
                                  çf  ! Kç KQ     â   {     *    ~
                            çf  ß K  K°     â   {     *               
                    çf  ì J½ Kç     â   {     *                   Ø  
     °BATPRTSCADMCFORM                   çf  ï Jø K      â   {     
*                                   çf  î J J½     â   {     *
                              çf  í }\ Jø     â   {     *             
           ~            çf  è }q J     â   {     *                   
                çf   }& }\     â   {     *                           
        çf Ø       °BATPRTSCADMCFORM     } }q     â   {     *
                                  çf   Gh }&     â   {     *         
                          çf   G  }     â   {     *                 
                  çf   F~ 8 Gh     â   {     *                       
            çf   F^ G      â   {     *                               
    çf   FÇ F8     âØ       °BATPRTSCADMCFORM      {     *
                              çf   Eø F^     â   {     *             
                      4e    E FÇØ ØØØØ ØØØÀØ         Øâ  
âH             *                        ~                ØØØ â  â  âÀ
  â     {À  À      âÀ                 .                       *
                             çf  Ä D\ EøØ       °BATPRTSCADMCFORM   
    â   {     *                                   çf  Â Dq E     â  
 {     *                                   çf  / D& D\     â   {     
*                                   çf  - D Dq    ~  â   {     *
                                çf  ¬ ó} D&     â   {     *           
                        çf  ; óh D     â   {     Ø       °BATPRT
SCADMCFORM   *                                   çf  ) AÇ ó}     â   {  
   *                                   çf   ò& óh     â   {     *
                                 a    A  AÇ                      ~  
                                                         
                              	            	          Ø  
     °BATPRTSCADMCFORM                                     
                                            Åb   {q ò&   
                 Ø                                                  
      Åb  ~  ôµ A Ø                   Ø                        
                               g    {& {q   *                            ç
d   { ôµØ       °BATPRTSCADMCFORM      	   *                   
                      çd   ôÇ {&      *                          
               c   ô {   *                                   c   
­} ôÇ   *              ~                      -Ø    ­h ôØ  &	
        Ø                      *       Ø                    àh   ­  ­}
{                           Ø       °BATPRTSCADMCFORM   âÀ      âÀ     
        àh   C^ ­h                         µ  â  â  â!             àh 
  CÇ ­                         â  â!  â  â!             àh   C C^  
                       µ  â   µ  â     ~         àh  	 BQ CÇ        
            â  â!   µ  â             çf        C	     â  â     AD
MUUKSF                                     {         Ø       °BATPRTSU
ADMCFORM                       r€ä±08 JUN 1999  1:34 PM                
                                                                                
                                                                         ~      
                                                                                
                                                                        ¬Ø    
   °BATPRTSUADMCFORM     -2                   çf  ¬ Ì         â
   {     *                                   çf  ; "^ Ì&     â   {   
  *                                   çf  & "Ç Ì     â   {     *
         ~                        çf  | " "^     â   {     *         
                          çf  + =Q "Ç     â   {     *                 
          Ø       °BATPRTSUADMCFORM           çf  ( =° "     â   {
     *                                   çf  é =ç =Q     â   {     
*                                   çf  < =  =°     â   {     *
                        ~     çf  . '½ =ç     â   {     *             
                      çf  ¢ 'ø =      â   {     *                     
              çf  ñ ' Ø       °BATPRTSUADMCFORM   '½     â   {   
  *                                   çf  ç @\ 'ø     â   {     *
                                çf  å @q '     â   {     *           
                        çf  ã @& @\~      â   {     *                 
                  çf  á @ @q     â   {     *                         
          çf  à ^ @&     â   {   Ø       °BATPRTSUADMCFORM   	  
*                                   çf  ä Ç @     â   {     *
                            çf  â  ^     â   {     *               
                    çf    Q Ç     â   {     *~                      
              çf    °      â   {     *                             
      çf   ç Q     â   {     *               Ø       °BATPRTSU
ADMCFORM                       çf     °     â   {     *           
                        çf   ½ ç     â   {     *                   
                çf   ø       â   {     *                    ~      
          çf    ½     â   {     *                                
   çf   \ ø     â   {     *                                  Ø    
   °BATPRTSUADMCFORM    çf   q      â   {     *               
                    çf   & \     â   {     *                       
            çf    q     â   {     *                               
    çf  ~  ^ &     â   {     *                                   ç
f   Ç      â   {     *                                   çf   
 ^   Ø       °BATPRTSUADMCFORM     â   {     *                   
                çf   Q Ç     â   {     *                           
        çf   °      â   {     *                                  
 çf   ç Q     â ~   {     *                                   çf  
   °     â   {     *                                   çf   ½ ç
     â   {     *   Ø       °BATPRTSUADMCFORM                       
            çf   ø       â   {     *                               
    çf    ½     â   {     *                                   çf 
  \ ø     â   {     *        ~                            çf   q
      â   {     *                                   çf  ! & \
    â   {     *                       Ø       °BATPRTSUADMCFORM       
        çf  ß  q     â   {     *                                  
 çf  ì ^ &     â   {     *                                   çf  ï 
Ç      â   {     *                            ~        çf  î  ^
     â   {     *                                   çf  í Q Ç     
â   {     *                                   çf  è Ø       °BATPRTSU
ADMCFORM   °      â   {     *                                   çf 
 ë ç Q     â   {     *                                   çf  ê   
°     â   {     *                                   çf   ½ ~ ç
    â   {     *                                   çf   ø       â  
 {     *                                   çf    ½     â   {Ø    
   °BATPRTSUADMCFORM        *                                   çf   
\ ø     â   {     *                                   çf   q 
     â   {     *                                   çf  
 & \     â
   {    ~  *                                   çf    q     â   {  
   *                                   çf   ^ &     â   {     *
          Ø      
 °BATPRTSUADMCFORM                           çf   Ç 
     â   {     *                                   çf    ^   
  â   {     *                                   çf   Q Ç     â   {
     *                ~                    çf   °      â   {     
*                                   çf   ç Q     â   {     *
                          Ø       °BATPRTSUADMCFORM       çf     °
     â   {     *                                   çf   ½ ç     â
   {     *                                   çf   ø       â   {   
  *                                   ~ çf    ½     â   {     *
                                  çf   \ ø     â   {     *         
                          çf   q Ø       °BATPRTSUADMCFORM      
  â   {     *                                   çf   & \     â   {
     *                                   çf  	  q     â   {     
*                                   çf   L^ &    ~  â   {     *
                              çf   LÇ      â   {     *             
                      çf   L L^     â   {     Ø       °BATPRTSU
ADMCFORM   *                                   çf   KQ LÇ     â   {   
  *                                   çf   K° L     â   {     *
                                çf   Kç KQ     â   {     *    ~      
                          çf   K  K°     â   {     *                 
                  çf   J½ Kç     â   {     *                   Ø    
   °BATPRTSUADMCFORM                   çf   Jø K      â   {     
*                                   çf   J J½     â   {     *
                            çf   }\ Jø     â   {     *               
         ~            çf   }q J     â   {     *                     
              çf   }& }\     â   {     *                             
      çf Ø       °BATPRTSUADMCFORM     } }q     â   {     *
                                çf   G½ }&     â   {     *           
                        çf   Gø }     â   {     *                   
                çf   G~  G½     â   {     *                         
          çf   F\ Gø     â   {     *                                
   çf   Fq G     âØ       °BATPRTSUADMCFORM      {     *
                            çf   F& F\     â   {     *               
                    àh  	 F Fq                        â  â!   µ  â     
        àh   E{ F&                   ~       µ  â   µ  â             à
h   EÌ F                        â  â!  â  â!             àh   E E{
                         µ  â  â  â!   Ø       °BATPRTSUADMCFORM     
        àh   D} EÌ{                           âÀ      âÀ             -Ø 
   Dq EØ  &	        Ø                      *       Ø       
             c   AÌ D}   *                        ~            c   D&
 Dq   *                                   çd   D AÌ      *
                                    çd   Aç D&   	Ø       °BATPRTSU
ADMCFORM      *                                         g    {\ D 
  *                            Åb   óh AçØ                   Ø    
                                                   Åb   ò& {\   ~      
            Ø                                                       
a    {q óh                                            Ø    
   °BATPRTSUADMCFORM                                         
                            	            	             
                                                        
       ~             çf   {& ò&     â   {     *               
                    çf  $ { {q     â   {     *                       
         Ø       °BATPRTSUADMCFORM      çf  * C^ {&     â   {     
*                                   çf  ) CÇ {     â   {     *
                              çf  - C C^     â   {     *             
                      çf~   / ôØ CÇ     â   {     *                   
                çf  Â ô C     â   {     *                           
        çf  Ä ­  ôØ Ø       °BATPRTSUADMCFORM       â   {     *
                                  4e    BQ ôØ ØØØØ ØØØÀØ   
      Øâ  âH             *                                       ØØØ 
â  â  âÀ  â     {À  À    Ø âÀ  ~                .              
         *                             çf        ­ 	     â  â     ADMU
UKSF                                     {         Ø       °BATPRTTOAD
MCFORM                       r¬10 JUN 1999 11:03 AM                  
                                                                                
                                                                       ~        
                                                                                
                                                                      ¬Ø     
  °BATPRTTOADMCFORM     €Á                   çf        	     â  
â     ADMUUKSF                            4e     ìØ ØØØØ Ø
ØØÀØ         Øâ  âH           ·*        Ø    â!                     
   Ø~ ØØ â  â  â  â     {À  À    Ø âÀ                 .  
                     *                             çf  Ä H      â   {
     Ø       °BATPRTTOADMCFORM   *                                   ç
f  Â Ø      â   {     *                                   çf  / 
 H     â   {     *                                   çf  - 0 Ø
    â   {     *    ~                                çf  ¬ y      â
   {     *                                   çf  ; ^ 0     â   {   
  *                   Ø       °BATPRTTOADMCFORM                   çf  
 ø y     â   {     *                                  a     ^
                                                               
                               ~                             	  
          	                                                    
                               Ø       °BATPRTTOADMCFORM   	    
             Åb   ç ø               Ø    Ø                  
                                      Åb    Ø              Ø    Ø    
                                             ~       g    } ç   
*                            çd   h    	   *                     
                    çd   & }      *     Ø        °BATPRTTOAD
MCFORM                                       c    h   *           
                        c   ½ &   *                                  
 -Ø    ø Ø  &	        Ø                      *  ~      Ø 
                   àh    ½{                           âÀ      âÀ       
      àh   \ ø                         µ  â  â  â!          Ø     
   °BATPRTTOADMCFORM      àh   q                         â  â!  â  â!
             àh   & \                         µ  â   µ  â        
     àh  	  q                        â  â!   µ  â             çf   
^ &~      â   {     *                                   çf   Ç 
     â   {     *                                   çf    ^     
â   {  Ø        °BATPRTTOADMCFORM      *                               
    çf   Q Ç     â   {     *                                   çf 
  °      â   {     *                                   çf   ç 
Q     â   {     ~ *                                   çf     °
    â   {     *                                   çf   
½ ç     â  
 {     *             Ø        °BATPRTTOADMCFORM                        
 çf   
ø       â   {     *                                   çf  í 

 
½     â   {     *                                   çf  î \ 
ø
     â   {     *                  ~                  çf  ï q 
     
â   {     *                                   çf  ì & \     â   {  
   *                                Ø       	 °BATPRTTOADMCFORM      çf 
 ß  q     â   {     *                                   çf  ) ^ 
&     â   {     *                                   çf  ! Ç    
  â   {     *                                   çf~   $  ^     â  
 {     *                                   çf  * Q Ç     â   {     
*                                   çf  	 °  Ø        °BATPRTTOAD
MCFORM       â   {     *                                   çf   ç Q
     â   {     *                                   çf     °     â
   {     *                                   çf   ½ ç     â~    {  
   *                                   çf   ø       â   {     *
                                  çf    ½     â   {     * Ø     
   °BATPRTTOADMCFORM                                     çf   \ ø   
  â   {     *                                   çf   q      â   {
     *                                   çf   & \     â   {     
*      ~                              çf    q     â   {     *
                              çf   ^ &     â   {     *             
        Ø        °BATPRTTOADMCFORM                 çf   Ç      â
   {     *                                   çf    ^     â   {   
  *                                   çf   Q Ç     â   {     *
                       ~          çf   °      â   {     *         
                          çf   ç Q     â   {     *                 
                  çf  Ø        °BATPRTTOADMCFORM      °     â   {
     *                                   çf   ½ ç     â   {     
*                                   çf   ø       â   {     *
                            çf    ~ ½     â   {     *             
                      çf   \ ø     â   {     *                     
              çf   q      â  Ø        °BATPRTTOADMCFORM    {   
  *                                   çf   & \     â   {     *
                                çf    q     â   {     *           
                        çf   C^ &     â   {   ~   *                 
                  çf   CÇ      â   {     *                         
          çf   C C^     â   {     *         Ø        °BATPRTTOAD
MCFORM                             çf   BQ CÇ     â   {     *
                            çf   B° C     â   {     *               
                    çf   Bç BQ     â   {     *              ~        
              çf   B  B°     â   {     *                             
      çf   A½ Bç     â   {     *                             Ø     
   °BATPRTTOADMCFORM         çf   Aø B      â   {     *           
                        çf   A A½     â   {     *                   
                çf   {\ Aø     â   {     *                           
      ~   çf   {q A     â   {     *                                
   çf   {& {\     â   {     *                                   çf  
 { {qØ        °BATPRTTOADMCFORM        â   {     *               
                    çf   ¼^ {&     â   {     *                       
            çf   ¼Ç {     â   {     *                               
    çf   ¼ ¼^  ~    â   {     *                                   ç
f   ¶Q ¼Ç     â   {     *                                   çf   ¶°
 ¼     â   {     Ø        °BATPRTTOADMCFORM   *                   
                çf  
 ¶ç ¶Q     â   {     *                           
        çf   ¶  ¶°     â   {     *                                  
 çf   §½ ¶ç     â   {     *  ~                                  çf  
 §ø ¶      â   {     *                                   çf   § §½
     â   {     *                 Ø        °BATPRTTOADMCFORM         
            çf   ©\ §ø     â   {     *                               
    çf   ©q §     â   {     *                                   çf 
 ä ©& ©\     â   {     *                      ~              çf  à ©
 ©q     â   {     *                                   çf  á ´½ ©&
    â   {     *                                   çØ        °BATPRTTOAD
MCFORM   f  ã ´ø ©     â   {     *                                  
 çf  å ´ ´½     â   {     *                                   çf  ç 
¨\ ´ø     â   {     *                                   çf  ñ ~ ¨q ´
     â   {     *                                   çf  ¢ ¨& ¨\     
â   {     *                                   çf  . £ø ¨q     Ø     
   °BATPRTTOADMCFORM   â   {     *                                   çf 
 < £ ¨&     â   {     *                                   çf  ( ^\ 
£ø     â   {     *                                   çf  + ^q £   
  â   ~ {     *                                   çf  è ^& ^\     â  
 {     *                                   çf  | ^ ^q     â   {     
*     Ø        °BATPRTTOADMCFORM                                 çf  & 
]- ^&     â   {     *                                   çf  é ] ^
     â   {     *                                   çf  ê [} ]-     â
   {     *          ~                          çf  ë [h ]     â   {  
   *                                   çf   [  [}     â   {     *
                        Ø        °BATPRTTOADMCFORM             çf   ·^ 
[h     â   {     *                                   çf   ·Ç [    
  â   {     *                                   çf    · ·^     â   {
     *                              ~      çf    ¥Q ·Ç     â   {     
*                                   çf  â     ·     â   {     *
                                       {          Ø        °BATPRTVEADMC
FORM                       raÀ|21 MAY 1999  6:16 PM                    
                                                                                
                                                                     ~          
                                                                                
                                                                    ¬Ø       
 °BATPRTVEADMCFORM     Ì3                   4e    È\    Ø ØØØØ Ø
ØØÀØ         Øâ  âH             *                              
         ØØØ â  â  âÀ  â     {À  À    Ø âÀ                 
.   ~                     *                             çf   Èq Í     
â   {      *                                   çf   È& È\     â   {  
    Ø        °BATPRTVEADMCFORM   *                                   çf 
  È Èq     â   {      *                                   çf  	 ÉÇ 
È&     â   {      *                                   çf   É È   
  â   {      *    ~                                çf   =} ÉÇ     â  
 {      *                                   çf   =h É     â   {     
 *                   Ø        °BATPRTVEADMCFORM                   çf   
'& =}     â   {      *                                  a    ø½ =h 
                                                          
    	                      ~                          	   
         	                                               
                            Ø        °BATPRTVEADMCFORM   	      
        Åb   ø& '&                                          
                                    Åb   #µ ø½Ø                        
                                               ~       g    ø ø&   
*                            çd   #ì #µ   	   *             â!        
                  çd   # ø      *     Ø        °BATPRTVEADMC
FORM           â!                          c   :Y #ì   *             
                      c   :h #   *                                   -
Ø    :  :YØ  &        Ø                      *  ~      Ø   
                 àh   Ë^ :h{                           âÀ      âÀ        
     àh   ËÇ :                          µ  â  â  â!          Ø       
 °BATPRTVEADMCFORM      àh   Ë Ë^                        â  â!  â  â!  
           àh   ÊQ ËÇ                         µ  â   µ  â          
   àh  	     Ë                        â  â!   µ  â                      
     ~                                                                          
                                                                                
      {          Ø        °BATWEBBAADMCFORM                       r
	Ë10 JUN 1999 10:57 AM                                                      
                                                                                
                                   ~                                            
                                                                                
                                  ¬Ø        °BATWEBBAADMCFORM     ~ 
                  àh  	 y&                            â  â!   µ  â       
      àh   y yq                         µ  â   µ  â             àh  
 ®Ø y&                        â  â!  â  â!    ~          àh   ® y  
                       µ  â  â  â!             àh   ÞQ ®Ø{       
              âÀ      âÀ             -Ø    Þµ Ø        °BATWEBBAADMCFO
RM   ®Ø  &	        Ø                    *       Ø         
           c   ÞÇ ÞQ *                                   c   Þ Þµ
 *                                   çd   ÝQ ÞÇ    ~ *
                                  çd   Ýy Þ   	 *               
                          g    Ý  ÝQ   *                   Ø        
°BATWEBBAADMCFORM            Åb   Ëh ÝyØ                   Ø    
                                                   Åb   Ð Ý             
        Ø                                                       a 
   ~ Ë  Ëh                                                    
                                                           
Ø        °BATWEBBAADMCFORM   	                	               
                                                           
                 çf   Ê8 Ð     â   {     *                   
                çf~   î Ê^ Ë      â   {     *                         
          çf  ; ÊÇ Ê8     â   {     *                                
   çf  ¬ Ê Ê^ Ø        °BATWEBBAADMCFORM       â   {     *
                            çf  - ÉQ ÊÇ     â   {     *               
                    çf  / É° Ê     â   {     *                       
            çf  Â Éç ÉQ     â~    {     *                             
      çf  Ä ø& É°     â   {     *                                   4
e    ø ÉçØ ØØØØ ØØØÀØØ        °BATWEBBAADMCFORM       
     Øâ  âH           ·*        Ø    â!                        ØØØ â
  â  âÀ  â     {À  À    Ø âÀ                 .                  
     *                             çf    Ï^ ø&~ 	     â  â     ADMUUK
SF                            çf  á ÏÇ ø     â   {     *             
                      çf  ã Ï Ï^     â   {  Ø        °BATWEBBAADMCFO
RM      *                                   çf  å ÎQ ÏÇ     â   {   
  *                                   çf  ç Î° Ï     â   {     *
                                çf  ñ Îç ÎQ     â   {     ~ *         
                          çf  ¢ Î  Î°     â   {     *                 
                  çf  . Í½ Îç     â   {     *             Ø       
 
°BATWEBBAADMCFORM                         çf  < Íø Î      â   {     
*                                   çf  ( Í Í½     â   {     *
                            çf  + È\ Íø     â   {     *               
   ~                  çf  | Èq Í     â   {     *                     
              çf  & È& È\     â   {     *                             
   Ø        °BATWEBBAADMCFORM      çf  é È Èq     â   {     *
                                çf  ê #^ È&     â   {     *           
                        çf  ë #Ç È     â   {     *                   
                çf~   è # #^     â   {     *                         
          çf  í :Q #Ç     â   {     *                                
   çf   :° # Ø        °BATWEBBAADMCFORM       â   {     *
                            çf   :ç :Q     â   {     *               
                    çf   :  :°     â   {     *                       
            çf   `½ :ç     â~    {     *                             
      çf   `ø :      â   {     *                                   ç
f   ` `½     â   {     * Ø        °BATWEBBAADMCFORM             
                        çf   Ì\ `ø     â   {     *                   
                çf   Ìq `     â   {     *                           
        çf   Ì& Ì\     â   {     *      ~                           
   çf   Ì Ìq     â   {     *                                   çf  
 "^ Ì&     â   {     *                     Ø        °BATWEBBAADMCFO
RM                 çf   "Ç Ì     â   {     *                       
            çf    " "^     â   {     *                               
    çf    =Q "Ç     â   {     *                          ~          ç
f  â =° "     â   {     *                                   çf  ä =ç
 =Q     â   {     *                                   çf  àØ        
°BATWEBBAADMCFORM    =  =°     â   {     *                           
        çf   '½ =ç     â   {     *                                  
 çf   'ø =      â   {     *                                   çf  
 
' ~ '½     â   {     *                                   çf   @\ 'ø
     â   {     *                                   çf   @q '     
â  Ø        °BATWEBBAADMCFORM    {     *                               
    çf   @& @\     â   {     *                                   çf 
  @ @q     â   {     *                                   çf   L^ 
@&     â   {   ~   *                                   çf   LÇ @
    â   {     *                                   çf   L L^     â  
 {     *         Ø        °BATWEBBAADMCFORM                            
 çf   KQ LÇ     â   {     *                                   çf   
K° L     â   {     *                                   çf   Kç KQ
     â   {     *              ~                      çf   K  K°     
â   {     *                                   çf   J½ Kç     â   {  
   *                             Ø        °BATWEBBAADMCFORM         çf 
  Jø K      â   {     *                                   çf   J 
J½     â   {     *                                   çf   }\ Jø   
  â   {     *                                 ~   çf   }q J     â  
 {     *                                   çf   }& }\     â   {     
*                                   çf   } }qØ        °BATWEBBAADMCFO
RM        â   {     *                                   çf   G^ }&
     â   {     *                                   çf   GÇ }     â
   {     *                                   çf   G G^  ~    â   {  
   *                                   çf   FQ GÇ     â   {     *
                                  çf   F° G     â   {     Ø        
°BATWEBBAADMCFORM   *                                   çf   Fç FQ   
  â   {     *                                   çf   F  F°     â   {
     *                                   çf   E½ Fç     â   {     
*  ~                                  çf   Eø F      â   {     *
                              çf   E E½     â   {     *             
    Ø        °BATWEBBAADMCFORM                     çf   D\ Eø     â
   {     *                                   çf   Dq E     â   {   
  *                                   çf   D& D\     â   {     *
                   ~              çf   D Dq     â   {     *         
                          çf   ó½ D&     â   {     *                 
                  çØ        °BATWEBBAADMCFORM   f   óø D     â   {
     *                                   çf  	 ó ó½     â   {     
*                                   çf   ò\ óø     â   {     *
                            çf   ~ òq ó     â   {     *             
                      çf   ò& ò\     â   {     *                     
              çf   Aø òq     Ø        °BATWEBBAADMCFORM   â   {   
  *                                   çf   A ò&     â   {     *
                                çf   {\ Aø     â   {     *           
                        çf   {q A     â   ~ {     *                 
                  çf   {& {\     â   {     *                         
          çf   { {q     â   {     *     Ø        °BATWEBBAADMCFO
RM                                 çf   ô- {&     â   {     *
                            çf   ô {     â   {     *               
                    çf   ­} ô-     â   {     *          ~            
              çf  ï ­h ô     â   {     *                             
      çf  ì ­  ­}     â   {     *                         Ø        
°BATWEBBAADMCFORM             çf  ß C^ ­h     â   {     *           
                        çf  ! CÇ ­      â   {     *                   
                çf  $ C C^     â   {     *                           
   ~      çf  * BQ CÇ     â   {     *                                
   çf  )     C     â   {     *                                        
    {          Ø        °BATWEBHIADMCFORM                       r€
ä±08 JUN 1999 11:24 AM                                                        
                                                                                
                                 ~                                              
                                                                                
                                ¬Ø        °BATWEBHIADMCFORM     Äæ   
                çf  ë €^         â   {     *                           
        çf  ê €Ç q     â   {     *                                  
 çf  é € €^     â   {     *            ~                        çf  &
 ÆQ €Ç     â   {     *                                   çf  | Æ° €
     â   {     *                           Ø       °BATWEBHIADMCFORM
           çf  + Æç ÆQ     â   {     *                               
    çf  ( Æ  Æ°     â   {     *                                   çf 
 < ¸½ Æç     â   {     *                               ~     çf  . ¸ø
 Æ      â   {     *                                   çf  ¢ ¸ ¸½
    â   {     *                                   çf  ñ æ\ Ø       °
BATWEBHIADMCFORM   ¸ø     â   {     *                                  
 çf  ç æq ¸     â   {     *                                   çf  å 
æ& æ\     â   {     *                                   çf  ã æ æq
~      â   {     *                                   çf  á ^ æ&     
â   {     *                                   çf  à Ç æ     â   {  
 Ø       °BATWEBHIADMCFORM   	  *                                   çf 
 ä  ^     â   {     *                                   çf  â Q 
Ç     â   {     *                                   çf    °    
  â   {     *~                                    çf    ç Q     â  
 {     *                                   çf     °     â   {     
*               Ø       °BATWEBHIADMCFORM                       çf   
½ ç     â   {     *                                   çf   ø  
     â   {     *                                   çf    ½     â
   {     *                    ~                çf   \ ø     â   {  
   *                                   çf   q      â   {     *
                                 Ø      	 °BATWEBHIADMCFORM    çf   & 
\     â   {     *                                   çf    q   
  â   {     *                                   çf   ^ &     â   {
     *                                   çf  ~  Ç      â   {     
*                                   çf    ^     â   {     *
                              çf   Q Ç   Ø       °BATWEBHIADMCFORM
     â   {     *                                   çf   °      â
   {     *                                   çf   ç Q     â   {   
  *                                   çf     °     â ~   {     *
                                  çf   ½ ç     â   {     *         
                          çf   ø       â   {     *   Ø       °
BATWEBHIADMCFORM                                   çf    ½     â   {
     *                                   çf   \ ø     â   {     
*                                   çf   q      â   {     *
 ~                            çf   & \     â   {     *             
                      çf    q     â   {     *                     
  Ø       °BATWEBHIADMCFORM               çf   ^ &     â   {   
  *                                   çf   Ç      â   {     *
                                çf    ^     â   {     *           
                 ~        çf   Q Ç     â   {     *                 
                  çf   °      â   {     *                         
          çf   Ø       °BATWEBHIADMCFORM   ç Q     â   {     
*                                   çf     °     â   {     *
                            çf   ½ ç     â   {     *               
                    çf  
 ø ~       â   {     *                     
              çf    ½     â   {     *                             
      çf   \ ø     â   {Ø       °BATWEBHIADMCFORM        *
                                çf   q      â   {     *           
                        çf   & \     â   {     *                   
                çf    q     â   {    ~  *                         
          çf   ^ &     â   {     *                                
   çf   Ç      â   {     *           Ø       °BATWEBHIADMCFORM
                           çf    ^     â   {     *               
                    çf   Q Ç     â   {     *                       
            çf   °      â   {     *                ~              
      çf   ç Q     â   {     *                                   ç
f     °     â   {     *                               Ø       °
BATWEBHIADMCFORM       çf   ½ ç     â   {     *                   
                çf   ø       â   {     *                           
        çf   y ½     â   {     *                                  
 ~ çf    ø     â   {     *                                   àh  
 \ y                        â  â!   µ  â             àh   q     
  Ø       °BATWEBHIADMCFORM                      µ  â   µ  â        
     àh   & \                        â  â!  â  â!             àh   
 q                         µ  â  â  â!             àh   µ &{     
                 ~      âÀ      âÀ             -Ø    Ç Ø  &	
        Ø                    *       Ø                    c    µ
 *           Ø       °BATWEBHIADMCFORM                           c
   Y Ç *                                   çd   µ     
*                                         çd   } Y   	 *
                              ~     g     µ   *                     
       Åb   } }Ø                   Ø                         
                              Åb Ø       °BATWEBHIADMCFORM     q   
                  Ø                                                 
      a    & }                                              
                                    ~                     
                         	                                  
                                   Ø       °BATWEBHIADMCFORM
                         çf    q     â   {     *         
                          çf  î h &     â   {     *                 
                  çf  ;        â   {     *          ~              
            çf  ¬ 8 h     â   {     *                               
    çf  - ^       â   {     *                         Ø       °
BATWEBHIADMCFORM             çf  / Ç 8     â   {     *             
                      çf  Â  ^     â   {     *                     
              çf  Ä 	 Ç     â   {     *                             
 ~      4e    \ Ø ØØØØ ØØØÀØ         Øâ  âH          
   *                                       ØØØ â  â  âÀ  â     {À 
 ÀØ       °BATWEBHIADMCFORM       Ø âÀ                 .        
               *                             çf    q 		     â  â     
ADMUUKSF                            çf   & \     â   {     *
                 ~              çf    q     â   {     *           
                        çf   ½ &     â   {     *                   
                çØ       °BATWEBHIADMCFORM   f  	 ø      â   {  
   *                                   çf    ½     â   {     *
                                  çf   \ ø     â   {     *         
                          çf   ~ q      â   {     *               
                    çf   & \     â   {     *                       
            çf   ø q     Ø       °BATWEBHIADMCFORM   â   {     
*                                   çf    &     â   {     *
                              çf    \ ø     â   {     *             
                      çf    q      â   ~ {     *                   
                çf    &  \     â   {     *                           
        çf      q     â   {     *     Ø       °BATWEBHIADMCFORM
                                 çf   -  &     â   {     *         
                          çf  è        â   {     *                 
                  çf  í } -     â   {     *          ~              
            çf  ï h      â   {     *                               
    çf  ì   }     â   {     *                         Ø       °
BATWEBHIADMCFORM             çf  ß ^ h     â   {     *             
                      çf  ! Ç       â   {     *                     
              çf  $  ^     â   {     *                             
 ~      çf  * Q Ç     â   {     *                                  
 çf  )          â   {     *                                          
  {         Ø       °BATWEBLIADMCFORM                       r€
c08 JUN 1999 11:28 AM                                                          
                                                                                
                               ~                                                
                                                                                
                              ¬Ø       °BATWEBLIADMCFORM     +ó     
              çf  	 q&         â   {     *                             
      çf   q qq     â   {     *                                   ç
f   €^ q&     â   {     *            ~                        çf   
€Ç q     â   {     *                                   çf   € €^
     â   {     *                           Ø       °BATWEBLIADMCFORM  
         çf   ÆQ €Ç     â   {     *                                
   çf   Æ° €     â   {     *                                   çf  
 Æç ÆQ     â   {     *                               ~     çf   Æ  
Æ°     â   {     *                                   çf   ¸½ Æç   
  â   {     *                                   çf   ¸ø Ø       °BA
TWEBLIADMCFORM   Æ      â   {     *                                   ç
f   ¸ ¸½     â   {     *                                   çf   æ\
 ¸ø     â   {     *                                   çf   æq ¸~
      â   {     *                                   çf   æ& æ\     â
   {     *                                   çf   æ æq     â   {   
Ø       °BATWEBLIADMCFORM   	  *                                   çf  
 ^ æ&     â   {     *                                   çf   Ç æ
     â   {     *                                   çf    ^     
â   {     *~                                    çf   Q Ç     â   {
     *                                   çf   °      â   {     
*               Ø       °BATWEBLIADMCFORM                       çf   ç
 Q     â   {     *                                   çf     °
    â   {     *                                   çf   ½ ç     â  
 {     *                    ~                çf   ø       â   {   
  *                                   çf  
  ½     â   {     *
                               Ø       °BATWEBLIADMCFORM    çf   \ ø
     â   {     *                                   çf   q      
â   {     *                                   çf   & \     â   {  
   *                                   çf  ~   q     â   {     
*                                   çf   ^ &     â   {     *
                            çf   Ç    Ø       °BATWEBLIADMCFORM  
   â   {     *                                   çf    ^     â  
 {     *                                   çf   Q Ç     â   {     
*                                   çf   °      â ~   {     *
                                çf   ç Q     â   {     *           
                        çf     °     â   {     *   Ø       °BA
TWEBLIADMCFORM                                   çf   ½ ç     â   {  
   *                                   çf   ø       â   {     *
                                  çf    ½     â   {     *        ~
                            çf   \ ø     â   {     *               
                    çf   q      â   {     *                       
Ø       °BATWEBLIADMCFORM               çf   & \     â   {     
*                                   çf    q     â   {     *
                              çf   ^ &     â   {     *             
               ~        çf   Ç      â   {     *                   
                çf    ^     â   {     *                           
        çf   Ø       °BATWEBLIADMCFORM   Q Ç     â   {     *
                                  çf   °      â   {     *         
                          çf   ç Q     â   {     *                 
                  çf     ~ °     â   {     *                       
            çf   ½ ç     â   {     *                               
    çf   ø       â   {Ø       °BATWEBLIADMCFORM        *
                              çf    ½     â   {     *             
                      çf   \ ø     â   {     *                     
              çf   q      â   {    ~  *                           
        çf  ¢ & \     â   {     *                                  
 çf  ñ  q     â   {     *           Ø       °BATWEBLIADMCFORM  
                         çf  ç ^ &     â   {     *                 
                  çf  å Ç      â   {     *                         
          çf  ã  ^     â   {     *                ~                
    çf  á Q Ç     â   {     *                                   çf 
 à °      â   {     *                               Ø      
 °BA
TWEBLIADMCFORM       çf  ä ç Q     â   {     *                     
              çf  â   °     â   {     *                             
      çf    ½ ç     â   {     *                                   ~
 çf    ø       â   {     *                                   çf   
 ½     â   {     *                                   çf   \ ø
Ø       °BATWEBLIADMCFORM        â   {     *                         
          çf   q      â   {     *                                
   çf   & \     â   {     *                                   çf  
  q    ~  â   {     *                                   çf   ^ 
&     â   {     *                                   çf  . Ç    
  â   {     Ø       °BATWEBLIADMCFORM   *                             
      çf  $  ^     â   {     *                                   ç
f  ! Q Ç     â   {     *                                   çf  ß °
      â   {     *    ~                                çf  ì ç Q
     â   {     *                                   çf  ï   °     â
   {     *                   Ø       °BATWEBLIADMCFORM                
   çf  î ½ ç     â   {     *                                   çf  í
 ø       â   {     *                                   çf  è \ ½
     â   {     *                        ~            çf  ë q ø   
  â   {     *                                   çf  ê & \     â   {
     *                                   çf Ø       °BATWEBLIADMCFORM  
  é  q     â   {     *                                   çf  & y
 &     â   {     *                                   çf  | - 
    â   {     *                                   çf  + ~  y     â
   {     *                                   çf  ( } -     â   {   
  *                                   çf  < y      âØ       °BA
TWEBLIADMCFORM      {     *                                   çf  * h }
     â   {     *                                   çf      y	     
â   {     ADMUUKSF                            àh  	 	8 h               ~
          â  â!   µ  â             àh   	^                           µ
  â   µ  â             àh   	Ç 	8                        â  â!  â  â!
Ø       °BATWEBLIADMCFORM                àh   	 	^        
         µ  â  â  â!             àh   { 	Ç{                           
âÀ      âÀ             -Ø    h 	Ø  &	        Ø           
           *~        Ø                    c   & { *               
                    c    h *                                   çd
   ç &   Ø       °BATWEBLIADMCFORM    *                     
                    çd   }    	 *                          
               g     \ ç   *                            Åb   h }Ø  
                 Ø    ~                                            
        Åb   &  \                    Ø                         
                              Ø       °BATWEBLIADMCFORM   a     q h 
                                                            
                                                          
        	                           ~                       
                                          çf    & &     
â   {     *                                Ø       °BATWEBLIADMCFORM  
    çf  )    q     â   {     *                                   çf 
 ; -  &     â   {     *                                   çf  ¬  
      â   {     *                                   çf~   - } -
    â   {     *                                   çf  / h      â  
 {     *                                   çf  Â   } Ø       °BA
TWEBLIADMCFORM       â   {     *                                   çf  Ä 
Q h     â   {     *                                   4e         Ø
 ØØØØ ØØØÀØ         Øâ  âH             *                  ~
                      ØØØ â  â  âÀ  â     {À  À    Ø âÀ     
            .                       *                                      
{         Ø       °BATWEBPIADMCFORM                       r€±
08 JUN 1999 11:30 AM                                                            
                                                                                
                             ~                                                  
                                                                                
                            ¬Ø       °BATWEBPIADMCFORM     Äô 	      
            çf  ; q         â   {     *                               
    çf  ) €^ q&     â   {     *                                   çf 
 * €Ç q     â   {     *            ~                        çf  $ €
 €^     â   {     *                                   çf  ! ÆQ €Ç
    â   {     *                           Ø       °BATWEBPIADMCFORM   
        çf  ß Æ° €     â   {     *                                  
 çf  ì Æç ÆQ     â   {     *                                   çf  ï 
Æ  Æ°     â   {     *                               ~     çf   ¸½ Æç
     â   {     *                                   çf   ¸ø Æ      
â   {     *                                   çf   ¸ Ø       °BATW
EBPIADMCFORM   ¸½     â   {     *                                   çf 
  æ\ ¸ø     â   {     *                                   çf   æq 
¸     â   {     *                                   çf   æ& æ\~
    â   {     *                                   çf   æ æq     â  
 {     *                                   çf   ^ æ&     â   {   Ø
       °BATWEBPIADMCFORM   	  *                                   çf   
Ç æ     â   {     *                                   çf    ^
     â   {     *                                   çf   Q Ç     â
   {     *~                                    çf  	 °      â   {  
   *                                   çf   ç Q     â   {     *
              Ø       °BATWEBPIADMCFORM                       çf     
°     â   {     *                                   çf   ½ ç   
  â   {     *                                   çf   ø       â   {
     *                    ~                çf    ½     â   {     
*                                   çf   \ ø     â   {     *
                             Ø       °BATWEBPIADMCFORM    çf   q 
     â   {     *                                   çf   & \     â
   {     *                                   çf    q     â   {   
  *                                   çf  ~  ^ &     â   {     *
                                  çf   Ç      â   {     *         
                          çf    ^   Ø       °BATWEBPIADMCFORM   
  â   {     *                                   çf   Q Ç     â   {
     *                                   çf   °      â   {     
*                                   çf   ç Q     â ~   {     *
                              çf     °     â   {     *             
                      çf   ½ ç     â   {     *   Ø       °BATW
EBPIADMCFORM                                   çf   ø       â   {   
  *                                   çf    ½     â   {     *
                                çf   \ ø     â   {     *        ~  
                          çf   q      â   {     *                 
                  çf   & \     â   {     *                       Ø
       °BATWEBPIADMCFORM               çf    q     â   {     
*                                   çf   ^ &     â   {     *
                            çf   Ç      â   {     *               
             ~        çf    ^     â   {     *                     
              çf   Q Ç     â   {     *                             
      çf   Ø      	 °BATWEBPIADMCFORM   °      â   {     *
                                çf   ç Q     â   {     *           
                        çf     °     â   {     *                   
                çf   ½ ~ ç     â   {     *                         
          çf   ø       â   {     *                                
   çf    ½     â   {Ø       °BATWEBPIADMCFORM        *
                            çf  
 \ ø     â   {     *               
                    çf   q      â   {     *                       
            çf   & \     â   {    ~  *                             
      çf    q     â   {     *                                   ç
f  ä ^ &     â   {     *           Ø       °BATWEBPIADMCFORM   
                        çf  â Ç      â   {     *                   
                çf     ^     â   {     *                           
        çf    Q Ç     â   {     *                ~                 
   çf   °      â   {     *                                   çf  
 ç Q     â   {     *                               Ø       °BATW
EBPIADMCFORM       çf     °     â   {     *                       
            çf   ½ ç     â   {     *                               
    çf   ø       â   {     *                                   ~ ç
f    ½     â   {     *                                   çf   \
 ø     â   {     *                                   çf   q Ø
       °BATWEBPIADMCFORM        â   {     *                           
        çf   & \     â   {     *                                  
 çf    q     â   {     *                                   çf   
^ &    ~  â   {     *                                   çf   Ç 
     â   {     *                                   çf    ^     
â   {     Ø       °BATWEBPIADMCFORM   *                               
    çf  è Q Ç     â   {     *                                   çf 
 ë °      â   {     *                                   çf  ê ç 
Q     â   {     *    ~                                çf  é   °
    â   {     *                                   çf  & ½ ç     â  
 {     *                   Ø       °BATWEBPIADMCFORM                  
 çf  | ø       â   {     *                                   çf  + 
 ½     â   {     *                                   çf  ( \ ø
     â   {     *                        ~            çf  < q      
â   {     *                                   çf  . & \     â   {  
   *                                   çf Ø       °BATWEBPIADMCFORM   
 ¢  q     â   {     *                                   çf  ñ ½ 
&     â   {     *                                   çf  ç ø    
  â   {     *                                   çf  å ~  ½     â  
 {     *                                   çf  ã \ ø     â   {     
*                                   çf  á q      âØ       °BATW
EBPIADMCFORM      {     *                                   çf  à & \
     â   {     *                                   àh  	  q        
              â  â!   µ  â             àh   	{ &                   ~
     µ  â   µ  â             àh   	Ì                         â  â!  
â  â!             àh   	 	{                         µ  â  â  â!   Ø
       °BATWEBPIADMCFORM             àh   } 	Ì{       
      âÀ      âÀ             -Ø    q 	Ø  &         Ø     
               *       Ø                    c   Ì }    *           
             ~            c   & q    *                                
   çd    Ì    *                                         çd  
 ç &   	Ø       °BATWEBPIADMCFORM    *                       
                  g     \    *                            Åb   h 
çØ                   Ø                                           
            Åb   &  \   ~                  Ø                   
                                    a     q h                        
                      Ø       °BATWEBPIADMCFORM                
                                                       
             	                                              
                                 ~             çf    & &
     â   {     *                                   çf  í    q     â
   {     *                                Ø       °BATWEBPIADMCFORM   
   çf  î ^  &     â   {     *                                   çf  ¬
 Ç       â   {     *                                   çf  -  ^
     â   {     *                                   çf~   / Ø Ç   
  â   {     *                                   çf  Â       â   {
     *                                   çf  Ä   Ø Ø       °BATW
EBPIADMCFORM       â   {     *                                   4e    Q
 	Ø ØØØØ ØØØÀØ         Øâ  âH             *             
                        ØØØ â  â  âÀ  â     {À  À    Ø âÀ  ~ 
               .                       *                             çf 
        	     â  â     ADMUUKSF                                     {
         Ø       °BATWEBPOADMCFORM                       r10
 JUN 1999 11:01 AM                                                              
                                                                                
                           ~                                                    
                                                                                
                          ¬Ø       °BATWEBPOADMCFORM     nØ        
           çf        	     â  â     ADMUUKSF                         
   4e     ØØ ØØØØ ØØØÀØ         Øâ  âH             *
                                      Ø~ ØØ â  â  âÀ  â     {À  À 
   Ø âÀ                 .                       *                    
         çf  Ä 0      â   {     Ø       °BATWEBPOADMCFORM   *
                                  çf  Â y      â   {     *         
                          çf  î - 0     â   {     *                 
                  çf  í  y     â   {     *    ~                    
            çf  è } -     â   {     *                               
    çf  ë h      â   {     *                   Ø       °BATWEB
POADMCFORM                   çf  ê   }     â   {     *             
                      çf    h     â   {     *                     
             a    Ç                                      ~   
                                                           
                              	                         Ø  
     °BATWEBPOADMCFORM   	                                     
                             Åb                         Ø 
                                                       Åb   } Ç
           ~          Ø                                            
           g    h     *                            çd     }   	
 *     Ø       °BATWEBPOADMCFORM                                  
     çd    h    *                                         c
   }   *                                   c   ø    *
                          ~   -Ø     }Ø  &                 
             *       Ø                    àh   \ ø{       
        âÀ      âÀ       Ø       °BATWEBPOADMCFORM         àh   q 
                         µ  â  â  â!             àh   & \        
              â  â!  â  â!             àh    q        
   µ  â   µ  â             àh  	 ^ ~ &                        â  â!  
 µ  â             çf    Ç      â   {     *                     
              çf  â  ^     â   {  Ø       °BATWEBPOADMCFORM    
  *                                   çf  ä Q Ç     â   {     *
                                çf  à °      â   {     *           
                        çf  á ç Q     â   {     ~ *                 
                  çf  ã   °     â   {     *                         
          çf  å 
½ ç     â   {     *             Ø       °BATWEB
POADMCFORM                         çf  ç 
ø       â   {     *
                            çf  ñ 
 
½     â   {     *               
                    çf  ¢ \ 
ø     â   {     *                  ~    
              çf  . q 
     â   {     *                             
      çf  < & \     â   {     *                                Ø  
     °BATWEBPOADMCFORM      çf  (  q     â   {     *           
                        çf  + ^ &     â   {     *                   
                çf  | Ç      â   {     *                           
        çf~   &  ^     â   {     *                                
   çf  é Q Ç     â   {     *                                   çf  
 °  Ø       °BATWEBPOADMCFORM       â   {     *               
                    çf   ç Q     â   {     *                       
            çf     °     â   {     *                               
    çf   ½ ç     â~    {     *                                   ç
f   ø       â   {     *                                   çf   
 ½     â   {     * Ø       °BATWEBPOADMCFORM                     
                çf   \ ø     â   {     *                           
        çf   q      â   {     *                                  
 çf   & \     â   {     *      ~                              çf  
  q     â   {     *                                   çf   ^ &
     â   {     *                     Ø       °BATWEBPOADMCFORM     
            çf   Ç      â   {     *                               
    çf    ^     â   {     *                                   çf 
  Q Ç     â   {     *                          ~          çf   °
      â   {     *                                   çf   ç Q
    â   {     *                                   çf   Ø       °BATWEB
POADMCFORM      °     â   {     *                                  
 çf   ½ ç     â   {     *                                   çf   
ø       â   {     *                                   çf    ~ ½
     â   {     *                                   çf   \ ø     
â   {     *                                   çf   q      â  Ø  
     °BATWEBPOADMCFORM    {     *                                   çf 
  & \     â   {     *                                   çf    
q     â   {     *                                   çf   C^ &   
  â   {   ~   *                                   çf   CÇ      â  
 {     *                                   çf  
 C C^     â   {     
*         Ø       °BATWEBPOADMCFORM                             çf   
BQ CÇ     â   {     *                                   çf   B° C
     â   {     *                                   çf   Bç BQ     â
   {     *              ~                      çf   B  B°     â   {  
   *                                   çf   A½ Bç     â   {     *
                            Ø       °BATWEBPOADMCFORM         çf   Aø 
B      â   {     *                                   çf   A A½   
  â   {     *                                   çf   {\ Aø     â   {
     *                                 ~   çf   {q A     â   {     
*                                   çf   {& {\     â   {     *
                              çf   { {qØ      
 °BATWEBPOADMCFORM   
     â   {     *                                   çf   ¼^ {&     â
   {     *                                   çf   ¼Ç {     â   {   
  *                                   çf   ¼ ¼^  ~    â   {     *
                                  çf   ¶Q ¼Ç     â   {     *         
                          çf   ¶° ¼     â   {     Ø       °BATWEB
POADMCFORM   *                                   çf   ¶ç ¶Q     â   {
     *                                   çf   ¶  ¶°     â   {     
*                                   çf   §½ ¶ç     â   {     *  ~
                              çf   §ø ¶      â   {     *             
                      çf   § §½     â   {     *                 Ø  
     °BATWEBPOADMCFORM                     çf   ©\ §ø     â   {   
  *                                   çf   ©q §     â   {     *
                                çf   ©& ©\     â   {     *           
           ~              çf   © ©q     â   {     *                 
                  çf  	 ´½ ©&     â   {     *                         
          çØ       °BATWEBPOADMCFORM   f   ´ø ©     â   {     
*                                   çf   ´ ´½     â   {     *
                            çf   ¨\ ´ø     â   {     *               
                    çf   ~ ¨q ´     â   {     *                     
              çf   ¨& ¨\     â   {     *                             
      çf   £ø ¨q     Ø       °BATWEBPOADMCFORM   â   {     *
                                çf   £ ¨&     â   {     *           
                        çf   ^\ £ø     â   {     *                   
                çf   ^q £     â   ~ {     *                         
          çf   ^& ^\     â   {     *                                
   çf  ï ^ ^q     â   {     *     Ø       °BATWEBPOADMCFORM   
                            çf  ì ]- ^&     â   {     *               
                    çf  ß ] ^     â   {     *                       
            çf  ! [} ]-     â   {     *          ~                    
      çf  $ [h ]     â   {     *                                   ç
f  * [  [}     â   {     *                         Ø       °BATWEB
POADMCFORM             çf  ) ·^ [h     â   {     *                   
                çf  ; ·Ç [      â   {     *                           
        çf  ¬ · ·^     â   {     *                              ~   
   çf  - ¥Q ·Ç     â   {     *                                   çf  /
     ·     â   {     *                                            {  
       Ø       °BATWEBSCADMCFORM                       r€ ¬08 J
UN 1999 11:34 AM                                                                
                                                                                
                         ~                                                      
                                                                                
                        ¬Ø       °BATWEBSCADMCFORM     s          
         çf   q\         â   {     *                                  
 çf   qq r     â   {     *                                   çf   
q& q\     â   {     *            ~                        çf  	 q qq
     â   {     *                                   çf   €^ q&     
â   {     *                           Ø       °BATWEBSCADMCFORM       
    çf   €Ç q     â   {     *                                   çf 
  € €^     â   {     *                                   çf   ÆQ 
€Ç     â   {     *                               ~     çf   Æ° €
    â   {     *                                   çf   Æç ÆQ     â  
 {     *                                   çf   Æ  Ø       °BATWEBSC
ADMCFORM   Æ°     â   {     *                                   çf   
¸½ Æç     â   {     *                                   çf   ¸ø Æ 
     â   {     *                                   çf   ¸ ¸½~      
â   {     *                                   çf   æ\ ¸ø     â   {  
   *                                   çf   æq ¸     â   {   Ø    
   °BATWEBSCADMCFORM   	  *                                   çf   æ& 
æ\     â   {     *                                   çf   æ æq   
  â   {     *                                   çf   ^ æ&     â   {
     *~                                    çf   Ç æ     â   {     
*                                   çf    ^     â   {     *
          Ø       °BATWEBSCADMCFORM                       çf   Q Ç
     â   {     *                                   çf   °      â
   {     *                                   çf   ç Q     â   {   
  *                    ~                çf     °     â   {     *
                                  çf   ½ ç     â   {     *         
                         Ø       °BATWEBSCADMCFORM    çf   ø     
  â   {     *                                   çf    ½     â   {
     *                                   çf   \ ø     â   {     
*                                   çf  ~  q      â   {     *
                              çf  
 & \     â   {     *             
                      çf    q   Ø       °BATWEBSCADMCFORM     â
   {     *                                   çf   ^ &     â   {   
  *                                   çf   Ç      â   {     *
                                çf    ^     â ~   {     *         
                          çf   Q Ç     â   {     *                 
                  çf   °      â   {     *   Ø       °BATWEBSC
ADMCFORM                                   çf   ç Q     â   {     
*                                   çf     °     â   {     *
                            çf   ½ ç     â   {     *        ~      
                      çf   ø       â   {     *                     
              çf    ½     â   {     *                       Ø    
   °BATWEBSCADMCFORM               çf   \ ø     â   {     *
                                çf   q      â   {     *           
                        çf   & \     â   {     *                   
         ~        çf    q     â   {     *                         
          çf   ^ &     â   {     *                                
   çf   Ø       °BATWEBSCADMCFORM   Ç      â   {     *
                            çf    ^     â   {     *               
                    çf   Q Ç     â   {     *                       
            çf   ° ~      â   {     *                             
      çf   ç Q     â   {     *                                   ç
f     °     â   {Ø       °BATWEBSCADMCFORM        *           
                        çf   ½ ç     â   {     *                   
                çf   ø       â   {     *                           
        çf    ½     â   {    ~  *                                
   çf   \ ø     â   {     *                                   çf  
 q      â   {     *           Ø       °BATWEBSCADMCFORM       
                    çf   & \     â   {     *                       
            çf    q     â   {     *                               
    çf  + ^ &     â   {     *                ~                    ç
f  ( Ç      â   {     *                                   çf  < 
 ^     â   {     *                               Ø       °BATWEBSC
ADMCFORM       çf  . Q Ç     â   {     *                           
        çf  ¢ °      â   {     *                                  
 çf  ñ ç Q     â   {     *                                   ~ çf  ç
   °     â   {     *                                   çf  å ½ ç
     â   {     *                                   çf  ã ø  Ø    
  	 °BATWEBSCADMCFORM        â   {     *                               
    çf  á  ½     â   {     *                                   çf 
 à \ ø     â   {     *                                   çf  ä q 
    ~  â   {     *                                   çf  â & \
    â   {     *                                   çf     q     â  
 {     Ø       °BATWEBSCADMCFORM   *                                  
 çf    ^ &     â   {     *                                   çf   
Ç      â   {     *                                   çf    ^
     â   {     *    ~                                çf  * Q Ç     
â   {     *                                   çf  $ °      â   {  
   *                   Ø       °BATWEBSCADMCFORM                   çf 
 ! ç Q     â   {     *                                   çf  ß   
°     â   {     *                                   çf  ì ½ ç   
  â   {     *                        ~            çf  ï ø       â  
 {     *                                   çf  î & ½     â   {     
*                                   çf Ø       °BATWEBSCADMCFORM    í 
 ø     â   {     *                                   çf  è ½ &
     â   {     *                                   çf  ë ø      â
   {     *                                   çf  ê ~  ½     â   {  
   *                                   çf  é \ ø     â   {     *
                                  çf  & q      âØ       °BATWEBSC
ADMCFORM      {     *                                   çf  | & \   
  â   {     *                                   àh  	  q        
          â  â!   µ  â             àh   	{ &                   ~
 µ  â   µ  â             àh   	Ì                         â  â!  â  
â!             àh   	 	{                         µ  â  â  â!   Ø    
   °BATWEBSCADMCFORM             àh   } 	Ì{                         
  âÀ      âÀ             -Ø    q 	Ø  &	        Ø         
           *       Ø                    c   Ì } *               
         ~            c   & q *                                   ç
d    Ì    *                                         çd   ç
 &   	Ø       °BATWEBSCADMCFORM    *                          
               g     \    *                            Åb   h çØ
                   Ø                                               
        Åb   &  \   ~                  Ø                       
                                a     q h                            
                  Ø       °BATWEBSCADMCFORM                
                                                           
         	                                                 
                              ~             çf    & &   
  â   {     *                                   çf  )    q     â   {
     *                                Ø       °BATWEBSCADMCFORM      ç
f  ; ^  &     â   {     *                                   çf  ¬ Ç
       â   {     *                                   çf  -  ^
    â   {     *                                   çf~   / Ø Ç     â
   {     *                                   çf  Â       â   {   
  *                                   çf  Ä   Ø Ø       °BATWEBSC
ADMCFORM       â   {     *                                   4e    Q 
Ø ØØØØ ØØØÀØ         Øâ  âH             *                 
                      ØØØ â  â  âÀ  â     {À  À      âÀ  ~  
              .                       *                             çf     
    	     â  â     ADMUUKSF                                     {    
     Ø       °BATWEBSUADMCFORM                       r€í€08 JUN
 1999 11:55 AM                                                                  
                                                                                
                       ~                                                        
                                                                                
                      ¬Ø       °BATWEBSUADMCFORM     E            
       çf  / ç         â   {     *                                   ç
f  - |^ ç&     â   {     *                                   çf  ¬ |Ç
 ç     â   {     *            ~                        çf  ; | |^
     â   {     *                                   çf  ) +Q |Ç     â
   {     *                           Ø       °BATWEBSUADMCFORM        
   çf  * +° |     â   {     *                                   çf  $
 +ç +Q     â   {     *                                   çf  ! +  +°
     â   {     *                               ~     çf  ß (½ +ç   
  â   {     *                                   çf  ì (ø +      â   {
     *                                   çf  ï ( Ø       °BATWEBSUAD
MCFORM   (½     â   {     *                                   çf  ê <\
 (ø     â   {     *                                   çf  é <q (
    â   {     *                                   çf  & <& <\~      â
   {     *                                   çf  | < <q     â   {   
  *                                   çf  + ^ <&     â   {   Ø     
  °BATWEBSUADMCFORM   	  *                                   çf  ( Ç <
     â   {     *                                   çf  <  ^     
â   {     *                                   çf  . Q Ç     â   {  
   *~                                    çf  ¢ °      â   {     
*                                   çf  ñ ç Q     â   {     *
        Ø       °BATWEBSUADMCFORM                       çf  ç   °
    â   {     *                                   çf  å ½ ç     â  
 {     *                                   çf   ø       â   {     
*                    ~                çf    ½     â   {     *
                                çf   \ ø     â   {     *           
                       Ø       °BATWEBSUADMCFORM    çf   q      
â   {     *                                   çf   & \     â   {  
   *                                   çf    q     â   {     *
                                  çf  ~  ^ &     â   {     *
                            çf   Ç      â   {     *               
                    çf    ^   Ø       °BATWEBSUADMCFORM     â  
 {     *                                   çf   Q Ç     â   {     
*                                   çf   °      â   {     *
                              çf   ç Q     â ~   {     *           
                        çf     °     â   {     *                   
                çf  	 ½ ç     â   {     *   Ø       °BATWEBSUAD
MCFORM                                   çf   ø       â   {     *
                                  çf    ½     â   {     *         
                          çf   \ ø     â   {     *        ~        
                    çf   q      â   {     *                       
            çf   & \     â   {     *                       Ø     
  °BATWEBSUADMCFORM               çf    q     â   {     *
                              çf   ^ &     â   {     *             
                      çf   Ç      â   {     *                     
       ~        çf    ^     â   {     *                           
        çf   Q Ç     â   {     *                                  
 çf   Ø       °BATWEBSUADMCFORM   °      â   {     *         
                          çf   ç Q     â   {     *                 
                  çf     °     â   {     *                         
          çf   ½ ~ ç     â   {     *                               
    çf   ø       â   {     *                                   çf 
   ½     â   {Ø       °BATWEBSUADMCFORM        *             
                      çf   \ ø     â   {     *                     
              çf   q      â   {     *                             
      çf   & \     â   {    ~  *                                  
 çf    q     â   {     *                                   çf   
^ &     â   {     *           Ø       °BATWEBSUADMCFORM         
                  çf   Ç      â   {     *                         
          çf    ^     â   {     *                                
   çf   Q Ç     â   {     *                ~                    çf 
  °      â   {     *                                   çf   ç 
Q     â   {     *                               Ø       °BATWEBSUAD
MCFORM       çf     °     â   {     *                             
      çf   ½ ç     â   {     *                                   ç
f   ø       â   {     *                                   ~ çf   
 ½     â   {     *                                   çf   \ ø
     â   {     *                                   çf   q Ø     
  °BATWEBSUADMCFORM        â   {     *                                
   çf   & \     â   {     *                                   çf  
  q     â   {     *                                   çf   C^ &
    ~  â   {     *                                   çf  
 CÇ    
  â   {     *                                   çf   C C^     â   {
     Ø       °BATWEBSUADMCFORM   *                                   ç
f  á BQ CÇ     â   {     *                                   çf  à B°
 C     â   {     *                                   çf  ä Bç BQ
    â   {     *    ~                                çf  â B  B°     â
   {     *                                   çf    A½ Bç     â   {   
  *                   Ø       °BATWEBSUADMCFORM                   çf  
 Aø B      â   {     *                                   çf   A A½
     â   {     *                                   çf   {\ Aø     
â   {     *                        ~            çf   {q A     â   {
     *                                   çf   {& {\     â   {     
*                                   çf Ø       °BATWEBSUADMCFORM     {
 {q     â   {     *                                   çf   ¼½ {&
    â   {     *                                   çf   ¼ø {     â  
 {     *                                   çf   ¼~  ¼½     â   {   
  *                                   çf   ¶\ ¼ø     â   {     *
                                çf   ¶q ¼     âØ       °BATWEBSUAD
MCFORM      {     *                                   çf   ¶& ¶\     
â   {     *                                   àh  	 ¶ ¶q        
        â  â!   µ  â             àh   §{ ¶&                   ~       µ
  â   µ  â             àh   §Ì ¶                        â  â!  â  â!
             àh   § §{                         µ  â  â  â!   Ø     
  °BATWEBSUADMCFORM             àh   ©} §Ì{                           
âÀ      âÀ             -Ø    ©q §Ø  &	        Ø           
         *       Ø                    c   £Ì ©} *                 
       ~            c   ©& ©q *                                   çd
   © £Ì    *                                         çd   £ç 
©&   	Ø       °BATWEBSUADMCFORM    *                          
               g    ^\ ©   *                            Åb   ´h £çØ  
                 Ø                                                 
      Åb   ¨& ^\   ~                  Ø                         
                              a    ^q ´h                             
                 Ø      
 °BATWEBSUADMCFORM                  
                                                          
        	                                                   
                            ~             çf   ^& ¨&     
â   {     *                                   çf  ã ^ ^q     â   {  
   *                                Ø       °BATWEBSUADMCFORM      çf 
 ë ·^ ^&     â   {     *                                   çf  è ·Ç 
^     â   {     *                                   çf  í · ·^   
  â   {     *                                   çf~   î ]Ø ·Ç     â  
 {     *                                   çf  Â ] ·     â   {     
*                                   çf  Ä [  ]Ø Ø       °BATWEBSUAD
MCFORM       â   {     *                                   4e    ¥Q ]Ø
 ØØØØ ØØØÀØ         Øâ  âH             *                   
                    ØØØ â  â  âÀ  â     {À  À    Ø âÀ  ~    
            .                       *                             çf       
 [ 	     â  â     ADMUUKSF                                     {     
    Ø       °BATWEBTOADMCFORM                       r?10 JUN 1
999 11:02 AM                                                                    
                                                                                
                     ~                                                          
                                                                                
                    ¬Ø       °BATWEBTOADMCFORM     Ç+              
     àh  	 &                            â  â!   µ  â             àh   
 q                         µ  â   µ  â             àh   Ø &      
                  â  â!  â  â!    ~          àh            
         µ  â  â  â!             àh   Q Ø{                           
âÀ      âÀ             -Ø    µ Ø       °BATWEBTOADMCFORM   Ø
  &        Ø                    *       Ø                    c
   Ç Q *                                   c    µ *
                            çd   Q Ç    ~ *                     
                    çd   y    	 *                          
               g      Q   *                   Ø       °BATWEBTOADMC
FORM            Åb   h yØ              Ø    Ø               
                                        Åb                    Ø    Ø    
                                                   a    ~   h 
                                                                  
                                                        Ø      
 °BATWEBTOADMCFORM   	                	                             
                                                                
          çf   8      â   {     *                                
   çf~   î ^       â   {     *                                   çf 
 ; Ç 8     â   {     *                                   çf  ¬  
^ Ø       °BATWEBTOADMCFORM       â   {     *                     
              çf  - Q Ç     â   {     *                             
      çf  / °      â   {     *                                   ç
f  Â ç Q     â~    {     *                                   çf  Ä 
& °     â   {     *                                   4e     çØ
 ØØØØ ØØØÀØØ       °BATWEBTOADMCFORM            Øâ  âH  
         ·*        Ø    â!                        ØØØ â  â  â  â  
   {À  À    Ø âÀ                 .                       *
                       çf    ^ &~ 	     â  â     ADMUUKSF            
                çf  á Ç      â   {     *                           
        çf  ã  ^     â   {  Ø       °BATWEBTOADMCFORM      *
                                  çf  å Q Ç     â   {     *         
                          çf  ç °      â   {     *                 
                  çf  ñ ç Q     â   {     ~ *                       
            çf  ¢   °     â   {     *                               
    çf  . 
½ ç     â   {     *             Ø       °BATWEBTOADMC
FORM                         çf  < 
ø       â   {     *             
                      çf  ( 
 
½     â   {     *                     
              çf  + \ 
ø     â   {     *                  ~          
        çf  | q 
     â   {     *                                  
 çf  & & \     â   {     *                                Ø      
 °BATWEBTOADMCFORM      çf  é  q     â   {     *                 
                  çf  ê ^ &     â   {     *                         
          çf  ë Ç      â   {     *                                
   çf~   è  ^     â   {     *                                   çf 
 í Q Ç     â   {     *                                   çf   ° 
 Ø       °BATWEBTOADMCFORM       â   {     *                     
              çf   ç Q     â   {     *                             
      çf     °     â   {     *                                   ç
f   ½ ç     â~    {     *                                   çf   
ø       â   {     *                                   çf    ½
     â   {     * Ø       °BATWEBTOADMCFORM                           
          çf   \ ø     â   {     *                                
   çf   q      â   {     *                                   çf  
 & \     â   {     *      ~                              çf    
q     â   {     *                                   çf   ^ &   
  â   {     *                     Ø       °BATWEBTOADMCFORM           
      çf   Ç      â   {     *                                   ç
f     ^     â   {     *                                   çf    Q
 Ç     â   {     *                          ~          çf  â ° 
     â   {     *                                   çf  ä ç Q     â
   {     *                                   çf  àØ       °BATWEBTOADMC
FORM      °     â   {     *                                   çf  
 ½ ç     â   {     *                                   çf   ø  
     â   {     *                                   çf  
  ~ ½   
  â   {     *                                   çf   \ ø     â   {
     *                                   çf   q      â  Ø      
 °BATWEBTOADMCFORM    {     *                                   çf   &
 \     â   {     *                                   çf    q
    â   {     *                                   çf   C^ &     â  
 {   ~   *                                   çf   CÇ      â   {   
  *                                   çf   C C^     â   {     *
      Ø       °BATWEBTOADMCFORM                             çf   BQ CÇ
     â   {     *                                   çf   B° C     
â   {     *                                   çf   Bç BQ     â   {  
   *              ~                      çf   B  B°     â   {     
*                                   çf   A½ Bç     â   {     *
                      Ø       °BATWEBTOADMCFORM         çf   Aø B 
    â   {     *                                   çf   A A½     â  
 {     *                                   çf   {\ Aø     â   {     
*                                 ~   çf   {q A     â   {     *
                                çf   {& {\     â   {     *           
                        çf   { {qØ       °BATWEBTOADMCFORM        
â   {     *                                   çf   ¼^ {&     â   {  
   *                                   çf   ¼Ç {     â   {     *
                                  çf   ¼ ¼^  ~    â   {     *
                            çf   ¶Q ¼Ç     â   {     *               
                    çf   ¶° ¼     â   {     Ø      	 °BATWEBTOADMC
FORM   *                                   çf   ¶ç ¶Q     â   {     
*                                   çf   ¶  ¶°     â   {     *
                              çf   §½ ¶ç     â   {     *  ~          
                        çf   §ø ¶      â   {     *                   
                çf   § §½     â   {     *                 Ø      
 °BATWEBTOADMCFORM                     çf   ©\ §ø     â   {     *
                                  çf   ©q §     â   {     *         
                          çf   ©& ©\     â   {     *                 
     ~              çf   © ©q     â   {     *                       
            çf   ´½ ©&     â   {     *                               
    çØ       °BATWEBTOADMCFORM   f   ´ø ©     â   {     *
                              çf  	 ´ ´½     â   {     *             
                      çf   ¨\ ´ø     â   {     *                     
              çf   ~ ¨q ´     â   {     *                           
        çf   ¨& ¨\     â   {     *                                  
 çf   £ø ¨q     Ø       °BATWEBTOADMCFORM   â   {     *         
                          çf   £ ¨&     â   {     *                 
                  çf   ^\ £ø     â   {     *                         
          çf   ^q £     â   ~ {     *                               
    çf   ^& ^\     â   {     *                                   çf 
  ^ ^q     â   {     *     Ø       °BATWEBTOADMCFORM           
                      çf   ]- ^&     â   {     *                     
              çf   ] ^     â   {     *                             
      çf   [} ]-     â   {     *          ~                         
 çf  ï [h ]     â   {     *                                   çf  ì 
[  [}     â   {     *                         Ø       °BATWEBTOADMC
FORM             çf  ß ·^ [h     â   {     *                         
          çf  ! ·Ç [      â   {     *                                
   çf  $ · ·^     â   {     *                              ~      çf 
 * ¥Q ·Ç     â   {     *                                   çf  )     
·     â   {     *                                            {      
   Ø       °BATWEBVEADMCFORM                       rÄÂ21 MAY 199
9  4:36 PM                                                                      
                                                                                
                   ~                                                            
                                                                                
                  ¬Ø       °BATWEBVEADMCFORM     @7                
   4e    4\    Ø ØØØØ ØØØÀØ         Øâ  âH             *
                                      ØØØ â  â  âÀ  â     {À  À  
  Ø âÀ                 .   ~                     *                    
         çf   4q 5     â   {      *                                  
 çf   4& 4\     â   {      Ø       °BATWEBVEADMCFORM   *         
                          çf   4 4q     â   {      *                 
                  çf  	 1Ç 4&     â   {      *                         
          çf   1 4     â   {      *    ~                            
    çf   Ú} 1Ç     â   {      *                                   çf 
  Úh 1     â   {      *                   Ø       °BATWEBVEADMCFO
RM                   çf   Ù& Ú}     â   {      *                     
             a    0½ Úh                                      
                         	                      ~         
                 	            	                          
                                                 Ø       
°BATWEBVEADMCFORM   	              Åb   0& Ù&                      
                                                         Åb   Ûµ 0½
Ø                                                                     
   ~       g    0 0&   *                            çd   Ûì Ûµ   	
   *             â!                          çd   Û 0      *
    Ø       °BATWEBVEADMCFORM           â!                          c
   ³Y Ûì   *                                   c   ³h Û   *
                            -Ø    ³  ³YØ  &		        Ø         
             *  ~      Ø                    àh   3^ ³h{       
        âÀ      âÀ             àh   3Ç ³                          µ  â  
â  â!          Ø       °BATWEBVEADMCFORM      àh   3 3^        
              â  â!  â  â!             àh   2Q 3Ç        
   µ  â   µ  â             àh  	     3                        â  â!   µ
  â                           ~                                            
                                                                                
                                    {         Ø       °BATPRTBAADMCFORM
                       r €10 JUN 1999 11:04 AM                        
                                                                                
                                                                 ~              
                                                                                
                                                                ¬Ø       °
BATPRTBAADMCFORM     c                   çf        	     â  â   
  ADMUUKSF                            4e     ìØ ØØØØ ØØØÀØ
         Øâ  âH           ·*        Ø    â!                        
Ø~ ØØ â  â  âÀ  â     {À  À    Ø âÀ                 .        
               *                             çf  Ä H      â   {     
Ø       °BATPRTBAADMCFORM   *                                   çf  Â 
Ø      â   {     *                                   çf  /  H
     â   {     *                                   çf  - 0 Ø     â
   {     *    ~                                çf  ¬ y      â   {  
   *                                   çf  ; ^ 0     â   {     *
                  Ø       °BATPRTBAADMCFORM                   çf   ø 
y     â   {     *                                  a     ^     
                                                         
                       ~                          	      
      	                                                  
                        Ø       °BATPRTBAADMCFORM   	         
     Åb   ç ø                    Ø                        
                                Åb    Ø                   Ø    
                                             ~       g    } ç   *
                         çd   h    	   *                          
               çd   & }      *     Ø       °BATPRTBAADMCFORM
                                       c    h   *                 
                  c   ½ &   *                                   -Ø   
 ø Ø  &	        Ø                      *  ~      Ø       
             àh    ½{                           âÀ      âÀ            
 àh   \ ø                         µ  â  â  â!          Ø       °
BATPRTBAADMCFORM      àh   q                         â  â!  â  â!    
         àh   & \                         µ  â   µ  â             à
h  	  q                        â  â!   µ  â             çf   ^ &
~      â   {     *                                   çf   Ç    
  â   {     *                                   çf    ^     â   {
  Ø       °BATPRTBAADMCFORM      *                                   ç
f   Q Ç     â   {     *                                   çf   °
      â   {     *                                   çf   ç Q
    â   {     ~ *                                   çf     °     â
   {     *                                   çf   
½ ç     â   {   
  *             Ø       °BATPRTBAADMCFORM                         çf  
 
ø       â   {     *                                   çf  í 
 
½
     â   {     *                                   çf  î \ 
ø     
â   {     *                  ~                  çf  ï q 
     â   {
     *                                   çf  ì & \     â   {     
*                                Ø       °BATPRTBAADMCFORM      çf  ß 
 q     â   {     *                                   çf  ) ^ &
    â   {     *                                   çf  ! Ç      â  
 {     *                                   çf~   $  ^     â   {   
  *                                   çf  * Q Ç     â   {     *
                                çf  	 °  Ø       °BATPRTBAADMCFORM
       â   {     *                                   çf   ç Q     
â   {     *                                   çf     °     â   {  
   *                                   çf   ½ ç     â~    {     
*                                   çf   ø       â   {     *
                            çf    ½     â   {     * Ø       °
BATPRTBAADMCFORM                                     çf   \ ø     â  
 {     *                                   çf   q      â   {     
*                                   çf   & \     â   {     *
 ~                              çf    q     â   {     *           
                        çf   ^ &     â   {     *                   
  Ø       °BATPRTBAADMCFORM                 çf   Ç      â   {  
   *                                   çf    ^     â   {     *
                                  çf   Q Ç     â   {     *         
                 ~          çf   °      â   {     *               
                    çf   ç Q     â   {     *                       
            çf  Ø       °BATPRTBAADMCFORM      °     â   {     
*                                   çf   ½ ç     â   {     *
                              çf   ø       â   {     *             
                      çf    ~ ½     â   {     *                   
                çf   \ ø     â   {     *                           
        çf   q      â  Ø       °BATPRTBAADMCFORM    {     *
                                  çf   & \     â   {     *         
                          çf    q     â   {     *                 
                  çf   C^ &     â   {   ~   *                       
            çf   CÇ      â   {     *                               
    çf   C C^     â   {     *         Ø       °BATPRTBAADMCFORM
                             çf   BQ CÇ     â   {     *             
                      çf   B° C     â   {     *                     
              çf   Bç BQ     â   {     *              ~              
        çf   B  B°     â   {     *                                  
 çf   A½ Bç     â   {     *                             Ø       °
BATPRTBAADMCFORM         çf   Aø B      â   {     *                 
                  çf   A A½     â   {     *                         
          çf   {\ Aø     â   {     *                                
 ~   çf   {q A     â   {     *                                   çf 
  {& {\     â   {     *                                   çf   { 
{qØ      
 °BATPRTBAADMCFORM        â   {     *                     
              çf   ¼^ {&     â   {     *                             
      çf   ¼Ç {     â   {     *                                   ç
f   ¼ ¼^  ~    â   {     *                                   çf   
¶Q ¼Ç     â   {     *                                   çf   ¶° ¼
     â   {     Ø       °BATPRTBAADMCFORM   *                         
          çf  
 ¶ç ¶Q     â   {     *                                
   çf   ¶  ¶°     â   {     *                                   çf  
 §½ ¶ç     â   {     *  ~                                  çf   §ø 
¶      â   {     *                                   çf   § §½   
  â   {     *                 Ø       °BATPRTBAADMCFORM               
      çf   ©\ §ø     â   {     *                                   ç
f   ©q §     â   {     *                                   çf  ä ©&
 ©\     â   {     *                      ~              çf  à © ©q
     â   {     *                                   çf  á ´½ ©&     â
   {     *                                   çØ       °BATPRTBAADMCFORM
   f  ã ´ø ©     â   {     *                                   çf  å
 ´ ´½     â   {     *                                   çf  ç ¨\ ´ø
     â   {     *                                   çf  ñ ~ ¨q ´   
  â   {     *                                   çf  ¢ ¨& ¨\     â   {
     *                                   çf  . £ø ¨q     Ø       °
BATPRTBAADMCFORM   â   {     *                                   çf  < £
 ¨&     â   {     *                                   çf  ( ^\ £ø
    â   {     *                                   çf  + ^q £     â  
 ~ {     *                                   çf  è ^& ^\     â   {   
  *                                   çf  | ^ ^q     â   {     *
  Ø       °BATPRTBAADMCFORM                                 çf  & ]- ^&
     â   {     *                                   çf  é ] ^     
â   {     *                                   çf  ê [} ]-     â   {  
   *          ~                          çf  ë [h ]     â   {     
*                                   çf   [  [}     â   {     *
                  Ø       °BATPRTBAADMCFORM             çf   ·^ [h
    â   {     *                                   çf   ·Ç [      â  
 {     *                                   çf    · ·^     â   {     
*                              ~      çf    ¥Q ·Ç     â   {     *
                                çf  â     ·     â   {     *           
                                 {         \INMR06
./ ADD NAME=BATCHART 0199-99179-03293-1641-07110-05680-00000-TSO057


      **************************************************************
      *   BATCHART batch GDDM driver for OS/390
      *   Copyright (C) 2000  Andy Robertson
      *
      *   This program is free software; you can redistribute
      *   it and/or modify it under the terms of the GNU
      *   General Public License as published by the Free
      *   Software Foundation; either version 2 of the
      *   License, or (at your option) any later version.
      *
      *   This program is distributed in the hope that it
      *   will be useful, but WITHOUT ANY WARRANTY; without
      *   even the implied warranty of MERCHANTABILITY or
      *   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
      *   General Public License for more details.
      *
      *   You should have received a copy of the GNU General
      *   Public License along with this program; if not,
      *   write to the Free Software Foundation, Inc., 675
      *   Mass Ave, Cambridge, MA 02139, USA.
      *
      **************************************************************














       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCHART'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
      ******************************************************************
      *   main program
      ******************************************************************
      *   HISTORY
      ******************************************************************
      *
      *   JAN 2001 1.0  WRITTEN                                  AWR
      *   MAR 2001 1.1  token size to 80 bytes                   AWR
      *   Feb 2002 1.3  add PSEG processing                      AWR
      *
      ******************************************************************
      *
      *
      * Warning
      *
      * THIS PROGRAM MUST BE COMPILED WITH DATA(24)
      *
      * THIS PROGRAM USES THE NON-REENTRANT GDDM INTERFACE AND MUST BE
      * LINKEDITED NORENT NOREUS AMODE(24)
      *
       01  MSG      PICTURE X(250) VALUE ' '.
       01  I                 PIC S9(8) COMP VALUE 0.

       01  W-P           PICTURE X(100) VALUE ' '.
       01  W-P1          PICTURE X(100) VALUE ' '.
       01  W-NAME        PICTURE X(8) VALUE ' '.
       01  W-TYPE        PICTURE X(8) VALUE ' '.
       01  W-NAME-KEY    PICTURE X(8) VALUE 'N'.
       01  W-TYPE-KEY    PICTURE X(8) VALUE 'T'.

       01  S        PICTURE X(800) VALUE ' '.
       01  P1       PICTURE X(800) VALUE ' '.
       01  P2       PICTURE X(800) VALUE ' '.
       01  PREST    PICTURE X(800) VALUE ' '.
       COPY BATCRPCS.

       PROCEDURE DIVISION.


           MOVE 1 TO PCS-LEVEL

           MOVE 'BATLINE' TO PCS-FNAME
           MOVE '*      ' TO PCS-DNAME
           MOVE '       ' TO PCS-PNAME
           MOVE ' ' TO BATCRPCS-HDR
           MOVE 0  TO PCS-HDR-L

           MOVE ' ' TO BATCRPCS-NOTES
           MOVE ' ' TO BATCRPCS-GROUP-NAMES
           MOVE 0  TO PCS-KEY-L
           MOVE ' ' TO BATCRPCS-GROUP-LABELS
           MOVE 0  TO PCS-LABEL-L
           MOVE 'N' TO CENTRE-LABELS
           MOVE 'N' TO USE-XNOTES
           MOVE 'N' TO USE-YNOTES
           MOVE 'ADMKPCA1' TO DUMMY-DEV-TOKEN
           MOVE 1          TO DUMMY-FAM-TYPE

           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 999
                MOVE 1.0E+72 TO X-DATUM(I)
                MOVE 1.0E+72 TO Y-DATUM(I)
           END-PERFORM


           MOVE ' ' TO BATCRPCS-TABLED-LABELS

           MOVE 0 TO PCS-NE
           MOVE 0 TO PCS-NG
           MOVE 1 TO PCS-PAIR


           PERFORM READ-SYSIN

           PERFORM UNTIL S = ' '

               DISPLAY ' '

               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE (P1) = 'BUILD'
                   DISPLAY ' '
                   DISPLAY 'BATCHART: ATTEMPTING TO BUILD GRAPH '
                   P2(1:20)
                   CALL 'BATCBU' USING S P1 P2 PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "BUILD"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: BUILT DATA FOR GRAPH '
                       MOVE 0  TO RETURN-CODE
                   END-IF


                   DISPLAY 'BATCHART: ATTEMPTING TO REFORMAT DATA'
                   CALL 'BATCRF' USING S P1 P2 PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: DATA CANNOT BE REFORMATTED '
                               'TO TIED'
                       MOVE 0  TO RETURN-CODE
                   END-IF




               WHEN FUNCTION UPPER-CASE (P1) = 'SAVE'
                   DISPLAY 'BATCHART: ATTEMPTING TO SAVE GRAPH AS '
                   P2(1:8)
                   CALL 'BATCSAVE' USING        PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "SAVE"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: SAVED GRAPH  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN

               WHEN FUNCTION UPPER-CASE (P1) = 'PLOT'
                   DISPLAY 'BATCHART: ATTEMPTING TO PLOT GRAPH ON '
                   P2(1:8)
                   CALL 'BATCPLOT' USING        PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "PLOT"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: PLOTTED GRAPH  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN


               WHEN FUNCTION UPPER-CASE (P1) = 'NOTE'
                   DISPLAY 'BATCHART: ADDING NOTE TO GRAPH'
                   CALL 'BATCNOTE' USING        PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "NOTE"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: ADDED NOTE TO GRAPH'
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN


               WHEN FUNCTION UPPER-CASE (P1) = 'XNOTE'
                   DISPLAY 'BATCHART: ADDING XNOTE TO GRAPH'
                   CALL 'BATCXMRK' USING      PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY
                       'BATCHART:  ERROR ATTEMPTING "XNOTE"'

                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       MOVE 'Y' TO USE-XNOTES
                       DISPLAY 'BATCHART: ADDED X MARK TO GRAPH  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN



               WHEN FUNCTION UPPER-CASE (P1) = 'YNOTE'
                   DISPLAY 'BATCHART: ADDING YNOTE TO GRAPH'
                   CALL 'BATCYMRK' USING      PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY
                       'BATCHART:  ERROR ATTEMPTING "YNOTE"'

                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       MOVE 'Y' TO USE-YNOTES
                       DISPLAY 'BATCHART: ADDED Y MARK TO GRAPH  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN

               WHEN FUNCTION UPPER-CASE (P1) = 'PRINT'
                   DISPLAY 'BATCHART: ATTEMPTING TO PRINT GRAPH '
                   CALL 'BATCPRT' USING         PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "PRINT"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: PRINTED GRAPH  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN



               WHEN FUNCTION UPPER-CASE (P1) = 'PSEG'
                   DISPLAY 'BATCHART: ATTEMPTING TO CONVERT TO PSEG'
                   CALL 'BATCPSEG' USING        PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "PSEG"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: CREATED PSEG  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN

               WHEN FUNCTION UPPER-CASE (P1) = 'GIF'
                   DISPLAY 'BATCHART: ATTEMPTING TO CONVERT TO GIF'
                   CALL 'BATCGIF' USING         PREST BATCRPCS
                                          BATCRPCS-DATUM-COUNTS
                                          BATCRPCS-X-DATA
                                          BATCRPCS-Y-DATA
                                          BATCRPCS-GROUP-NAMES
                                          BATCRPCS-GROUP-LABELS
                                          BATCRPCS-HDR
                                          BATCRPCS-SWITCHES
                                          BATCRPCS-TABLED-LABELS
                                          BATCRPCS-TABLED-GROUP-NAMES
                                          BATCRPCS-NOTES
                   IF RETURN-CODE NOT = 0
                       DISPLAY 'BATCHART: ERROR ATTEMPTING "GIF"'
                       MOVE 12 TO RETURN-CODE
                       STOP RUN
                   END-IF
                   IF RETURN-CODE = 0
                       DISPLAY 'BATCHART: PRINTED GRAPH  '
                       MOVE 0  TO RETURN-CODE
                   END-IF
                   PERFORM READ-SYSIN


               WHEN FUNCTION UPPER-CASE (P1) = 'FORMAT'
                   CALL 'BATCFORM' USING        PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                                  BATCRPCS-TABLED-GROUP-NAMES
                                  BATCRPCS-NOTES
                   PERFORM READ-SYSIN
               WHEN FUNCTION UPPER-CASE (P1) = 'HEADER'
                   CALL 'BATCHDR' USING        PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                                  BATCRPCS-TABLED-GROUP-NAMES
                                  BATCRPCS-NOTES
                   PERFORM READ-SYSIN
               WHEN OTHER
                   CALL 'BATCONM' USING BY CONTENT
           'I BATCHART "SAVE", "PLOT", "FORMAT", "HEADER" OR "BUILD"  EC
      -    'XPECTED$'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INPUT OUT OF ORDER$'
               END-EVALUATE


           END-PERFORM



           STOP RUN



           .
       READ-SYSIN.
           CALL 'BATCREAD' USING S P1 P2 PREST

           .
       END PROGRAM 'BATCHART'.








       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCPSEG'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  DUMMY-PREST   PIC X(800).

       01  W-FP      COMP-1.

       01  W-OUTFILE PIC X(80).

       01  W-MEMBER   PIC X(8).
       01  W-PSEGWIDTH PIC ZZZ9.
       01  W-PSEGDEPTH PIC ZZZ9.
       01  W-NUM     PIC 999999999.

       01  W-TOKEN   PIC X(8).

       01  W-ROTATE  PIC X(8).

       01  W-COMMAND PIC X(255).




       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                            BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .
           MOVE 50 TO W-PSEGWIDTH
           MOVE 30 TO W-PSEGDEPTH

           MOVE ' ' TO W-ROTATE
           MOVE '$$$$TEMP' TO W-MEMBER


           MOVE ' ' TO DS
      *    DISPLAY 'PREST=' PREST
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20

           MOVE 'IMG240X' TO W-TOKEN

           SET D-X TO 1
           PERFORM UNTIL D-X > 20
           OR D(D-X) = ' '
               DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PSEGWIDTH'
                   PERFORM SET-PSEGWIDTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'OUTFILE'
                   PERFORM SET-OUTFILE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TOKEN'
                   PERFORM SET-TOKEN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ROTATE'
                   MOVE '37 1 ' TO W-ROTATE
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PSEGDEPTH'
                   PERFORM SET-PSEGDEPTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'MEMBER'
                   MOVE D(D-X + 1) TO W-MEMBER
                   SET D-X UP BY 2
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "PSEG"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "PSEG" CARD$'
               END-EVALUATE

           END-PERFORM



           IF W-MEMBER = '$$$$TEMP'

               MOVE ' ' TO PCS-PNAME
               MOVE 0     TO PCS-PRDEP
               MOVE 0     TO PCS-PRWID
               MOVE 1     TO PCS-PCOPY
               MOVE 0     TO PCS-PVOFF
               MOVE 0     TO PCS-PHOFF
               MOVE 2     TO PCS-PUNIT
               MOVE 0     TO PCS-PHEAD

               DISPLAY '         GRAPH MUST FIRST BE SAVED AS GDF'
               ' "$$$$TEMP"'

               MOVE '$$$$TEMP' TO DUMMY-PREST
               CALL 'BATCSAVE' USING        DUMMY-PREST BATCRPCS
                                      BATCRPCS-DATUM-COUNTS
                                      BATCRPCS-X-DATA
                                      BATCRPCS-Y-DATA
                                      BATCRPCS-GROUP-NAMES
                                      BATCRPCS-GROUP-LABELS
                                      BATCRPCS-HDR
                                      BATCRPCS-SWITCHES
                                      BATCRPCS-TABLED-LABELS
                        BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
               IF RETURN-CODE NOT = 0
                   DISPLAY '          ERROR ATTEMPTING "SAVE"'
                   MOVE 12 TO RETURN-CODE
                   STOP RUN
               END-IF
           END-IF


           MOVE ' ' TO  W-COMMAND
           STRING
           'BATCUSO '
           W-MEMBER '  '
           W-MEMBER '  '
           '99 4' ' '
           W-TOKEN  ' '
           '('
      *      WIDTH AND DEPTH
             '8 '
               W-PSEGWIDTH ' '
               W-PSEGDEPTH ' '
               '0  '

      *      PRINTER CONTROL - NO HEADER PAGE
             '4 '
               '1 '
               '0  '

      *      ROTATE
             W-ROTATE

      *      OUTPUT IN IMAGE FORMAT
             '9 '
               '1 '


      *      PSEG
             '5 '
               '1 '

           ') '
            '('
           DELIMITED SIZE
           W-OUTFILE
           DELIMITED SPACE
           ')'
           DELIMITED SIZE INTO W-COMMAND


      *    CALL ADMUCDSO WITH THE PREPARED DATA
      *
           DISPLAY '          CALLING BATCUSO WITH COMMAND '
           DISPLAY '         ' W-COMMAND


           CALL 'BATCCOMM'   USING W-COMMAND

           DISPLAY 'BATCHART: RC WAS ' RETURN-CODE

      *    DISPLAY '          POST PROCESSING TO REMOVE BDT/EDT'
      *    CALL 'BATCPP'

           GOBACK




           .
       SET-OUTFILE.
           MOVE D(D-X + 1) TO W-OUTFILE
           DISPLAY '          OUTPUT DDNAME SET TO ' W-OUTFILE

           SET D-X UP BY 2




           .
       SET-TOKEN.
           MOVE D(D-X + 2) TO W-TOKEN
           IF W-TOKEN = '*' OR ' '
               MOVE 'IMG240X' TO W-TOKEN
           END-IF
           DISPLAY '          DEVICE TOKEN SET TO ' W-TOKEN

           SET D-X UP BY 2


           .
       SET-PSEGWIDTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PSEG  PSEGWIDTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PSEG" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-PSEGWIDTH
           DISPLAY '          PSEGWIDTH SET TO '
           W-PSEGWIDTH ' 1/10THS INCH'

           SET D-X UP BY 2

           .
       SET-PSEGDEPTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PSEG  PSEGDEPTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PSEG" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-PSEGDEPTH
           DISPLAY '          PSEGDEPTH SET TO '
           W-PSEGDEPTH ' 1/10THS  INCH '

           SET D-X UP BY 2


           .
       END PROGRAM 'BATCPSEG'.











       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCPRT'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  DUMMY-PREST   PIC X(800).

       01  W-FP      COMP-1.

       01  W-MEMBER   PIC X(8).
       01  W-PAPERWIDTH PIC ZZZ9.
       01  W-PAPERDEPTH PIC ZZZ9.
       01  W-NUM     PIC 999999999.

       01  W-TOKEN   PIC X(8).

       01  W-ROTATE  PIC X(8).

       01  W-COMMAND PIC X(255).

       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                            BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .
           MOVE 110 TO W-PAPERWIDTH
           MOVE 70 TO W-PAPERDEPTH

           MOVE ' ' TO W-ROTATE
           MOVE '$$$$TEMP' TO W-MEMBER


           MOVE ' ' TO DS
      *    DISPLAY 'PREST=' PREST
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20

           MOVE 'IMG240X' TO W-TOKEN

           SET D-X TO 1
           PERFORM UNTIL D-X > 20
           OR D(D-X) = ' '
               DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PAPERWIDTH'
                   PERFORM SET-PAPERWIDTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TOKEN'
                   PERFORM SET-TOKEN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ROTATE'
                   MOVE '37 1 ' TO W-ROTATE
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PAPERDEPTH'
                   PERFORM SET-PAPERDEPTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'MEMBER'
                   MOVE D(D-X + 1) TO W-MEMBER
                   SET D-X UP BY 2
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "PRINT"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "PRINT" CARD$'
               END-EVALUATE

           END-PERFORM



           IF W-MEMBER = '$$$$TEMP'

               MOVE ' ' TO PCS-PNAME
               MOVE 0     TO PCS-PRDEP
               MOVE 0     TO PCS-PRWID
               MOVE 1     TO PCS-PCOPY
               MOVE 0     TO PCS-PVOFF
               MOVE 0     TO PCS-PHOFF
               MOVE 2     TO PCS-PUNIT
               MOVE 0     TO PCS-PHEAD

               DISPLAY '         GRAPH MUST FIRST BE SAVED AS GDF'
               ' "$$$$TEMP"'

               MOVE '$$$$TEMP' TO DUMMY-PREST
               CALL 'BATCSAVE' USING        DUMMY-PREST BATCRPCS
                                      BATCRPCS-DATUM-COUNTS
                                      BATCRPCS-X-DATA
                                      BATCRPCS-Y-DATA
                                      BATCRPCS-GROUP-NAMES
                                      BATCRPCS-GROUP-LABELS
                                      BATCRPCS-HDR
                                      BATCRPCS-SWITCHES
                                      BATCRPCS-TABLED-LABELS
                        BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
               IF RETURN-CODE NOT = 0
                   DISPLAY '          ERROR ATTEMPTING "SAVE"'
                   MOVE 12 TO RETURN-CODE
                   STOP RUN
               END-IF
           END-IF


           MOVE ' ' TO  W-COMMAND

           STRING 'BATCUSO '
           W-MEMBER '  '
           W-MEMBER '  '
           '99 4' ' '
           W-TOKEN  ' '
           '('
      *      WIDTH AND DEPTH
             '8 '
               W-PAPERWIDTH ' '
               W-PAPERDEPTH ' '
               '0 '

      *      PRINTER CONTROL - NO HEADER PAGE
             '4 '
               '1 '
               '0 '

      *      ROTATE
             W-ROTATE

      *      OUTPUT IN IMAGE FORMAT
             '9 '
               '1 '

      *      NO PAGE FEED
             '10 '
               '1 '

           ') '
            '(ADMPRINT) '
           DELIMITED SIZE

           INTO W-COMMAND


      *    CALL ADMUCDSO WITH THE PREPARED DATA
      *
           DISPLAY '          CALLING BATCUSO WITH COMMAND '
           DISPLAY '         ' W-COMMAND


           CALL 'BATCCOMM'   USING W-COMMAND

           DISPLAY 'BATCHART: RC WAS ' RETURN-CODE
      *    DISPLAY '          POST PROCESSING TO REMOVE BDT/EDT'
      *    CALL 'BATCPP'


           GOBACK




           .
       SET-TOKEN.
           MOVE D(D-X + 2) TO W-TOKEN
           IF W-TOKEN = '*' OR ' '
               MOVE 'IMG240X' TO W-TOKEN
           END-IF
           DISPLAY '          DEVICE TOKEN SET TO ' W-TOKEN

           SET D-X UP BY 2


           .
       SET-PAPERWIDTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PRINT  PAPERWIDTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PRINT" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-PAPERWIDTH
           DISPLAY '          PAPERWIDTH SET TO '
           W-PAPERWIDTH ' 1/10THS INCH'

           SET D-X UP BY 2

           .
       SET-PAPERDEPTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PRINT  PAPERDEPTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PRINT" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-PAPERDEPTH
           DISPLAY '          PAPERDEPTH SET TO '
           W-PAPERDEPTH ' 1/10THS  INCH '

           SET D-X UP BY 2


           .
       END PROGRAM 'BATCPRT'.













       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCGIF'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  DUMMY-PREST   PIC X(800).

       01  W-FP      COMP-1.

       01  W-COMMAND PIC X(255).
       01  W-MEMBER   PIC X(8).
       01  W-WIDTH PIC      9999.
       01  W-DEPTH PIC      9999.
       01  W-NUM-X.
           04  W-NUM     PIC 999999999.

       01  W-OUTFILE PIC X(80).

       01  W-WORKJUST  PIC  XXXX.

       01  W-TRANSCOL.
           04  W-TRANSCOL-N PIC ZZZ9.

       01  W-BACKCOL.
           04  W-BACKCOL-N  PIC ZZZ9.

       01  W-ASPECT   PIC X.


       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                            BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .
           MOVE 800 TO W-WIDTH
           MOVE 550 TO W-DEPTH
           MOVE '-1' TO W-TRANSCOL
           MOVE '-2' TO W-BACKCOL
           MOVE '0' TO W-ASPECT


           MOVE '$$$$TEMP' TO W-MEMBER


           MOVE ' ' TO DS
      *    DISPLAY 'PREST=' PREST
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20

           MOVE ' ' TO W-OUTFILE

           SET D-X TO 1
           PERFORM UNTIL D-X > 20
           OR D(D-X) = ' '
               DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'WIDTH'
                   PERFORM SET-WIDTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'OUTFILE'
                   PERFORM SET-OUTFILE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BLACK'
                   MOVE '-1' TO W-TRANSCOL
                   MOVE '00' TO W-BACKCOL
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'WHITE'
                   MOVE '-1' TO W-TRANSCOL
                   MOVE '-2' TO W-BACKCOL
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TRANSPARENT'
                   MOVE '-2' TO W-TRANSCOL
                   MOVE '-2' TO W-BACKCOL
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TRANSCOL'
                   MOVE '-2' TO W-TRANSCOL
                   CALL 'BATCNUM' USING D(D-X + 1) W-FP
                   IF RETURN-CODE > 0
                       DISPLAY 'BATCHART: INVALID NUMBER '
                       D(D-X + 1) ' SUPPLIED TO "GIF TRANSCOL"'
                       CALL 'BATCONM' USING BY CONTENT
                       'C BATCHART INVALID "GIF" CARD$'
                   END-IF
                   MOVE W-FP TO W-NUM
                   MOVE W-NUM TO W-TRANSCOL-N
                   IF D(D-X + 1) = '-1' MOVE '-1' TO W-TRANSCOL END-IF
                   IF D(D-X + 1) = '-2' MOVE '-2' TO W-TRANSCOL END-IF
                   SET D-X UP BY 2
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BACKCOL'
                   MOVE '-2' TO W-BACKCOL
                   CALL 'BATCNUM' USING D(D-X + 1) W-FP
                   IF RETURN-CODE > 0
                       DISPLAY 'BATCHART: INVALID NUMBER '
                       D(D-X + 1) ' SUPPLIED TO "GIF BACKCOL"'
                       CALL 'BATCONM' USING BY CONTENT
                       'C BATCHART INVALID "GIF" CARD$'
                   END-IF
                   MOVE W-FP TO W-NUM
                   MOVE W-NUM TO W-BACKCOL-N
                   IF D(D-X + 1) = '-1' MOVE '-1' TO W-BACKCOL END-IF
                   IF D(D-X + 1) = '-2' MOVE '-2' TO W-BACKCOL END-IF
                   SET D-X UP BY 2
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'STRETCH'
                   MOVE '0' TO W-ASPECT
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ADJUST'
                   MOVE '1' TO W-ASPECT
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'KEEP'
                   MOVE '2' TO W-ASPECT
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'DEPTH'
                   PERFORM SET-DEPTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'MEMBER'
                   MOVE D(D-X + 1) TO W-MEMBER
                   SET D-X UP BY 2
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "GIF"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "GIF" CARD$'
               END-EVALUATE

           END-PERFORM



           IF W-MEMBER = '$$$$TEMP'

               MOVE ' ' TO PCS-PNAME
               MOVE 0     TO PCS-PRDEP
               MOVE 0     TO PCS-PRWID
               MOVE 1     TO PCS-PCOPY
               MOVE 0     TO PCS-PVOFF
               MOVE 0     TO PCS-PHOFF
               MOVE 2     TO PCS-PUNIT
               MOVE 0     TO PCS-PHEAD

               DISPLAY '         GRAPH MUST FIRST BE SAVED AS GDF'
               ' "$$$$TEMP"'

               MOVE '$$$$TEMP' TO DUMMY-PREST
               CALL 'BATCSAVE' USING        DUMMY-PREST BATCRPCS
                                      BATCRPCS-DATUM-COUNTS
                                      BATCRPCS-X-DATA
                                      BATCRPCS-Y-DATA
                                      BATCRPCS-GROUP-NAMES
                                      BATCRPCS-GROUP-LABELS
                                      BATCRPCS-HDR
                                      BATCRPCS-SWITCHES
                                      BATCRPCS-TABLED-LABELS
                        BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
               IF RETURN-CODE NOT = 0
                   DISPLAY '          ERROR ATTEMPTING "SAVE"'
                   MOVE 12 TO RETURN-CODE
                   STOP RUN
               END-IF
           END-IF



           IF W-BACKCOL(1:1) = ' '
               MOVE W-BACKCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-BACKCOL
           END-IF

           IF W-BACKCOL(1:1) = ' '
               MOVE W-BACKCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-BACKCOL
           END-IF

           IF W-BACKCOL(1:1) = ' '
               MOVE W-BACKCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-BACKCOL
           END-IF

           IF W-BACKCOL(1:1) = ' '
               MOVE W-BACKCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-BACKCOL
           END-IF

           IF W-BACKCOL(1:1) = ' '
               MOVE W-BACKCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-BACKCOL
           END-IF


           IF W-TRANSCOL(1:1) = ' '
               MOVE W-TRANSCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-TRANSCOL
           END-IF


           IF W-TRANSCOL(1:1) = ' '
               MOVE W-TRANSCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-TRANSCOL
           END-IF


           IF W-TRANSCOL(1:1) = ' '
               MOVE W-TRANSCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-TRANSCOL
           END-IF


           IF W-TRANSCOL(1:1) = ' '
               MOVE W-TRANSCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-TRANSCOL
           END-IF


           IF W-TRANSCOL(1:1) = ' '
               MOVE W-TRANSCOL(2:) TO W-WORKJUST
               MOVE W-WORKJUST TO W-TRANSCOL
           END-IF


           MOVE ' ' TO  W-COMMAND
           STRING
           'BATCCGIF         '
              DELIMITED SIZE
           'FROM('
              DELIMITED SIZE
           W-MEMBER
              DELIMITED SPACE
           ')  '
              DELIMITED SIZE
           'TO('
              DELIMITED SIZE
           W-OUTFILE
              DELIMITED SPACE
           ')  '
              DELIMITED SIZE
           'ASPECT('
              DELIMITED SIZE
           W-ASPECT
              DELIMITED SPACE
           ')  '
              DELIMITED SIZE
           'BACKCOL('
              DELIMITED SIZE
           W-BACKCOL
              DELIMITED SPACE
           ')  '
              DELIMITED SIZE
           'TRANSCOL('
              DELIMITED SIZE
           W-TRANSCOL
              DELIMITED SPACE
           ')  '
              DELIMITED SIZE
           ' WIDTH('
              DELIMITED SIZE
           W-WIDTH
              DELIMITED SPACE
           ') '
              DELIMITED SIZE
           ' DEPTH('
              DELIMITED SIZE
           W-DEPTH
              DELIMITED SPACE
           ')  '
              DELIMITED SIZE

           INTO W-COMMAND

      *    CALL ADMUGIF WITH THE PREPARED DATA
      *
           DISPLAY '          CALLING BATCCGIF WITH COMMAND '
           DISPLAY '         ' W-COMMAND


           CALL 'BATCCOMM'   USING W-COMMAND

           DISPLAY 'BATCHART: RC WAS ' RETURN-CODE
      *    DISPLAY '          POST PROCESSING TO REMOVE BDT/EDT'
      *    CALL 'BATCPP'

           GOBACK




           .
       SET-OUTFILE.
           MOVE D(D-X + 1) TO W-OUTFILE
           DISPLAY '          OUTPUT DDNAME SET TO ' W-OUTFILE

           SET D-X UP BY 2


           .
       SET-WIDTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "GIF  WIDTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "GIF" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-WIDTH
           DISPLAY '          WIDTH SET TO '
           W-WIDTH ' '

           SET D-X UP BY 2

           .
       SET-DEPTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "GIF  DEPTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "GIF" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-DEPTH
           DISPLAY '          DEPTH SET TO '
           W-DEPTH ' '

           SET D-X UP BY 2


           .
       END PROGRAM 'BATCGIF'.












       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCPLOT'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  W-FP      COMP-1.
       01  W-DISP    PIC ZZZ9.
       01  W-NUM     PIC 999999999.

       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                             BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .

      *    DISPLAY '         (GRAPH MUST FIRST BE SAVED)'
           CALL 'BATCFSIN'
           CALL 'BATCDUM' USING BATCRPCS-SWITCHES

           MOVE ' ' TO PCS-PNAME
           MOVE 0     TO PCS-PRDEP
           MOVE 0     TO PCS-PRWID
           MOVE 1     TO PCS-PCOPY
           MOVE 0     TO PCS-PVOFF
           MOVE 0     TO PCS-PHOFF
           MOVE 2     TO PCS-PUNIT
           MOVE 0     TO PCS-PHEAD


           MOVE ' ' TO DS
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20

           MOVE D(1) TO PCS-PNAME
           SET D-X TO 2
           PERFORM UNTIL D-X > 10
           OR D(D-X) = ' '
      *        DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PAPERWIDTH'
                   PERFORM SET-PAPERWIDTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PAPERDEPTH'
                   PERFORM SET-PAPERDEPTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'COPIES'
                   PERFORM SET-COPIES
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "PLOT"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "PLOT" CARD$'
               END-EVALUATE

           END-PERFORM



           MOVE 4 TO PCS-DISP

      *    CALL THE CHART UTILITY WITH THE PREPARED DATA
      *
           DISPLAY 'BATCHART: PLOTTING ON ' PCS-PNAME

      *        DISPLAY ' '
      *        DISPLAY            BATCRPCS
      *        DISPLAY            GROUP-DATUM-COUNT
      *        DISPLAY            BATCRPCS-X-DATA
      *        DISPLAY            BATCRPCS-Y-DATA
      *        DISPLAY            BATCRPCS-GROUP-NAMES (1:40)
      *        DISPLAY            BATCRPCS-GROUP-LABELS (1:40)
      *        DISPLAY            BATCRPCS-HDR
      *        DISPLAY ' '

           CALL 'CHART' USING BATCRPCS
                              BATCRPCS-DATUM-COUNTS
                              BATCRPCS-X-DATA
                              BATCRPCS-Y-DATA
                              BATCRPCS-GROUP-NAMES
                              BATCRPCS-GROUP-LABELS
                              BATCRPCS-HDR

           DISPLAY 'BATCHART: RC WAS ' RETURN-CODE

           CALL 'FSTERM'

           GOBACK




           .
       SET-PAPERWIDTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PLOT  PAPERWIDTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PLOT" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-DISP
           DISPLAY '          PAPERWIDTH SET TO '
           W-DISP ' 1/10THS INCH '
           COMPUTE PCS-PRWID
           = W-FP / 10

           SET D-X UP BY 2

           .
       SET-PAPERDEPTH.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PLOT  PAPERDEPTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PLOT" CARD$'
           END-IF
           MOVE W-FP TO W-NUM
           MOVE W-NUM TO W-DISP
           DISPLAY '          PAPERDEPTH SET TO '
           W-DISP ' 1/10THS INCH '
           COMPUTE  PCS-PRDEP
           = W-FP / 10

           SET D-X UP BY 2

           .
       SET-COPIES.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "PLOT  COPIES"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "PLOT" CARD$'
           END-IF
           DISPLAY '          COPIES SET TO ' W-FP
           MOVE W-FP TO PCS-PCOPY

           SET D-X UP BY 2


           .
       END PROGRAM 'BATCPLOT'.




       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCSAVE'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.

       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.
       01  P1    PIC X(800).
       01  P2    PIC X(800).
       01  W-D   PIC X(80).
       01  FP-1  COMP-1.

       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                             BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .

      *    DISPLAY  'BATCSAVE ENTERED'

           MOVE ' ' TO DS
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20
           MOVE FUNCTION UPPER-CASE(D1) TO PCS-PNAME

           DISPLAY 'BATCHART: SAVING GDF MEMBER ' PCS-PNAME

           MOVE 'ADMKPCA1' TO DUMMY-DEV-TOKEN
           MOVE 1          TO DUMMY-FAM-TYPE
           SET D-X TO 2
           PERFORM UNTIL D-X > 10
           OR D(D-X) = ' '
      *        DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TOKEN'
                   PERFORM SET-TOKEN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PORTRAIT'
                   PERFORM SET-PORTRAIT
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SQUARE'
                   PERFORM SET-SQUARE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'LANDSCAPE'
                   PERFORM SET-LANDSCAPE
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "SAVE"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "SAVE" CARD$'
               END-EVALUATE

           END-PERFORM

           CALL 'BATCFSIN'
           CALL 'BATCDUM' USING BATCRPCS-SWITCHES
           MOVE 9 TO PCS-DISP

      *    CALL THE CHART UTILITY WITH THE PREPARED DATA
      *

           DISPLAY '          NUMBER OF GROUPS   =' PCS-NG
           DISPLAY '          NUMBER OF ELEMENTS =' PCS-NE
           DISPLAY '          PAIRED/TIED        =' PCS-PAIR

      *
      *        DISPLAY ' '
      *        DISPLAY            BATCRPCS
      *        DISPLAY            GROUP-DATUM-COUNT(1)
      *        DISPLAY            GROUP-DATUM-COUNT(2)
      *        DISPLAY            BATCRPCS-X-DATA
      *        DISPLAY            BATCRPCS-Y-DATA
      *        DISPLAY            BATCRPCS-GROUP-NAMES (1:60)
      *        DISPLAY            BATCRPCS-GROUP-LABELS (1:60)
      *        DISPLAY            BATCRPCS-HDR
      *        DISPLAY ' '

           CALL 'CHART' USING BATCRPCS
                              BATCRPCS-DATUM-COUNTS
                              BATCRPCS-X-DATA
                              BATCRPCS-Y-DATA
                              BATCRPCS-GROUP-NAMES
                              BATCRPCS-GROUP-LABELS
                              BATCRPCS-HDR

           DISPLAY 'BATCHART: RC WAS ' RETURN-CODE



           CALL 'FSTERM'
           MOVE 'ADMKPCA1' TO DUMMY-DEV-TOKEN
           MOVE 1          TO DUMMY-FAM-TYPE

           GOBACK


           .
       SET-TOKEN.
           SET D-X UP BY 1
           MOVE ' ' TO DUMMY-DEV-TOKEN W-D
           UNSTRING D(D-X)
           DELIMITED '_'
           INTO DUMMY-DEV-TOKEN W-D
           MOVE 0 TO FP-1
           CALL 'BATCNUM' USING W-D FP-1
           IF RETURN-CODE > 0
               OR FP-1 < 1
               OR FP-1 > 4
               DISPLAY 'BATCHART: INVALID FAMILY TYPE '
               D(D-X) ' SUPPLIED TO "SAVE  TOKEN" '
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           MOVE FP-1 TO DUMMY-FAM-TYPE
           DISPLAY
           '          DUMMY DEVICE TOKEN SET TO ' DUMMY-DEV-TOKEN
                   ' FAMILY ' DUMMY-FAM-TYPE

           SET D-X UP BY 1



           .
       SET-LANDSCAPE.
           SET D-X UP BY 1
           MOVE 'ADMKPCA1' TO DUMMY-DEV-TOKEN
           MOVE 1          TO DUMMY-FAM-TYPE

           .
       SET-PORTRAIT.
           SET D-X UP BY 1
           MOVE 'LEGAL   ' TO DUMMY-DEV-TOKEN
           MOVE 4          TO DUMMY-FAM-TYPE

           .
       SET-SQUARE.
           SET D-X UP BY 1
           MOVE 'CAN1024 ' TO DUMMY-DEV-TOKEN
           MOVE 4          TO DUMMY-FAM-TYPE


           .
       END PROGRAM 'BATCSAVE'.





       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCBU'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.

       01  DATUM-COUNT       PIC S9(4) COMP.

       01  MSG      PICTURE X(250) VALUE ' '.

       01  NUM-LABELS-PARSED PIC S9(8) COMP VALUE 0.

       01  A                 PIC S9(8) COMP VALUE 0.
       01  B                 PIC S9(8) COMP VALUE 0.
       01  I                 PIC S9(8) COMP VALUE 0.
       01  J                 PIC S9(8) COMP VALUE 0.
       01  K                 PIC S9(8) COMP VALUE 0.
       01  L                 PIC S9(8) COMP VALUE 0.
       01  M                 PIC S9(8) COMP VALUE 0.
       01  N                 PIC S9(8) COMP VALUE 0.

       01  D     PIC X(80).
       01  D1    PIC X(80).
       01  D2    PIC X(80).

       01  FP-1  COMP-1.

       01  PACKED-1 PIC S9(9)V9(6)  COMP-3.

       01  DUMMY-TIEDLABELS PIC X(10000) VALUE ' '.

       LINKAGE SECTION.
       01  S     PIC X(800).
       01  P1    PIC X(800).
       01  P2    PIC X(800).
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING S P1 P2 PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                             BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .

      *    DISPLAY  'BATCBU ENTERED'
           MOVE 1 TO PCS-LEVEL

           MOVE 'BATLINE' TO PCS-FNAME
           MOVE '*      ' TO PCS-DNAME
           MOVE '       ' TO PCS-PNAME
           MOVE ' ' TO BATCRPCS-HDR
           MOVE 0  TO PCS-HDR-L

           MOVE ' ' TO BATCRPCS-NOTES
           MOVE ' ' TO BATCRPCS-GROUP-NAMES
           MOVE 0  TO PCS-KEY-L
           MOVE ' ' TO BATCRPCS-GROUP-LABELS
           MOVE 0  TO PCS-LABEL-L
           MOVE 'N' TO CENTRE-LABELS
           MOVE 'N' TO USE-YNOTES
           MOVE 'N' TO USE-XNOTES
           MOVE 'ADMKPCA1' TO DUMMY-DEV-TOKEN
           MOVE 1          TO DUMMY-FAM-TYPE

           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 999
                MOVE 1.0E+72 TO X-DATUM(I)
                MOVE 1.0E+72 TO Y-DATUM(I)
           END-PERFORM


           MOVE ' ' TO BATCRPCS-TABLED-LABELS
           MOVE 0  TO NUM-LABELS-PARSED

           MOVE 0 TO PCS-NE
           MOVE 0 TO PCS-NG
           MOVE 1 TO PCS-PAIR


           CALL 'BATCHDR' USING         PREST BATCRPCS
                          BATCRPCS-DATUM-COUNTS
                          BATCRPCS-X-DATA
                          BATCRPCS-Y-DATA
                          BATCRPCS-GROUP-NAMES
                          BATCRPCS-GROUP-LABELS
                          BATCRPCS-HDR
                          BATCRPCS-SWITCHES
                          BATCRPCS-TABLED-LABELS
                          BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES


           PERFORM  READ-SYSIN
           PERFORM UNTIL NOT (FUNCTION UPPER-CASE (P1) =
           'HEADER' OR
           'FORMAT' OR
           'TIEDXVALUES' OR
           'HEADER'
           )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE (P1) = 'HEADER'
                   CALL 'BATCHDR' USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                   PERFORM  READ-SYSIN
               WHEN FUNCTION UPPER-CASE (P1) = 'FORMAT'
                   CALL 'BATCFORM' USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                             BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                   PERFORM  READ-SYSIN
               WHEN FUNCTION UPPER-CASE (P1) = 'TIEDXVALUES'
                   DISPLAY 'BATCHART: TIEDXVALUES WILL BE USED '
                   PERFORM PARSE-TIEDXVALUES
                   MOVE 0 TO PCS-PAIR
                   PERFORM  READ-SYSIN
               END-EVALUATE


           END-PERFORM


           IF FUNCTION UPPER-CASE (P1) NOT = 'GROUP'
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING
               BY CONTENT
               'C BATCHART INPUT OUT OF ORDER - "GROUP" EXPECTED$'
           END-IF


           SET X-DATUM-X TO 1
           SET Y-DATUM-X TO 1
           MOVE 0 TO PCS-NG
           IF NUM-LABELS-PARSED = 0
               PERFORM UNTIL FUNCTION UPPER-CASE (P1) NOT = 'GROUP'
                   ADD 1 TO PCS-NG
                   PERFORM ONE-GROUP-FREE
               END-PERFORM
           ELSE
               PERFORM UNTIL FUNCTION UPPER-CASE (P1) NOT = 'GROUP'
                   ADD 1 TO PCS-NG
                   PERFORM ONE-GROUP-TIED
               END-PERFORM
           END-IF

           IF PCS-NG < 1
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING BY CONTENT 'C BATCHART NO DATA$'
           END-IF

      *    MOVE KEYS IN

           IF PCS-KEY-L > 0

               MOVE ' ' TO BATCRPCS-GROUP-NAMES
               MOVE 1 TO I
               PERFORM VARYING J FROM 1 BY 1 UNTIL J > PCS-NG
                   MOVE BATCRPCS-TABLED-GROUP-NAME(J)
                   TO BATCRPCS-GROUP-NAMES(I:PCS-KEY-L)
                   ADD PCS-KEY-L TO I
               END-PERFORM
               INSPECT BATCRPCS-GROUP-NAMES CONVERTING '_' TO ' '

           END-IF


           GOBACK






           .
       PARSE-TIEDXVALUES.


           MOVE 1 TO I
           MOVE 1 TO J
           MOVE 1 TO K
           MOVE 0 TO PCS-LABEL-L
           MOVE ' ' TO BATCRPCS-TABLED-LABELS


           PERFORM UNTIL I NOT < LENGTH OF PREST
           OR PREST(I:) = ' '

               PERFORM UNTIL I NOT < LENGTH OF PREST
               OR PREST(I:1) NOT = ' '
                   ADD 1 TO I
               END-PERFORM

               IF PREST(I:) NOT = ' '
               AND I < LENGTH OF PREST
                   MOVE 1 TO J

                   PERFORM UNTIL PREST(I:1) = ' '
                   OR I NOT < LENGTH OF PREST
                       MOVE PREST(I:1) TO
                       BATCRPCS-TABLED-LABEL (K)(J:1)
                       ADD 1 TO I
                       ADD 1 TO J
                   END-PERFORM

                   IF J > PCS-LABEL-L
                       MOVE J TO PCS-LABEL-L
                   END-IF

                   DISPLAY '          TIED VALUE ' K ' IS '
                   BATCRPCS-TABLED-LABEL (K)

                   ADD 1 TO K

               END-IF


           END-PERFORM

           COMPUTE PCS-LABEL-L = PCS-LABEL-L - 1

           COMPUTE NUM-LABELS-PARSED  = K - 1
           MOVE NUM-LABELS-PARSED TO PCS-NE

      *    DISPLAY BATCRPCS-TABLED-LABELS
      *    DISPLAY PCS-NE



           .
       ONE-GROUP-FREE.

      *    DISPLAY 'ONE GROUP UNLABLED'
           MOVE 0 TO GROUP-DATUM-COUNT(PCS-NG)


           MOVE P2 TO BATCRPCS-TABLED-GROUP-NAME(PCS-NG)
           COMPUTE N = LENGTH OF BATCRPCS-TABLED-GROUP-NAME - 1
           PERFORM UNTIL N < 1 OR PREST(N:1) NOT = ' '
               COMPUTE N = N - 1
           END-PERFORM

           IF N > PCS-KEY-L
                MOVE N TO PCS-KEY-L
           END-IF



           PERFORM READ-SYSIN
           IF FUNCTION UPPER-CASE (P1) NOT = 'DATUM'
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING
               BY CONTENT
               'C BATCHART INPUT OUT OF ORDER - "DATUM" EXPECTED$'
           END-IF
           DISPLAY 'BATCHART: PROCESSING GROUP ' PCS-NG
           MOVE 1 TO DATUM-COUNT
           PERFORM UNTIL FUNCTION UPPER-CASE (P1) NOT = 'DATUM'
               PERFORM ONE-DATUM-FREE
               ADD 1 TO DATUM-COUNT
               PERFORM READ-SYSIN
           END-PERFORM

           IF DATUM-COUNT > PCS-NE
               MOVE DATUM-COUNT TO PCS-NE
           END-IF


           .
       ONE-DATUM-FREE.
      *    DISPLAY 'ONE DATUM UNLABLED'

           MOVE ' ' TO D D1 D2
           MOVE 1 TO N
           PERFORM UNTIL N > 100 OR
           PREST(N:1) NOT = ' '
               ADD 1 TO N
           END-PERFORM
           MOVE PREST(N:) TO D
           UNSTRING D DELIMITED ALL SPACE INTO D1 D2


           CALL 'BATCXNUM' USING D1 X-DATUM(X-DATUM-X) DUMMY-TIEDLABELS
           IF RETURN-CODE NOT = 0
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART "DATUM" X VALUE INVALID$'
           END-IF

           CALL 'BATCNUM' USING D2 Y-DATUM(Y-DATUM-X)
           IF RETURN-CODE NOT = 0
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART "DATUM" Y-VALUE INVALID$'
           END-IF
           SET A TO X-DATUM-X
           SET B TO Y-DATUM-X
           DISPLAY '          DATUM '
           DATUM-COUNT ' FOR GROUP ' PCS-NG
           ' SET TO X(' A ')= '
           X-DATUM(X-DATUM-X)
           ' Y(' B ')= '
           Y-DATUM(Y-DATUM-X)
           ADD 1 TO GROUP-DATUM-COUNT(PCS-NG)
           SET X-DATUM-X UP BY 1
           SET Y-DATUM-X UP BY 1



           .
       ONE-GROUP-TIED.
      *    DISPLAY 'ONE GROUP LABLED'

           MOVE PCS-NE TO GROUP-DATUM-COUNT(PCS-NG)

           MOVE P2 TO BATCRPCS-TABLED-GROUP-NAME(PCS-NG)
           COMPUTE N = LENGTH OF BATCRPCS-TABLED-GROUP-NAME - 1
           PERFORM UNTIL N < 1 OR PREST(N:1) NOT = ' '
               COMPUTE N = N - 1
           END-PERFORM

           IF N > PCS-KEY-L
                MOVE N TO PCS-KEY-L
           END-IF



           PERFORM READ-SYSIN
           IF FUNCTION UPPER-CASE (P1) NOT = 'DATUM'
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING
               BY CONTENT
               'C BATCHART INPUT OUT OF ORDER - "DATUM" EXPECTED$'
           END-IF
           DISPLAY 'BATCHART: PROCESSING GROUP ' PCS-NG
           ' ' BATCRPCS-TABLED-GROUP-NAME(PCS-NG) (1:40)
           MOVE 1 TO DATUM-COUNT
           PERFORM UNTIL FUNCTION UPPER-CASE (P1) NOT = 'DATUM'
               PERFORM ONE-DATUM-TIED
               ADD 1 TO DATUM-COUNT
               PERFORM READ-SYSIN
           END-PERFORM



           .
       ONE-DATUM-TIED.
      *    DISPLAY 'ONE DATUM LABLED'

      *    DISPLAY 'PREST=' PREST
           MOVE ' ' TO D D1 D2
           MOVE 1 TO N
           PERFORM UNTIL N > 100 OR
           PREST(N:1) NOT = ' '
               ADD 1 TO N
           END-PERFORM
           MOVE PREST(N:) TO D
           UNSTRING D DELIMITED ALL SPACE INTO D1 D2
      *    DISPLAY 'D=' D
      *    DISPLAY 'D1=' D1
      *    DISPLAY 'D2=' D2

           CALL 'BATCXNUM' USING D1 FP-1
           BATCRPCS-TABLED-LABELS
           IF RETURN-CODE > 0
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART "DATUM" SPECIFIES NON-EXISTENT TIED X VALUE$'
           END-IF

           MOVE FP-1 TO I

      *    DISPLAY 'D2=' D2

           COMPUTE J = ((PCS-NG - 1) * PCS-NE) + I
           SET Y-DATUM-X TO J
           SET X-DATUM-X TO J
           CALL 'BATCNUM' USING D2 Y-DATUM(Y-DATUM-X)
           IF RETURN-CODE NOT = 0
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART "DATUM" - Y-VALUE INVALID$'
           END-IF
      *    MOVE  Y-DATUM(Y-DATUM-X) TO X-DATUM(X-DATUM-X)
           MOVE  I                  TO X-DATUM(X-DATUM-X)
           DISPLAY '          DATUM '
           DATUM-COUNT ' FOR GROUP ' PCS-NG
           ' X(' J ')= ' X-DATUM(X-DATUM-X)
           ' Y(' J ')= ' Y-DATUM(Y-DATUM-X)



           .
       READ-SYSIN.
           CALL 'BATCREAD' USING S P1 P2 PREST
           .
       END PROGRAM 'BATCBU'.






       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCFORM'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
           04  D21   PIC X(80).
           04  D22   PIC X(80).
           04  D23   PIC X(80).
           04  D24   PIC X(80).
           04  D25   PIC X(80).
           04  D26   PIC X(80).
           04  D27   PIC X(80).
           04  D28   PIC X(80).
           04  D29   PIC X(80).
           04  D30   PIC X(80).
           04  D31   PIC X(80).
           04  D32   PIC X(80).
           04  D33   PIC X(80).
           04  D34   PIC X(80).
           04  D35   PIC X(80).
           04  D36   PIC X(80).
           04  D37   PIC X(80).
           04  D38   PIC X(80).
           04  D39   PIC X(80).
           04  D40   PIC X(80).

       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 40 INDEXED BY D-X.

       01  CHART-ID    PIC S9(8) COMP VALUE +1.
       01  W-DUMMY        PIC S9(8) COMP.
       01  CSQNUM-REPLY   PIC S9(8) COMP.
       01  DATA-ATTRGROUP PIC S9(8) COMP.
       01  CS-TYPE     PIC S9(8) COMP.
       01  CS-OPTION      PIC S9(8) COMP.
       01  COUNT-VALUES   PIC S9(8) COMP.
       01  START-VALUE    PIC S9(8) COMP.
       01  NOTE-NUMBER    PIC S9(8) COMP.
       01  LINE-NUMBER    PIC S9(8) COMP.
       01  W-SETPLOTTYPE  PIC S9(8) COMP.
       01  W-SETPLOTNAME  PIC X(30).
       01  W-FP           COMP-1.
       01  W-INT          PIC S9(8) COMP.

       01  PATTERN-PATTERNS.
           04  FILLER PIC S9(8) COMP VALUE 11.
           04  FILLER PIC S9(8) COMP VALUE 13.
           04  FILLER PIC S9(8) COMP VALUE 9.
           04  FILLER PIC S9(8) COMP VALUE 10.
           04  FILLER PIC S9(8) COMP VALUE 12.
           04  FILLER PIC S9(8) COMP VALUE 14.
           04  FILLER PIC S9(8) COMP VALUE  8.
           04  FILLER PIC S9(8) COMP VALUE  1.
       01  FILLER REDEFINES PATTERN-PATTERNS.
           04  PATTERN-PATTERN PIC S9(8) COMP OCCURS 8.

       01  W-D        PIC X(80).
       01  W-D2       PIC X(80).
       01  W-D2-NUM   PIC S9(8) COMP.

       01  CH-VALUE   PIC X(255).
       01  CH-LEN     PIC S9(8) COMP.

       01  INT-VALUES.
           04  INT-1  PIC S9(8) COMP.
           04  INT-2  PIC S9(8) COMP.
           04  INT-3  PIC S9(8) COMP.
           04  INT-4  PIC S9(8) COMP.

       01  FP-VALUES.
           04  FP-1   COMP-1.
           04  FP-2   COMP-1.
           04  FP-3   COMP-1.
           04  FP-4   COMP-1.

       01  M     PIC X(40).

       01  SPECIFIED-TYPES.
           04  TYPE-LINE            PIC X.
           04  TYPE-SURFACE         PIC X.
           04  TYPE-HISTOGRAM       PIC X.
           04  TYPE-BAR             PIC X.
           04  TYPE-PIE             PIC X.
           04  TYPE-POLAR           PIC X.
           04  TYPE-TOWER           PIC X.
           04  TYPE-VENN            PIC X.

       01  TYPE-FOUND               PIC X.

       01  CONTROL-VALUES.
           04  C-1    PIC S9(8) COMP VALUE 0.
           04  C-2    PIC S9(8) COMP VALUE 0.
           04  C-3    PIC S9(8) COMP VALUE 0.
           04  C-4    PIC S9(8) COMP VALUE 0.


       01  I                 PIC S9(8) COMP VALUE 0.
       01  J                 PIC S9(8) COMP VALUE 0.
       01  K                 PIC S9(8) COMP VALUE 0.
       01  L                 PIC S9(8) COMP VALUE 0.
       01  M                 PIC S9(8) COMP VALUE 0.
       01  N                 PIC S9(8) COMP VALUE 0.


       LINKAGE SECTION.
       01  S     PIC X(800).
       01  P1    PIC X(800).
       01  P2    PIC X(800).
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                             BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .
      *    DISPLAY  'BATCFORM ENTERED'
      *
      *    IF WE HAVE TO MODIFY THE FORMAT WE NAME THE MODIFIED FORMAT
      *    $$$$TEMP.  $$$$TEMP IS SAVED
      *    SAVED BY THIS ROUTINE ON THE ADMCFORM LIBRARY
      *    R/O FORM DATA IS IN RO1CFORM.  THIS IS SET BY ESLIB CALL.
      *
      *    WE DO THIS SO THAT WE CAN MODIFY $$$$TEMP.  TYPICALLY WE SET
      *    THE X AND Y AXES RANGES.  OTHER MODIFICATIONS CAN BE MADE
      *    IN FUTURE ENHANCEMENTS OF THIS MODULE
           MOVE 'N' TO CENTRE-LABELS

           MOVE ' ' TO DS
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20
               D21 D22 D23 D24 D25 D26 D27 D28 D29 D30
               D31 D32 D33 D34 D35 D36 D37 D38 D39 D40

           MOVE D1 TO PCS-FNAME

           IF D2 = ' ' AND BATCRPCS-NOTES = ' '
               DISPLAY 'BATCHART: FORMAT SET TO UNMODIFIED ' PCS-FNAME
               PERFORM FORMAT-LABELS
               GOBACK
           END-IF

      *    DISPLAY D2
      *    DISPLAY D3
      *    DISPLAY D4
      *    DISPLAY D5

           DISPLAY 'BATCHART: FORMAT WILL BE MODIFIED ' PCS-FNAME

      *    DISPLAY BATCRPCS-NOTES(1:100)


           CALL 'BATCFSIN'
           CALL 'BATCDUM' USING BATCRPCS-SWITCHES
           MOVE 1 TO CS-TYPE
           CALL 'CSCCRT' USING CHART-ID CS-TYPE
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN CSCCRT$'
           END-IF

           MOVE 1 TO CS-TYPE
           CALL 'CSLOAD' USING CHART-ID CS-TYPE
                               PCS-FNAME
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN CSLOAD OF FORMAT FOR MODIFY$'
           END-IF
           DISPLAY '          FORMAT LOADED FOR MODIFICATION'
           MOVE '$$$$TEMP' TO PCS-FNAME


           IF USE-XNOTES = 'Y'
               PERFORM SET-NOXLABELS
           END-IF

           IF USE-YNOTES = 'Y'
               PERFORM SET-NOYLABELS
           END-IF



           SET D-X TO 2
           PERFORM UNTIL D-X > 39
           OR D(D-X) = ' '
      *        DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               MOVE 0 TO INT-1 INT-2 INT-3 INT-4
               MOVE 0 TO C-1  C-2  C-3  C-4
               MOVE 0 TO FP-1 FP-2 FP-3 FP-4
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XINTERVAL'
                   PERFORM SET-XINTERVAL
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YINTERVAL'
                   PERFORM SET-YINTERVAL
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XRANGE'
                   PERFORM SET-XRANGE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YRANGE'
                   PERFORM SET-YRANGE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XTITLE'
                   PERFORM SET-XTITLE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BOTTOMMARGIN'
                   PERFORM SET-BOTTOMMARGIN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'LEFTMARGIN'
                   PERFORM SET-LEFTMARGIN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'RIGHTMARGIN'
                   PERFORM SET-RIGHTMARGIN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'CHARSACROSS'
                   PERFORM SET-CHARSACROSS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'CHARSDOWN'
                   PERFORM SET-CHARSDOWN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TOPMARGIN'
                   PERFORM SET-TOPMARGIN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YTITLE'
                   PERFORM SET-YTITLE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOXLABELS'
                   PERFORM SET-NOXLABELS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOYLABELS'
                   PERFORM SET-NOYLABELS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XLABELS'
                   PERFORM SET-XLABELS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YLABELS'
                   PERFORM SET-YLABELS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'LINES'
                   PERFORM SET-LINES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOLINES'
                   PERFORM SET-NOLINES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOMARKERS'
                   PERFORM SET-NOMARKERS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'MARKERS'
                   PERFORM SET-MARKERS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XLABELROTATE'
                   PERFORM SET-XLABELROTATE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YLABELROTATE'
                   PERFORM SET-YLABELROTATE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YEARS'
                   PERFORM SET-YEARS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XMULTIPLIER'
                   PERFORM SET-XMULTIPLIER
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YMULTIPLIER'
                   PERFORM SET-YMULTIPLIER
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BASE'
                   PERFORM SET-BASE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SIDEWALL'
                   PERFORM SET-SIDEWALL
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BACKWALL'
                   PERFORM SET-BACKWALL
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'CORNER'
                   PERFORM SET-CORNER
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YGRIDLINES'
                   PERFORM SET-YGRIDLINES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'LEGEND'
                   PERFORM SET-LEGEND
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOLEGEND'
                   PERFORM SET-NOLEGEND
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XGRIDLINES'
                   PERFORM SET-XGRIDLINES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOYGRIDLINES'
                   PERFORM SET-NOYGRIDLINES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOXGRIDLINES'
                   PERFORM SET-NOXGRIDLINES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOTRELATIVE'
                   PERFORM SET-PLOTRELATIVE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOTABSOLUTE'
                   PERFORM SET-PLOTABSOLUTE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YLOGARITHMIC'
                   PERFORM SET-YLOGARITHMIC
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YLINEAR'
                   PERFORM SET-YLINEAR
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XLOGARITHMIC'
                   PERFORM SET-XLOGARITHMIC
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XLINEAR'
                   PERFORM SET-XLINEAR
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ASPECT'
                   PERFORM SET-ASPECT
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ZANGLE'
                   PERFORM SET-ZANGLE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ZSIZE'
                   PERFORM SET-ZSIZE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SMOOTH'
                   PERFORM SET-SMOOTH
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YREFERENCELINE'
                   PERFORM SET-YREFERENCELINE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XREFERENCELINE'
                   PERFORM SET-XREFERENCELINE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YDATUMLINE'
                   PERFORM SET-YDATUMLINE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XDATUMLINE'
                   PERFORM SET-XDATUMLINE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOSHADING'
                   PERFORM SET-NOSHADING
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SHADING'
                   PERFORM SET-SHADING
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BLACKLINE'
                                                  OR 'SHADEPATTERNED'
                                                  OR 'HILITE'
                                                  OR 'COLOR'
                                                  OR 'LINETYPE'
                                                  OR 'SHADINGPATTERN'
                                                  OR 'MARKER'
                                                  OR 'SHADECLEAR'
                                                  OR 'EXPLODE'
                                                  OR 'DONTSHOW'
                                                  OR 'SHADEOPAQUE'
                                                  OR 'SHADEHATCHED'
                   PERFORM MODIFY-DATA-ATTRGROUPS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOTASLINE'
                                                  OR 'PLOTASBAR'
                                                  OR 'PLOTASSURFACE'
                                                  OR 'PLOTASHISTOGRAM'
                   PERFORM SET-MIXED
                   PERFORM MODIFY-DATA-ATTRGROUPS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'MOUNTAIN'
                   PERFORM SET-MOUNTAIN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOMOUNTAIN'
                   PERFORM SET-NOMOUNTAIN
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NORMALAXES'
                   PERFORM SET-NORMALAXES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SWAPAXES'
                   PERFORM SET-SWAPAXES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'RANKBARS'
                   PERFORM SET-RANKBARS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'STACKBARS'
                   PERFORM SET-STACKBARS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'OVERLAPBARS'
                   PERFORM SET-OVERLAPBARS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'OVERLAYBARS'
                   PERFORM SET-OVERLAYBARS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SEPARATE'
                   PERFORM SET-SEPARATE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SEPARATESETS'
                   PERFORM SET-SEPARATESETS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ADJACENT'
                   PERFORM SET-ADJACENT
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ADJACENTSETS'
                   PERFORM SET-ADJACENTSETS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOTAREA'
                   PERFORM SET-PLOTAREA
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOTHEIGHT'
                   PERFORM SET-PLOTHEIGHT
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'VALUES'
                   PERFORM SET-VALUES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOVALUES'
                   PERFORM SET-NOVALUES
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOTICKSHADOWS'
                   PERFORM SET-NOTICKSHADOWS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TICKSHADOWS'
                   PERFORM SET-TICKSHADOWS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOSCALETOWER'
                   PERFORM SET-NOSCALETOWER
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'SCALETOWER'
                   PERFORM SET-SCALETOWER
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'CHARSET'
                   PERFORM SET-CHARSET
               WHEN FUNCTION UPPER-CASE ( D(D-X) )
               = 'PLOT%OFGROUPTOTAL'
                   PERFORM SET-PLOT-OFGROUPTOTAL
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOT%OFGROUP'
                   PERFORM SET-PLOT-OFGROUP
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PLOT%OFXVALUE'
                   PERFORM SET-PLOT-OFXVALUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) )
               = 'PLOT%OFXVALUETOTAL'
                   PERFORM SET-PLOT-OFXVALUETOTAL
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOINDEX'
                   PERFORM SET-NOINDEX
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'CENTRELABELS'
                   MOVE 'Y' TO CENTRE-LABELS
                   DISPLAY '          LABELS WILL BE CENTERED'
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) )
               = 'BACKGROUNDCOLOR'
                   PERFORM SET-BACKGROUNDCOLOR
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "FORMAT"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-EVALUATE

           END-PERFORM

           IF BATCRPCS-NOTES NOT = ' '
               PERFORM SET-NOTES
           END-IF


           MOVE 1 TO CS-TYPE
           MOVE 2 TO CS-OPTION
           CALL 'CSSAVE' USING CHART-ID CS-TYPE
                               PCS-FNAME CS-OPTION
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
           'C BATCHART ERROR IN CSSAVE OF MODIFIED FORMAT AS $$$$TEMP$'
           END-IF
           DISPLAY '          MODIFIED FORMAT SAVED AS "$$$$TEMP"'

           PERFORM FORMAT-LABELS

           CALL 'FSTERM'
           MOVE ' ' TO BATCRPCS-NOTES
           GOBACK


           .
       FORMAT-LABELS.
      *
      * NOW REFORMAT THE LABEL ARRAY INTO A SINGLE STRING OF
      * THE RIGHT LENGTH.  THIS MAY HAVE EACH LABEL CENTRED
      *
      *
      *    DISPLAY 'PCS-LABEL-L = ' PCS-LABEL-L

           IF PCS-LABEL-L > 0

               MOVE ' ' TO BATCRPCS-GROUP-LABELS
               MOVE 1 TO I
               PERFORM VARYING J FROM 1 BY 1 UNTIL J > PCS-NE

      *
      *            CENTRE LABEL

                   IF CENTRE-LABELS = 'Y'
                       COMPUTE L = PCS-LABEL-L
                       PERFORM UNTIL L < 1 OR
                       BATCRPCS-TABLED-LABEL(J) (L:1) NOT = ' '
                           SUBTRACT 1 FROM L
      *                    DISPLAY 'L=' L
                       END-PERFORM
                       COMPUTE L = (PCS-LABEL-L - L) / 2
                       COMPUTE L = L + I
      *                DISPLAY ' NOW L=' L
                       MOVE BATCRPCS-TABLED-LABEL(J)
                       TO BATCRPCS-GROUP-LABELS(L:PCS-LABEL-L)
                   ELSE
                       MOVE BATCRPCS-TABLED-LABEL(J)
                       TO BATCRPCS-GROUP-LABELS(I:PCS-LABEL-L)
      *                DISPLAY ' NOW I=' I
                   END-IF

                   ADD PCS-LABEL-L TO I
               END-PERFORM
               INSPECT BATCRPCS-GROUP-LABELS CONVERTING '_' TO ' '

           END-IF


           .
       SET-NOTES.
           MOVE 1 TO NOTE-NUMBER
           PERFORM UNTIL BATCRPCS-NOTE(NOTE-NUMBER) = ' '
               DISPLAY '          ADDING NOTE ' NOTE-NUMBER
               ' - ' BATCRPCS-NOTE-DATA(NOTE-NUMBER)
               (1:BATCRPCS-NOTE-LENGTH(NOTE-NUMBER))
               MOVE 1 TO CS-TYPE
               CALL 'CSNUM' USING
               CHART-ID
               CS-TYPE
               NOTE-NUMBER
               IF RETURN-CODE > 0 THEN
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART ERROR IN CSNUM$'
               END-IF

               MOVE 0 TO C-1
               MOVE 1  TO COUNT-VALUES

               MOVE 42 TO CS-TYPE

      *        VERTICAL UNITS
               MOVE BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER) TO INT-1
               IF INT-1 NOT = 0
      *            DISPLAY 'VERT UNITS' INT-1
                   MOVE 2 TO START-VALUE
                   PERFORM CALL-CSINT
               END-IF

      *        HORIZONTAL UNITS
               MOVE BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER) TO INT-1
               IF INT-1 NOT = 0
      *            DISPLAY 'HOR  UNITS' INT-1
                   MOVE 1 TO START-VALUE
                   PERFORM CALL-CSINT
               END-IF

      *        POSITION REFERS TO CENTRE OF RECTANGLE
               MOVE 5 TO INT-1
               MOVE 3 TO START-VALUE
               PERFORM CALL-CSINT

      *        NOT INTERACTIVE
               MOVE 2 TO INT-1
               MOVE 4 TO START-VALUE
               PERFORM CALL-CSINT

      *        SELECT
               MOVE 1 TO INT-1
               MOVE 5 TO START-VALUE
               PERFORM CALL-CSINT


               MOVE 48 TO CS-TYPE

      *        BOX?
               MOVE BATCRPCS-NOTE-BOX(NOTE-NUMBER) TO INT-1
               MOVE 4 TO START-VALUE
               PERFORM CALL-CSINT

      *        PRE-SHADECLEAR
               MOVE BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER) TO INT-1
               MOVE 3 TO START-VALUE
               PERFORM CALL-CSINT


      *        ROTATION ANGLE
               MOVE 26 TO CS-TYPE
               MOVE BATCRPCS-NOTE-ROTATE(NOTE-NUMBER) TO FP-1
               MOVE 3 TO START-VALUE
               PERFORM CALL-CSFLT


               MOVE BATCRPCS-NOTE-ACROSS(NOTE-NUMBER) TO FP-1
               IF FP-1 < 0
      *            THIS IS AN YNOTE.        SET IT AS THIS NUMBER OF
      *            COLUMNS LEFT OF Y-AXIS
      *            AND SPECIFY RIGHT HAND MID MARGIN AS POINT

      *            GET NUMBER OF ROWS IN LEFT MARGIN

      *        POSITION REFERS TO RH MARGIN
                   MOVE 42 TO CS-TYPE
                   MOVE 6 TO INT-1
                   MOVE 3 TO START-VALUE
                   PERFORM CALL-CSINT

                   MOVE 41 TO CS-TYPE
                   MOVE 5  TO START-VALUE
                   CALL 'CSQINT' USING
                         CHART-ID
                         CS-TYPE
                         START-VALUE
                         COUNT-VALUES
                         CONTROL-VALUES
                         INT-VALUES
                   IF RETURN-CODE > 0 THEN
                       CALL 'BATCONM' USING BY CONTENT
                       'C BATCHART ERROR IN CSQINT$'
                   END-IF
      *            DISPLAY 'LEFT MARGIN LINES = ' INT-1
                   COMPUTE FP-1 = INT-1 + FP-1 + 1
               END-IF

               MOVE 20 TO CS-TYPE
               MOVE 1 TO START-VALUE
      *        DISPLAY 'HOR       ' FP-1
               PERFORM CALL-CSFLT

               MOVE BATCRPCS-NOTE-UP(NOTE-NUMBER) TO FP-1
      *        DISPLAY 'VER       ' FP-1
               IF FP-1 < 0
      *            THIS IS AN XNOTE.        SET IT AS THIS NUMBER OF
      *            COLUMNS BELOW THE X-AXIS.


      *        POSITION REFERS TO TM MARGIN
                   MOVE 42 TO CS-TYPE
                   MOVE 2 TO INT-1
                   MOVE 3 TO START-VALUE
                   PERFORM CALL-CSINT
      *            GET NUMBER OF ROWS IN BOTTOM MARGIN

                   MOVE 41 TO CS-TYPE
                   MOVE 4  TO START-VALUE
                   CALL 'CSQINT' USING
                         CHART-ID
                         CS-TYPE
                         START-VALUE
                         COUNT-VALUES
                         CONTROL-VALUES
                         INT-VALUES
                   IF RETURN-CODE > 0 THEN
                       CALL 'BATCONM' USING BY CONTENT
                       'C BATCHART ERROR IN CSQINT$'
                   END-IF
      *            DISPLAY 'BOTTOM MARGIN LINES = ' INT-1
                   COMPUTE FP-1 = INT-1 + FP-1
               END-IF

               MOVE 20 TO CS-TYPE
               MOVE 2 TO START-VALUE
      *        DISPLAY 'VER       ' FP-1
               PERFORM CALL-CSFLT

               MOVE 1 TO START-VALUE
               MOVE 1 TO COUNT-VALUES
               MOVE 20 TO CS-TYPE
               MOVE BATCRPCS-NOTE-LENGTH(NOTE-NUMBER) TO CH-LEN
               MOVE BATCRPCS-NOTE-DATA  (NOTE-NUMBER) TO CH-VALUE
               INSPECT CH-VALUE CONVERTING '_' TO ' '

      *        DISPLAY 'LEN       ' CH-LEN
      *        DISPLAY 'VAL       ' CH-VALUE
               PERFORM CALL-CSCHA

               ADD 1 TO NOTE-NUMBER
           END-PERFORM


           .
       SET-XTITLE.
           SET D-X UP BY 1
           MOVE D(D-X) TO CH-VALUE
           COMPUTE CH-LEN = LENGTH OF CH-VALUE - 1
           PERFORM UNTIL CH-VALUE(CH-LEN:1) NOT = ' ' OR CH-LEN < 3
               SUBTRACT 1 FROM CH-LEN
           END-PERFORM
           INSPECT CH-VALUE CONVERTING '_' TO ' '
           DISPLAY '          X-AXIS TITLE SET TO ------- '
           CH-VALUE(1:30)

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 15 TO CS-TYPE

           PERFORM CALL-CSCHA
           SET D-X UP BY 1


           .
       SET-YTITLE.
           SET D-X UP BY 1
           MOVE D(D-X) TO CH-VALUE
           COMPUTE CH-LEN = LENGTH OF CH-VALUE - 1
           PERFORM UNTIL CH-VALUE(CH-LEN:1) NOT = ' ' OR CH-LEN < 3
               SUBTRACT 1 FROM CH-LEN
           END-PERFORM
           INSPECT CH-VALUE CONVERTING '_' TO ' '
           DISPLAY '          Y-AXIS TITLE SET TO ------- '
           CH-VALUE(1:30)

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 16 TO CS-TYPE

           PERFORM CALL-CSCHA
           SET D-X UP BY 1

           .
       SET-CHARSET.
           SET D-X UP BY 1
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           COMPUTE CH-LEN = LENGTH OF CH-VALUE - 1
           PERFORM UNTIL CH-VALUE(CH-LEN:1) NOT = ' ' OR CH-LEN < 3
               SUBTRACT 1 FROM CH-LEN
           END-PERFORM
           DISPLAY '          CHARSET SET TO ------------ '
           CH-VALUE(1:30)
           MOVE CH-LEN TO W-INT

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 9  TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 11 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 12 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 13 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 14 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 17 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 18 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 20 TO CS-TYPE
           PERFORM CALL-CSCHA
           MOVE FUNCTION UPPER-CASE(D(D-X)) TO CH-VALUE
           MOVE W-INT TO CH-LEN
           MOVE 23 TO CS-TYPE
           PERFORM CALL-CSCHA

           SET D-X UP BY 1

           .
       CALL-CSCHA.
           CALL 'CSCHA' USING
                 CHART-ID
                 CS-TYPE
                 START-VALUE
                 COUNT-VALUES
                 CH-LEN
                 CH-VALUE
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN CSCHA$'
           END-IF

           MOVE 0 TO C-1  C-2  C-3  C-4
           MOVE 0 TO CH-LEN
           MOVE ' ' TO CH-VALUE



           .
       SET-TOPMARGIN.
           SET D-X UP BY 1

      *    SET NO OF ROWS MARGIN AT TOP

           MOVE 1 TO COUNT-VALUES
           MOVE 3 TO START-VALUE
           DISPLAY '          TOP MARGIN ------------ '
           PERFORM SET-MARGIN




           .
       SET-CHARSACROSS.
           SET D-X UP BY 1

      *    SET TOTAL NO OF COLS IN GRAPH - FOR CHARACTER SIZE

           MOVE 41 TO CS-TYPE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO START-VALUE
           DISPLAY '          CHAR SIZE - COLS ACROSS '
           IF D(D-X) = '*'
               PERFORM Z999-DUMMY
           ELSE
           CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  CHARSACROSS" '
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '                    SET TO ------ ' FP-1

               MOVE FP-1 TO INT-1
               PERFORM CALL-CSINT
           END-IF

           SET D-X UP BY 1



           .
       SET-CHARSDOWN.
           SET D-X UP BY 1

      *    SET TOTAL NO OF ROWS IN GRAPH - FOR CHARACTER SIZE

           MOVE 41 TO CS-TYPE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           DISPLAY '          CHAR SIZE - ROWS DOWN '
           IF D(D-X) = '*'
               PERFORM Z999-DUMMY
           ELSE
           CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  CHARSDOWN" '
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '                    SET TO ------ ' FP-1

               MOVE FP-1 TO INT-1
               PERFORM CALL-CSINT
           END-IF

           SET D-X UP BY 1




           .
       SET-BOTTOMMARGIN.
           SET D-X UP BY 1

      *    SET NO OF ROWS MARGIN AT BOTTOM

           MOVE 1 TO COUNT-VALUES
           MOVE 4 TO START-VALUE
           DISPLAY '          BOTTOM MARGIN --------- '
           PERFORM SET-MARGIN



           .
       SET-LEFTMARGIN.
           SET D-X UP BY 1

      *    SET NO OF COLS MARGIN AT LEFT

           MOVE 1 TO COUNT-VALUES
           MOVE 5 TO START-VALUE
           DISPLAY '          LEFT MARGIN ----------- '
           PERFORM SET-MARGIN



           .
       SET-RIGHTMARGIN.
           SET D-X UP BY 1

      *    SET NO OF COLS MARGIN AT RIGHT

           MOVE 1 TO COUNT-VALUES
           MOVE 6 TO START-VALUE
           DISPLAY '          RIGHT MARGIN ---------- '
           PERFORM SET-MARGIN



           .
       SET-MARGIN.

      *    MARGIN

           IF D(D-X) = '*'
               PERFORM Z999-DUMMY
           ELSE
           CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  XXXMARGIN"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '                    SET TO ------ ' FP-1

               MOVE FP-1 TO INT-1
               MOVE 41 TO CS-TYPE
               PERFORM CALL-CSINT
           END-IF

           SET D-X UP BY 1




           .
       SET-SWAPAXES.
           SET D-X UP BY 1


           MOVE 39 TO CS-TYPE
           MOVE 3 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          Y AXIS ACROSS, X UPDOWN '

      * BAR VALUES MUST BE HORIZONTAL

           MOVE 8 TO CS-TYPE
           MOVE 3 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 0 TO FP-1
           PERFORM CALL-CSFLT
           DISPLAY '          BAR VALUES WILL BE HORIZONTAL'


           .
       SET-NORMALAXES.
           SET D-X UP BY 1


           MOVE 39 TO CS-TYPE
           MOVE 3 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          X AXIS ACROSS, Y UPDOWN '

      * BAR VALUES MUST BE VERTICAL

           MOVE 8 TO CS-TYPE
           MOVE 3 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 90 TO FP-1
           PERFORM CALL-CSFLT
           DISPLAY '          BAR VALUES WILL BE VERTICAL'



           .
       CHECK-TYPE.

      *    DETERMINE TYPES OF GRAPH FOR WHICH SPECIFIED MODIFIER IS
      *    TO WORK

           MOVE 'Y' TO TYPE-FOUND
           EVALUATE TRUE
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'LINE'
               MOVE 'Y' TO TYPE-LINE
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'BAR'
               MOVE 'Y' TO TYPE-BAR
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'SURFACE'
               MOVE 'Y' TO TYPE-SURFACE
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'TOWER'
               MOVE 'Y' TO TYPE-TOWER
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'PIE'
               MOVE 'Y' TO TYPE-PIE
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'POLAR'
               MOVE 'Y' TO TYPE-POLAR
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'VENN'
               MOVE 'Y' TO TYPE-VENN
           WHEN FUNCTION UPPER-CASE( D(D-X))  = 'HISTOGRAM'
               MOVE 'Y' TO TYPE-HISTOGRAM
           WHEN OTHER
               MOVE 'N' TO TYPE-FOUND
           END-EVALUATE


           .
       INDEX-TYPES.

      *    DETERMINE TYPES OF GRAPH FOR WHICH SPECIFIED MODIFIER IS
      *    TO WORK


           MOVE 'Y' TO TYPE-LINE
           MOVE 'Y' TO TYPE-BAR
           MOVE 'Y' TO TYPE-SURFACE
           MOVE 'Y' TO TYPE-TOWER
           MOVE 'Y' TO TYPE-PIE
           MOVE 'Y' TO TYPE-POLAR
           MOVE 'Y' TO TYPE-VENN
           MOVE 'Y' TO TYPE-HISTOGRAM


           PERFORM CHECK-TYPE
           IF TYPE-FOUND = 'Y'
               MOVE ALL 'N' TO SPECIFIED-TYPES
               PERFORM CHECK-TYPE
               SET D-X UP BY 1
               PERFORM CHECK-TYPE
               PERFORM UNTIL TYPE-FOUND = 'N'
                   SET D-X UP BY 1
                   PERFORM CHECK-TYPE
               END-PERFORM

           END-IF


           .
       SET-NOSHADING.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET NO SHADING FOR VENN, BAR, PIE,POLAR, TOWER, HISTOGRAMS

           MOVE 1 TO COUNT-VALUES

           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO CS-TYPE
               MOVE 5 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-BAR = 'Y'
               MOVE 5 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-PIE = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 4 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-VENN = 'Y'
               MOVE 8 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-POLAR = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF

           DISPLAY '          NO SHADING ------------ '


           .
       CALL-CSQNUM.
           CALL 'CSQNUM' USING
           CHART-ID
           CS-TYPE
           CSQNUM-REPLY
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN CSQNUM$'
           END-IF




           .
       SET-NOMOUNTAIN.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET NOT MOUNTAIN FOR SURFACE, POLAR

           MOVE 1 TO COUNT-VALUES

           IF TYPE-POLAR = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 3 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-SURFACE = 'Y'
               MOVE 3 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          NOT MOUNTAINRANGE SHADING '



           .
       SET-MOUNTAIN.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET MOUNTAIN FOR SURFACE, POLAR

           MOVE 1 TO COUNT-VALUES

           IF TYPE-POLAR = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 3 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-SURFACE = 'Y'
               MOVE 3 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          MOUNTAINRANGE SHADING '




           .
       SET-PLOTHEIGHT.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET PIE CHARTS SIZE PROP TO TOTAL IN GROUP

           MOVE 1 TO COUNT-VALUES

           IF TYPE-PIE = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PIES WILL BE EQUAL SIZE, '
           END-IF

           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          HISTOGRAM HEIGHT IS Y VALUE'
           END-IF

           .
       SET-PLOTAREA.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET PIE CHARTS SIZE PROP TO TOTAL IN GROUP

           MOVE 1 TO COUNT-VALUES

           IF TYPE-PIE = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PIES WILL VARY IN SIZE, '
           END-IF

           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          HISTOGRAM AREA IS Y VALUE'
           END-IF


           .
       SET-SHADING.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET SHADING FOR VENN, BAR, PIE,POLAR, TOWER, HISTOGRAMS

           MOVE 1 TO COUNT-VALUES

           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO CS-TYPE
               MOVE 5 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-BAR       = 'Y'
               MOVE 5 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-PIE       = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 4 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-VENN      = 'Y'
               MOVE 8 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-POLAR     = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 2 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          SHADING SET ----------- '


           .
       SET-RANKBARS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET BARS TO BE RANKED

           MOVE 1 TO COUNT-VALUES

           MOVE 5 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          BARS WILL BE RANKED --- '

           .
       SET-VALUES.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES

           IF TYPE-BAR       = 'Y'
               MOVE 5 TO CS-TYPE
               MOVE 4 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY
               '          BARS WILL HAVE VALUES APPENDED'
               CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE = 0
                   MOVE FP-1 TO INT-1
                   MOVE 5 TO CS-TYPE
                   MOVE 6 TO START-VALUE
                   PERFORM CALL-CSINT
                   DISPLAY '          DECIMAL PLACES SET TO - ' INT-1
                   SET D-X UP BY 1
               END-IF
           END-IF
           IF TYPE-PIE       = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 5 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY
               '          PIES WILL HAVE VALUES APPENDED '
           END-IF

           .
       SET-NOVALUES.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES

           IF TYPE-BAR       = 'Y'
               MOVE 5 TO CS-TYPE
               MOVE 4 TO START-VALUE
               MOVE 0 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          BARS WILL NOT HAVE VALUES APPENDED'

               END-IF
           IF TYPE-PIE       = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 5 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PIES WILL NOT HAVE VALUES APPENDED'
           END-IF


           .
       SET-NOTICKSHADOWS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES
           MOVE 10 TO CS-TYPE
           MOVE 4 TO START-VALUE
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          TOWERS WILL NOT HAVE TICK MARK SHADOWS'

           .
       SET-NOSCALETOWER.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES
           MOVE 10 TO CS-TYPE
           MOVE 5 TO START-VALUE
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          A SCALE TOWER WILL NOT BE DRAWN       '


           .
       SET-TICKSHADOWS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES
           MOVE 10 TO CS-TYPE
           MOVE 4 TO START-VALUE
           MOVE 1 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          TOWERS WILL HAVE TICK MARK SHADOWS'

           .
       SET-SCALETOWER.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES
           MOVE 10 TO CS-TYPE
           MOVE 5 TO START-VALUE
           MOVE 1 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          A SCALE TOWER WILL BE DRAWN       '


           .
       SET-OVERLAYBARS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET BARS TO BE OVERLAYED

           MOVE 1 TO COUNT-VALUES

           MOVE 5 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 3 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          BARS WILL BE OVERLAYED -- '



           .
       SET-STACKBARS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET BARS TO BE STACKED

           MOVE 1 TO COUNT-VALUES

           MOVE 5 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          BARS WILL BE STACKED -- '



           .
       SET-PLOTRELATIVE.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET PLOTRELATIVE VALUES

           MOVE 1 TO COUNT-VALUES

           IF TYPE-LINE = 'Y'
               MOVE 2 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-SURFACE = 'Y'
               MOVE 3 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-PIE       = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-POLAR     = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          Y VALUES RELATIVE TO PREVIOUS GROUP '



           .
       SET-PLOTABSOLUTE.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET PLOTABSOLUTE VALUES

           MOVE 1 TO COUNT-VALUES

           IF TYPE-LINE = 'Y'
               MOVE 2 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-SURFACE = 'Y'
               MOVE 3 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-PIE       = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-POLAR     = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 1 TO START-VALUE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          Y VALUES AS GIVEN'



           .
       SET-XLINEAR.
           SET D-X UP BY 1
           MOVE 25 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          X AXIS LINEAR'



           .
       SET-XLOGARITHMIC.
           SET D-X UP BY 1
           MOVE 25 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          X AXIS LOGARITHMIC'

           .
       SET-YLINEAR.
           SET D-X UP BY 1
           MOVE 26 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          Y AXIS LINEAR'



           .
       SET-YLOGARITHMIC.
           SET D-X UP BY 1
           MOVE 26 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT
           DISPLAY '          Y AXIS LOGARITHMIC'



           .
       SET-SMOOTH.
           SET D-X UP BY 1


      *    SMOOTH AMOUNT
           CALL 'BATCNUM' USING D(D-X) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  SMOOTH"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          SMOOTHING WILL BE SET TO ------ ' W-FP
           SET D-X UP BY 1

      *    SET CURVED LINE - FOR LINE, SURFACE AND POLAR GRAPHS

           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES

           IF TYPE-LINE = 'Y'
               MOVE 2 TO CS-TYPE
               MOVE 2 TO INT-1
               MOVE 4 TO START-VALUE
               PERFORM CALL-CSINT
               MOVE 5 TO START-VALUE
               MOVE W-FP TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-SURFACE = 'Y'
               MOVE 3 TO CS-TYPE
               MOVE 4 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
               MOVE 5 TO START-VALUE
               MOVE W-FP TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-POLAR   = 'Y'
               MOVE 9 TO CS-TYPE
               MOVE 6 TO START-VALUE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
               MOVE 7 TO START-VALUE
               MOVE W-FP TO INT-1
               PERFORM CALL-CSINT
               END-IF
           DISPLAY '          SMOOTHED CURVES  ------ '





           .
       SET-ZANGLE.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET ANGLE OF TILT FOR TOWER GRAPH OR PIE CHART

           CALL 'BATCNUM' USING D(D-X) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  ZANGLE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          ZANGLE SET TO ------ ' W-FP
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES

           IF TYPE-PIE = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 7 TO START-VALUE
               MOVE W-FP TO INT-1
               PERFORM CALL-CSINT
           END-IF
           IF TYPE-TOWER = 'Y'
               MOVE 3 TO CS-TYPE
               MOVE 3 TO START-VALUE
               MOVE W-FP TO FP-1
               PERFORM CALL-CSFLT
           END-IF

           SET D-X UP BY 1



           .
       SET-ZSIZE.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

      *    SET THICKNESS OF PIES, LENGTH OF TOWER CHART Z AXIS

           CALL 'BATCNUM' USING D(D-X) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  ZSIZE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           IF TYPE-PIE = 'Y'
               MOVE 7 TO CS-TYPE
               MOVE 8 TO START-VALUE
               COMPUTE INT-1 = W-FP
               IF INT-1 > 250 MOVE 250 TO INT-1 END-IF
               DISPLAY '          PIE THICKNESS %---- ' INT-1
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-TOWER = 'Y'
               MOVE 1 TO COUNT-VALUES
               MOVE 3 TO CS-TYPE
               MOVE 4 TO START-VALUE
               COMPUTE FP-1 = W-FP
               IF FP-1 < 10 MOVE 10 TO FP-1 END-IF
               DISPLAY '          Z AXIS SIZE % OF X AXIS-- ' FP-1
               PERFORM CALL-CSFLT
           END-IF


           .
       SET-MIXED.

      *    SET THIS AS A MIXED FORMAT GRAPH

           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO START-VALUE
           MOVE 1 TO CS-TYPE
           MOVE 2 TO INT-1
           PERFORM CALL-CSINT


           DISPLAY '          MIXED GRAPH ----------- '



           .
       DETERMINE-DATA-ATTRGROUP.

      *    DETERMINE WHICH DATA GROUP OR LABEL SPEC

           MOVE 1 TO DATA-ATTRGROUP
           PERFORM UNTIL
           FUNCTION UPPER-CASE (
           BATCRPCS-TABLED-GROUP-NAME(DATA-ATTRGROUP))
           = FUNCTION UPPER-CASE(D(D-X))
           OR FUNCTION UPPER-CASE (
           BATCRPCS-TABLED-LABEL(DATA-ATTRGROUP))
           = FUNCTION UPPER-CASE(D(D-X))
           OR DATA-ATTRGROUP > 99
               ADD 1 TO DATA-ATTRGROUP
           END-PERFORM

           IF DATA-ATTRGROUP <= 99 AND (D(D-X) NOT = ' ')
               DISPLAY '            DATA ATTRGROUP GROUP '
               D(D-X)
           ELSE
               CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   MOVE 0 TO DATA-ATTRGROUP
                   DISPLAY '            NO DATA ATTRGROUP GROUP '
               ELSE
                   MOVE FP-1 TO DATA-ATTRGROUP
                   DISPLAY '            DATA ATTRGROUP GROUP '
                   DATA-ATTRGROUP
               END-IF
           END-IF


           .
       MODIFY-DATA-ATTRGROUPS.

           MOVE FUNCTION UPPER-CASE (D(D-X)) TO W-D
           SET D-X UP BY 1

           IF W-D = 'COLOR'
               MOVE FUNCTION UPPER-CASE (D(D-X)) TO W-D2
               SET D-X UP BY 1
           END-IF

           IF W-D = 'LINETYPE'
               MOVE FUNCTION UPPER-CASE (D(D-X)) TO W-D2
               SET D-X UP BY 1
           END-IF

           IF W-D = 'SHADINGPATTERN'
               MOVE FUNCTION UPPER-CASE (D(D-X)) TO W-D2
               SET D-X UP BY 1
           END-IF

           IF W-D = 'MARKER'
               MOVE FUNCTION UPPER-CASE (D(D-X)) TO W-D2
               SET D-X UP BY 1
           END-IF

           PERFORM DETERMINE-DATA-ATTRGROUP

           IF DATA-ATTRGROUP = 0
               DISPLAY '            ALL WILL BE MODIFIED    '
               MOVE 7 TO CS-TYPE
               PERFORM CALL-CSQNUM
               PERFORM MODIFY-ATTRGROUP
               VARYING DATA-ATTRGROUP FROM 1 BY 1
               UNTIL DATA-ATTRGROUP > CSQNUM-REPLY
           ELSE
               PERFORM MODIFY-ATTRGROUP
               SET D-X UP BY 1
               PERFORM DETERMINE-DATA-ATTRGROUP
               PERFORM UNTIL DATA-ATTRGROUP = 0
                   PERFORM MODIFY-ATTRGROUP
                   SET D-X UP BY 1
                   PERFORM DETERMINE-DATA-ATTRGROUP
               END-PERFORM
           END-IF



           .
       MODIFY-ATTRGROUP.

           DISPLAY '          MODIFYING GROUP '
           DATA-ATTRGROUP
           MOVE DATA-ATTRGROUP TO START-VALUE
           EVALUATE TRUE
           WHEN W-D = 'PLOTASBAR'
               MOVE 1 TO COUNT-VALUES
               MOVE 16 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PLOT TYPE SET TO BAR'
           WHEN W-D = 'PLOTASLINE'
               MOVE 1 TO COUNT-VALUES
               MOVE 16 TO CS-TYPE
               MOVE 4 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PLOT TYPE SET TO LINE'
           WHEN W-D = 'PLOTASSURFACE'
               MOVE 1 TO COUNT-VALUES
               MOVE 16 TO CS-TYPE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PLOT TYPE SET TO SURFACE'
           WHEN W-D = 'PLOTASHISTOGRAM'
               MOVE 1 TO COUNT-VALUES
               MOVE 16 TO CS-TYPE
               MOVE 3 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          PLOT TYPE SET TO HISTOGRAM'

           WHEN W-D = 'SHADEOPAQUE'
               MOVE 1 TO COUNT-VALUES
               MOVE 13 TO CS-TYPE
               MOVE 0 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          SHADING SET OPAQUE '

      *   *    MAKE SHADING PATTERN SHADECLEAR = 15
      *   *    THIS "EMPTIES" SURFACE CHARTS

           WHEN W-D = 'SHADECLEAR'
               MOVE 1 TO COUNT-VALUES
               MOVE 13 TO CS-TYPE
               MOVE 15 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          SHADING SET CLEAR  '

           WHEN W-D = 'SHADEPATTERNED'
      *   *    MAKE SHADING SHADEPATTERNEDS
      *   *    THIS ALLOWS OVERLAY
               MOVE 1 TO COUNT-VALUES
               MOVE 13 TO CS-TYPE
               DIVIDE DATA-ATTRGROUP BY 8 GIVING W-DUMMY REMAINDER INT-1
               ADD 1 TO INT-1
               MOVE PATTERN-PATTERN (INT-1) TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          SHADING SET PATTERNED '
           WHEN W-D = 'BLACKLINE'
               MOVE 1 TO COUNT-VALUES
               MOVE 12 TO CS-TYPE
               MOVE 7 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          LINES SET BLACK       '
           WHEN W-D = 'SHADEHATCHED'
      *   *    MAKE SHADING PATTERNS 1
               MOVE 1 TO COUNT-VALUES
               MOVE 13 TO CS-TYPE
               MOVE 11 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          SHADING SET HATCHED '
           WHEN W-D = 'EXPLODE'
               MOVE 1 TO COUNT-VALUES

      *        EXPLODE PIE CHART
               MOVE 17 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          EXPLODING SLICE     '
           WHEN W-D = 'COLOR'
               MOVE 1 TO COUNT-VALUES
               PERFORM GET-COLOR-VAL-W-D2
      *        MAKE SHADING COLOR
               MOVE 11 TO CS-TYPE
               MOVE W-D2-NUM TO INT-1
               PERFORM CALL-CSINT
      *        MAKE LINES COLOR
               MOVE 12 TO CS-TYPE
               MOVE W-D2-NUM TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          COLORING TO         ' W-D2
           WHEN W-D = 'MARKER'
               MOVE 1 TO COUNT-VALUES
               PERFORM GET-MARKER-VAL-W-D2
      *        MAKE MARKER
               MOVE 15 TO CS-TYPE
               MOVE W-D2-NUM TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          MARKER TYPE TO        ' W-D2
           WHEN W-D = 'SHADINGPATTERN'
               MOVE 1 TO COUNT-VALUES
               PERFORM GET-SHADINGPATTERN-VAL-W-D2
      *        MAKE pattern
               MOVE 13 TO CS-TYPE
               MOVE W-D2-NUM TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          SHADING PATTERN TO        ' W-D2
           WHEN W-D = 'LINETYPE'
               MOVE 1 TO COUNT-VALUES
               PERFORM GET-LINETYPE-VAL-W-D2
      *        MAKE LINE TYPE
               MOVE 14 TO CS-TYPE
               MOVE W-D2-NUM TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          LINE TYPE TO        ' W-D2
           WHEN W-D = 'HILITE'
               MOVE 1 TO COUNT-VALUES

      *        MAKE SHADING COLOR 7
               MOVE 11 TO CS-TYPE
               MOVE 7 TO INT-1
               PERFORM CALL-CSINT
      *        MAKE LINES COLOR 7
               MOVE 12 TO CS-TYPE
               MOVE 7 TO INT-1
               PERFORM CALL-CSINT
      *        MAKE SOLID PATTERN
               MOVE 13 TO CS-TYPE
               MOVE 0 TO INT-1
               PERFORM CALL-CSINT
      *        MAKE SOLID LINE
               MOVE 14 TO CS-TYPE
               MOVE 7 TO INT-1
               PERFORM CALL-CSINT
      *        EXPLODE PIE CHART
               MOVE 17 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
      *        DOUBLE LINE WIDTHS
               MOVE 4 TO CS-TYPE
               MOVE 2 TO FP-1
               PERFORM CALL-CSFLT
      *        TRIPLE NOTE SCALE
               MOVE 5 TO CS-TYPE
               MOVE 3 TO FP-1
               PERFORM CALL-CSFLT
               DISPLAY '          HILITING '

           WHEN W-D = 'DONTSHOW'
               MOVE 1 TO COUNT-VALUES

      *        MAKE CLEAR PATTERN
               MOVE 13 TO CS-TYPE
               MOVE 15 TO INT-1
               PERFORM CALL-CSINT
      *        MAKE OMITTED LINE
               MOVE 14 TO CS-TYPE
               MOVE 8 TO INT-1
               PERFORM CALL-CSINT
      *        MAKE NO MARKER
               MOVE 15 TO CS-TYPE
               MOVE 9 TO INT-1
               PERFORM CALL-CSINT
      *
               IF DATA-ATTRGROUP = 1
                   MOVE 3 TO CS-TYPE
                   MOVE 3 TO START-VALUE
                   MOVE 2 TO INT-1
                   PERFORM CALL-CSINT
                   MOVE 4 TO CS-TYPE
                   MOVE 6 TO START-VALUE
                   MOVE 2 TO INT-1
                   PERFORM CALL-CSINT
                   MOVE 5 TO CS-TYPE
                   MOVE 3 TO START-VALUE
                   MOVE 2 TO INT-1
                   PERFORM CALL-CSINT
               END-IF
               DISPLAY '          GROUP NOT SHOWN'

           WHEN OTHER
               PERFORM Z999-DUMMY
           END-EVALUATE

           .
       GET-COLOR-VAL-W-D2.

           CALL 'BATCNUM' USING W-D2   FP-1
           EVALUATE TRUE
           WHEN RETURN-CODE = 0
               MOVE FP-1 TO W-D2-NUM
           WHEN W-D2 = 'DEFAULT     ' MOVE 0    TO W-D2-NUM
           WHEN W-D2 = 'BLUE        ' MOVE 1    TO W-D2-NUM
           WHEN W-D2 = 'RED         ' MOVE 2    TO W-D2-NUM
           WHEN W-D2 = 'PINK        ' MOVE 3    TO W-D2-NUM
           WHEN W-D2 = 'GREEN       ' MOVE 4    TO W-D2-NUM
           WHEN W-D2 = 'TURQUOISE   ' MOVE 5    TO W-D2-NUM
           WHEN W-D2 = 'YELLOW      ' MOVE 6    TO W-D2-NUM
           WHEN W-D2 = 'NEUTRAL     ' MOVE 7    TO W-D2-NUM
           WHEN W-D2 = 'BACKGROUND  ' MOVE 8    TO W-D2-NUM
           WHEN OTHER
               DISPLAY 'BATCHART: INVALID COLOR '
               W-D2 ' SUPPLIED TO "FORMAT COLOR"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-EVALUATE

           .
       GET-LINETYPE-VAL-W-D2.

           CALL 'BATCNUM' USING W-D2   FP-1
           EVALUATE TRUE
           WHEN RETURN-CODE = 0
               MOVE FP-1 TO W-D2-NUM
           WHEN W-D2 = 'DEFAULT           ' MOVE 0 TO W-D2-NUM
           WHEN W-D2 = 'DOTTED            ' MOVE 1 TO W-D2-NUM
           WHEN W-D2 = 'SHORT-DASHED      ' MOVE 2 TO W-D2-NUM
           WHEN W-D2 = 'DASH-DOT          ' MOVE 3 TO W-D2-NUM
           WHEN W-D2 = 'DOUBLE-DOTTED     ' MOVE 4 TO W-D2-NUM
           WHEN W-D2 = 'LONG-DASHED       ' MOVE 5 TO W-D2-NUM
           WHEN W-D2 = 'DASH-DOUBLE-DOTTED' MOVE 6 TO W-D2-NUM
           WHEN W-D2 = 'SOLID             ' MOVE 7 TO W-D2-NUM
           WHEN W-D2 = 'INVISIBLE         ' MOVE 8 TO W-D2-NUM
           WHEN OTHER
               DISPLAY 'BATCHART: INVALID LINETYPE '
               W-D2 ' SUPPLIED TO "FORMAT LINETYPE '
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-EVALUATE

           .
       GET-SHADINGPATTERN-VAL-W-D2.

           CALL 'BATCNUM' USING W-D2   FP-1
           EVALUATE TRUE
           WHEN RETURN-CODE = 0
               MOVE FP-1 TO W-D2-NUM
           WHEN W-D2 = 'SOLID             ' MOVE 16 TO W-D2-NUM
           WHEN OTHER
               DISPLAY 'BATCHART: INVALID SHADINGPATTERN '
               W-D2 ' SUPPLIED TO "FORMAT SHADINGPATTERN '
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-EVALUATE


           .
       GET-MARKER-VAL-W-D2.

           CALL 'BATCNUM' USING W-D2   FP-1
           EVALUATE TRUE
           WHEN RETURN-CODE = 0
               MOVE FP-1 TO W-D2-NUM
           WHEN W-D2 = 'INVISIBLE         ' MOVE 0 TO W-D2-NUM
           WHEN W-D2 = 'EX                ' MOVE 1 TO W-D2-NUM
           WHEN W-D2 = 'PLUS              ' MOVE 2 TO W-D2-NUM
           WHEN W-D2 = 'DIAMOND           ' MOVE 3 TO W-D2-NUM
           WHEN W-D2 = 'RECTANGLE         ' MOVE 4 TO W-D2-NUM
           WHEN W-D2 = 'STICKBUNDLE       ' MOVE 5 TO W-D2-NUM
           WHEN W-D2 = 'ASTERISK          ' MOVE 6 TO W-D2-NUM
           WHEN W-D2 = 'SOLIDDIAMOND      ' MOVE 7 TO W-D2-NUM
           WHEN W-D2 = 'SOLIDRECTANGLE    ' MOVE 8 TO W-D2-NUM
           WHEN OTHER
               DISPLAY 'BATCHART: INVALID MARKER '
               W-D2 ' SUPPLIED TO "FORMAT MARKER '
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-EVALUATE


           .
       SET-ASPECT.
           SET D-X UP BY 1

      *    SET GRAPH ASPECT

           MOVE 19 TO CS-TYPE
           MOVE 2 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO FP-2
           DISPLAY '          GRAPH ASPECT     ------ '



           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  ASPECT"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          ASPECT SET TO --------- ' FP-1

           PERFORM CALL-CSFLT

           SET D-X UP BY 1




           .
       SET-ADJACENT.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES
           DISPLAY '          BARS AND TOWERS ADJACENT    '

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO CS-TYPE
           MOVE 0 TO FP-1
           PERFORM CALL-CSFLT


           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 3 TO CS-TYPE
           MOVE 0 TO FP-1
           PERFORM CALL-CSFLT



           .
       SET-ADJACENTSETS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES
           DISPLAY '          SETS ADJACENT -------- '

           MOVE 2 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO CS-TYPE
           MOVE 0 TO FP-1
           PERFORM CALL-CSFLT

           MOVE 2 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 3 TO CS-TYPE
           MOVE 0 TO FP-1
           PERFORM CALL-CSFLT

           MOVE 7 TO CS-TYPE
           PERFORM CALL-CSQNUM


           PERFORM VARYING DATA-ATTRGROUP FROM 1 BY 1
           UNTIL DATA-ATTRGROUP > CSQNUM-REPLY
               MOVE DATA-ATTRGROUP TO START-VALUE
               MOVE 1 TO COUNT-VALUES
               MOVE 17 TO CS-TYPE
               MOVE 2 TO INT-1
               PERFORM CALL-CSINT
           END-PERFORM

           SET D-X UP BY 1









           .
       SET-SEPARATE.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES
           DISPLAY '          BARS AND TOWERS SEPARATE'

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO CS-TYPE
           MOVE 30 TO FP-1
           PERFORM CALL-CSFLT

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 3 TO CS-TYPE
           MOVE 30 TO FP-1
           PERFORM CALL-CSFLT



           .
       SET-SEPARATESETS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES
           DISPLAY '          SETS SEPARATE -------- '

           MOVE 2 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO CS-TYPE
           MOVE 30 TO FP-1
           PERFORM CALL-CSFLT
           MOVE 2 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 3 TO CS-TYPE
           MOVE 30 TO FP-1
           PERFORM CALL-CSFLT

           MOVE 7 TO CS-TYPE
           PERFORM CALL-CSQNUM


           PERFORM VARYING DATA-ATTRGROUP FROM 1 BY 1
           UNTIL DATA-ATTRGROUP > CSQNUM-REPLY
               MOVE DATA-ATTRGROUP TO START-VALUE
               MOVE 1 TO COUNT-VALUES
               MOVE 17 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-PERFORM





           .
       SET-OVERLAPBARS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES
           DISPLAY '          BARS WILL PARTLY OVERLAP - '

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO CS-TYPE
           MOVE -20 TO FP-1
           PERFORM CALL-CSFLT







           .
       SET-YMULTIPLIER.
           SET D-X UP BY 1
           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  YMULTIPLIER"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          Y AXIS RESCALED BY ------- ' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 12 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1



           .
       SET-YEARS.
           SET D-X UP BY 1

           DISPLAY '          X VALUES ARE IN DATES      ' FP-1
           COMPUTE FP-1 = 1 / 365.2425556
           DISPLAY '          X AXIS RESCALED BY ------- ' FP-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 11 TO CS-TYPE
           PERFORM CALL-CSFLT
           COMPUTE FP-1 = 365.2425556
           DISPLAY '          X SCALE INTERVAL SET TO' FP-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 15 TO CS-TYPE
           PERFORM CALL-CSFLT
           MOVE 11 TO FP-1
           DISPLAY '          X SCALE MINOR TICKMARKS SET TO' FP-1
           MOVE 2 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 15 TO CS-TYPE
           PERFORM CALL-CSFLT



           .
       SET-XMULTIPLIER.
           SET D-X UP BY 1

           IF FUNCTION UPPER-CASE(D(D-X)) = 'YEARS'
               COMPUTE FP-1 = 1 / 365.2425556
           ELSE
               CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  XMULTIPLIER"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
           END-IF
           DISPLAY '          X AXIS RESCALED BY ------- ' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 11 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1


           .
       SET-YLABELROTATE.
           SET D-X UP BY 1
           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  YLABELROTATE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          Y LABELS ROTATED BY ------ ' FP-1

           MOVE 3 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 14 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1



           .
       SET-XLABELROTATE.
           SET D-X UP BY 1

           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  XLABELROTATE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          X LABELS ROTATED BY ------ ' FP-1

           MOVE 3 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 13 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1


           .
       SET-NOXLABELS.
           SET D-X UP BY 1
           MOVE 0 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 27 TO CS-TYPE
           PERFORM CALL-CSINT
           MOVE 1 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 31 TO CS-TYPE
           PERFORM CALL-CSINT
           DISPLAY '          X LABELS OMITTED'


           .
       SET-XLABELS.
           SET D-X UP BY 1
           MOVE 5 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 27 TO CS-TYPE
           PERFORM CALL-CSINT
           MOVE 3 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 31 TO CS-TYPE
           PERFORM CALL-CSINT
           DISPLAY '          X LABELS INCLUDED'



           .
       SET-YLABELS.
           SET D-X UP BY 1

           MOVE 5 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 28 TO CS-TYPE
           PERFORM CALL-CSINT
           MOVE 3 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 32 TO CS-TYPE
           PERFORM CALL-CSINT
           DISPLAY '          Y LABELS INCLUDED'



           .
       SET-NOYLABELS.
           SET D-X UP BY 1

           MOVE 0 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 28 TO CS-TYPE
           PERFORM CALL-CSINT
           MOVE 1 TO INT-1
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 32 TO CS-TYPE
           PERFORM CALL-CSINT
           DISPLAY '          Y LABELS OMITTED'


           .
       SET-LINES.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES

           MOVE 1 TO COUNT-VALUES

           IF TYPE-LINE = 'Y'
               MOVE 3 TO START-VALUE
               MOVE 2 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO START-VALUE
               MOVE 4 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-POLAR = 'Y'
               MOVE 5 TO START-VALUE
               MOVE 9 TO CS-TYPE
               MOVE 1 TO INT-1
               PERFORM CALL-CSINT
               DISPLAY '          CONNECT AND RISER LINES'
           END-IF




           .
       SET-NOLINES.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES


           IF TYPE-LINE = 'Y'
               MOVE 3 TO START-VALUE
               MOVE 2 TO CS-TYPE
               MOVE 2 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-HISTOGRAM = 'Y'
               MOVE 4 TO START-VALUE
               MOVE 4 TO CS-TYPE
               MOVE 2 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-POLAR = 'Y'
               MOVE 5 TO START-VALUE
               MOVE 9 TO CS-TYPE
               MOVE 2 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          NO CONNECT OR RISER LINES'


           .
       SET-MARKERS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES


           IF TYPE-LINE = 'Y'
               MOVE 2 TO START-VALUE
               MOVE 2 TO CS-TYPE
               MOVE 1 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-POLAR = 'Y'
               MOVE 4 TO START-VALUE
               MOVE 9 TO CS-TYPE
               MOVE 1 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          NO POINT MARKERS '




           .
       SET-NOMARKERS.
           SET D-X UP BY 1
           PERFORM INDEX-TYPES


           IF TYPE-LINE = 'Y'
               MOVE 2 TO START-VALUE
               MOVE 2 TO CS-TYPE
               MOVE 2 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF

           IF TYPE-POLAR = 'Y'
               MOVE 4 TO START-VALUE
               MOVE 9 TO CS-TYPE
               MOVE 2 TO INT-1
               MOVE 1 TO COUNT-VALUES
               PERFORM CALL-CSINT
           END-IF
           DISPLAY '          NO POINT MARKERS '



           .
       SET-XDATUMLINE.
           MOVE 1 TO INT-1
           MOVE 36 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           PERFORM CALL-CSINT

           SET D-X UP BY 1

           CALL 'BATCXNUM' USING D(D-X) FP-1
           BATCRPCS-TABLED-LABELS
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  XDATUMLINE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          X DATUM LINE WRITTEN AT -- ' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 24 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1

           .
       SET-YDATUMLINE.
           MOVE 1 TO INT-1
           MOVE 37 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           PERFORM CALL-CSINT

           SET D-X UP BY 1

           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  YDATUMLINE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          Y DATUM LINE WRITTEN AT -- ' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 25 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1



           .
       SET-XREFERENCELINE.
           MOVE 1 TO INT-1
           MOVE 51 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           PERFORM CALL-CSINT

           SET D-X UP BY 1

           CALL 'BATCXNUM' USING D(D-X) FP-1
           BATCRPCS-TABLED-LABELS
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  XREFERENCELINE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          X REFERENCE LINE WRITTEN AT -- ' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 22 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1

           .
       SET-YREFERENCELINE.
           MOVE 1 TO INT-1
           MOVE 35 TO CS-TYPE
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           PERFORM CALL-CSINT

           SET D-X UP BY 1

           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  YREFERENCELINE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          Y REFERENCE LINE WRITTEN AT -- ' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 23 TO CS-TYPE
           PERFORM CALL-CSFLT

           SET D-X UP BY 1



           .
       CALL-CSINT.

           CALL 'CSINT' USING
                 CHART-ID
                 CS-TYPE
                 START-VALUE
                 COUNT-VALUES
                 CONTROL-VALUES
                 INT-VALUES
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN CSINT$'
           END-IF

           MOVE 0 TO INT-1 INT-2 INT-3 INT-4
           MOVE 0 TO C-1  C-2  C-3  C-4



           .
       SET-NOINDEX.
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 19 TO CS-TYPE

           DISPLAY '          Y VALUES WILL BE AS ENTERED, NOT INDEXED'
           PERFORM CALL-CSINT
           .


       SET-PLOT-OFGROUPTOTAL.
           IF PCS-PAIR = 1
               DISPLAY '          INDEXING REQUIRES TIED VALUES'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID FORMAT CARD$'
           END-IF
           SET D-X UP BY 1

           MOVE 4 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 2 TO INT-2
           MOVE 2 TO INT-3
           MOVE 1 TO INT-4
           MOVE 19 TO CS-TYPE

           DISPLAY '          Y VALUES WILL PLOTTED AS A PERCENT OF '
                   'ALL Y VALUES IN THE DATA GROUP'
           PERFORM CALL-CSINT


           .
       SET-PLOT-OFGROUP.
           IF PCS-PAIR = 1
               DISPLAY '          INDEXING REQUIRES TIED VALUES'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID FORMAT CARD$'
           END-IF
           SET D-X UP BY 1

           MOVE 1 TO DATA-ATTRGROUP
           PERFORM UNTIL BATCRPCS-TABLED-GROUP-NAME(DATA-ATTRGROUP)
           = D(D-X)
           OR DATA-ATTRGROUP > 99
               ADD 1 TO DATA-ATTRGROUP
           END-PERFORM
           IF DATA-ATTRGROUP > 99
               CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID GROUP NUMBER OR NAME '
                   D(D-X)
                   ' SUPPLIED TO "FORMAT  PLOT%OFGROUP" '
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
           END-IF

           DISPLAY '          Y VALUES WILL PLOTTED AS A PERCENT OF '
                   ' Y VALUES IN DATA GROUP ' D(D-X)

           SET D-X UP BY 1
           MOVE 4 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 2 TO INT-2
           MOVE 4 TO INT-3
           MOVE 1 TO INT-4
           MOVE 19 TO CS-TYPE
           PERFORM CALL-CSINT
           MOVE DATA-ATTRGROUP TO FP-1
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO START-VALUE
           MOVE 6  TO CS-TYPE
           PERFORM CALL-CSFLT

           .
       SET-PLOT-OFXVALUE.
           IF PCS-PAIR = 1
               DISPLAY '          INDEXING REQUIRES TIED VALUES'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID FORMAT CARD$'
           END-IF
           SET D-X UP BY 1
           CALL 'BATCXNUM' USING D(D-X) FP-1
           BATCRPCS-TABLED-LABELS
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER OR TIED X VALUE '
               D(D-X)
               ' SUPPLIED TO "FORMAT  PLOT%OFXVALUE" '
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF

           DISPLAY '          Y VALUES WILL PLOTTED AS A PERCENT OF '
                   'Y VALUES AT X=' D(D-X)
           SET D-X UP BY 1

           MOVE 4 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 2 TO INT-2
           MOVE 3 TO INT-3
           MOVE 1 TO INT-4
           MOVE 19 TO CS-TYPE
           PERFORM CALL-CSINT
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 6  TO CS-TYPE
           PERFORM CALL-CSFLT

           .
       SET-PLOT-OFXVALUETOTAL.
           IF PCS-PAIR = 1
               DISPLAY '          INDEXING REQUIRES TIED VALUES'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID FORMAT CARD$'
           END-IF
           SET D-X UP BY 1

           MOVE 4 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 2 TO INT-2
           MOVE 1 TO INT-3
           MOVE 1 TO INT-4
           MOVE 19 TO CS-TYPE

           DISPLAY '          Y VALUES WILL PLOTTED AS A PERCENT OF '
                   'ALL Y VALUES AT EACH X VALUE'
           PERFORM CALL-CSINT

           .
       SET-YGRIDLINES.
           SET D-X UP BY 1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO INT-1
           MOVE 34 TO CS-TYPE

           DISPLAY '          Y GRID LINES REQUIRED - '
           PERFORM CALL-CSINT
           .
       SET-BASE.
           SET D-X UP BY 1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 0 TO INT-1
           MOVE 10 TO CS-TYPE

           DISPLAY '          TOWER CHART GRID ON BASE ONLY'
           PERFORM CALL-CSINT

           .
       SET-SIDEWALL.
           SET D-X UP BY 1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO INT-1
           MOVE 10 TO CS-TYPE

           DISPLAY '          TOWER CHART GRID ON BASE AND SIDE'
           PERFORM CALL-CSINT


           .
       SET-BACKWALL.
           SET D-X UP BY 1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO INT-1
           MOVE 10 TO CS-TYPE

           DISPLAY '          TOWER CHART GRID ON BASE AND BACK'
           PERFORM CALL-CSINT


           .
       SET-CORNER.
           SET D-X UP BY 1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 3 TO INT-1
           MOVE 10 TO CS-TYPE

           DISPLAY '          TOWER CHART GRID ON BASE, BACK AND SIDE'
           PERFORM CALL-CSINT



           .
       SET-LEGEND.
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 40 TO CS-TYPE

           DISPLAY '          LEGEND REQUIRED - '
           PERFORM CALL-CSINT

           IF FUNCTION UPPER-CASE (D(D-X)) = 'BOX'
               SET D-X UP BY 1
               DISPLAY '          LEGEND TO BE BOXED'
               MOVE 1 TO COUNT-VALUES
               MOVE 4 TO START-VALUE
               MOVE 1 TO INT-1
               MOVE 20 TO CS-TYPE
               PERFORM CALL-CSINT
           END-IF


           IF FUNCTION UPPER-CASE (D(D-X)) = 'NOBOX'
               SET D-X UP BY 1
               DISPLAY '          LEGEND NOT TO BE BOXED'
               MOVE 1 TO COUNT-VALUES
               MOVE 4 TO START-VALUE
               MOVE 2 TO INT-1
               MOVE 20 TO CS-TYPE
               PERFORM CALL-CSINT
           END-IF


           .
       SET-NOLEGEND.
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 2 TO INT-1
           MOVE 40 TO CS-TYPE

           DISPLAY '          NO LEGEND REQUIRED - '
           PERFORM CALL-CSINT

           .
       SET-XGRIDLINES.
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO INT-1
           MOVE 33 TO CS-TYPE

           DISPLAY '          X GRID LINES REQUIRED - '
           PERFORM CALL-CSINT


           .
       SET-NOYGRIDLINES.
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO INT-1
           MOVE 34 TO CS-TYPE

           DISPLAY '          NO Y GRID LINES REQUIRED - '
           PERFORM CALL-CSINT



           .
       SET-NOXGRIDLINES.
           SET D-X UP BY 1

           MOVE 1 TO COUNT-VALUES
           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 2 TO INT-1
           MOVE 33 TO CS-TYPE

           DISPLAY '          NO X GRID LINES REQUIRED - '
           PERFORM CALL-CSINT





           .
       SET-BACKGROUNDCOLOR.
           SET D-X UP BY 1
           EVALUATE TRUE
           WHEN  FUNCTION UPPER-CASE(D(D-X)) = 'RED'
               COMPUTE FP-1 = 3
           WHEN OTHER
               CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "BACKGROUNDCOLOR"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF

               DISPLAY '          BACKGROUND COLOR SET TO'
               FUNCTION UPPER-CASE(D(D-X))
           END-EVALUATE

           MOVE 1 TO COUNT-VALUES


           MOVE 1 TO START-VALUE
           MOVE 1 TO INT-1
           MOVE 43 TO CS-TYPE
           PERFORM CALL-CSINT

           MOVE FP-1 TO INT-1
           MOVE 2 TO START-VALUE
           PERFORM CALL-CSINT

           SET D-X UP BY 1


           .
       SET-XINTERVAL.
           SET D-X UP BY 1
           IF FUNCTION UPPER-CASE(D(D-X)) = 'YEARS'
               COMPUTE FP-1 = 365.2425556
           ELSE
           CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  XINTERVAL"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
           END-IF
           DISPLAY '          X SCALE INTERVAL SET TO' FP-1

           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 15 TO CS-TYPE
           PERFORM CALL-CSFLT


           SET D-X UP BY 1
           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE = 0
               DISPLAY '          X SCALE MINOR TICKMARKS SET TO' FP-1
               MOVE 2 TO START-VALUE
               MOVE 1 TO COUNT-VALUES
               MOVE 15 TO CS-TYPE
               PERFORM CALL-CSFLT
               SET D-X UP BY 1
           END-IF


           .
       SET-YINTERVAL.
           SET D-X UP BY 1
           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X) ' SUPPLIED TO "FORMAT  YINTERVAL"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "FORMAT" CARD$'
           END-IF
           DISPLAY '          Y SCALE INTERVAL SET TO' FP-1


           MOVE 1 TO START-VALUE
           MOVE 1 TO COUNT-VALUES
           MOVE 16 TO CS-TYPE
           PERFORM CALL-CSFLT



           SET D-X UP BY 1
           CALL 'BATCNUM' USING D(D-X) FP-1
           IF RETURN-CODE = 0
               DISPLAY '          Y SCALE SUBDIVISION SET TO' FP-1
               MOVE 2 TO START-VALUE
               MOVE 1 TO COUNT-VALUES
               MOVE 16 TO CS-TYPE
               PERFORM CALL-CSFLT
               SET D-X UP BY 1
           END-IF




           .
       SET-XRANGE.
           SET D-X UP BY 1
           MOVE 3 TO COUNT-VALUES

      *    START OF X VALUES

           IF D(D-X) = '*'
               MOVE 3 TO C-1
           ELSE
           CALL 'BATCXNUM' USING D(D-X) FP-1
           BATCRPCS-TABLED-LABELS
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  XRANGE"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '          XRANGE START SET TO ------ ' FP-1
           END-IF

           SET D-X UP BY 1

      *    END OF X VALUES

           IF D(D-X) = '*'
               MOVE 3 TO C-2
           ELSE
               CALL 'BATCXNUM' USING D(D-X) FP-2
               BATCRPCS-TABLED-LABELS
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  XRANGE"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '          XRANGE END SET TO -------- ' FP-2
           END-IF

           SET D-X UP BY 1

      *    POINT OF INTERSECTION WITH Y AXIS

           IF D(D-X) = '*'
               MOVE 3 TO C-3
               SET D-X UP BY 1
           ELSE
               IF D(D-X) = ' '
                   MOVE 3 TO C-3
                   SET D-X UP BY 1
               ELSE
                   CALL 'BATCXNUM' USING D(D-X) FP-3
                   BATCRPCS-TABLED-LABELS
                   IF RETURN-CODE > 0
                       MOVE 3 TO C-3
                   ELSE
                       SET D-X UP BY 1
                       DISPLAY '          XRANGE INTERSECTION SET TO '
                       FP-3
                   END-IF
               END-IF
           END-IF



           MOVE 1 TO START-VALUE
           MOVE 3 TO COUNT-VALUES
           MOVE 9 TO CS-TYPE
           PERFORM CALL-CSFLT



           .
       CALL-CSFLT.

           CALL 'CSFLT' USING
                 CHART-ID
                 CS-TYPE
                 START-VALUE
                 COUNT-VALUES
                 CONTROL-VALUES
                 FP-VALUES
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN CSFLT$'
           END-IF

           MOVE 0 TO C-1  C-2  C-3  C-4
           MOVE 0 TO FP-1 FP-2 FP-3 FP-4


           .
       SET-YRANGE.
           SET D-X UP BY 1

           MOVE 3 TO COUNT-VALUES

      *    START OF Y VALUES

           IF D(D-X) = '*'
               MOVE 3 TO C-1
           ELSE
           CALL 'BATCNUM' USING D(D-X) FP-1
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  YRANGE"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '          YRANGE START SET TO ------ ' FP-1
           END-IF

           SET D-X UP BY 1

      *    END OF Y VALUES

           IF D(D-X) = '*'
               MOVE 3 TO C-2
           ELSE
               CALL 'BATCNUM' USING D(D-X) FP-2
               IF RETURN-CODE > 0
                   DISPLAY 'BATCHART: INVALID NUMBER '
                   D(D-X) ' SUPPLIED TO "FORMAT  YRANGE"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "FORMAT" CARD$'
               END-IF
               DISPLAY '          YRANGE END SET TO -------- ' FP-2
           END-IF

           SET D-X UP BY 1

      *    POINT OF INTERSECTION WITH Y AXIS

           IF D(D-X) = '*'
               MOVE 3 TO C-3
               SET D-X UP BY 1
           ELSE
               IF D(D-X) = ' '
                   MOVE 3 TO C-3
                   SET D-X UP BY 1
               ELSE
                   CALL 'BATCNUM' USING D(D-X) FP-3
                   IF RETURN-CODE > 0
                       MOVE 3 TO C-3
                   ELSE
                       SET D-X UP BY 1
                       DISPLAY '          YRANGE INTERSECTION SET TO '
                       FP-3
                   END-IF
               END-IF
           END-IF



           MOVE 1 TO START-VALUE
           MOVE 3 TO COUNT-VALUES
           MOVE 10 TO CS-TYPE

           PERFORM CALL-CSFLT




           .
       Z999-DUMMY.



           .
       END PROGRAM 'BATCFORM'.








       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCHDR'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.


       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                                  BATCRPCS-TABLED-GROUP-NAMES
                                  BATCRPCS-NOTES
                                  .


      *    DISPLAY  'BATCHDR ENTERED'
           MOVE PREST TO BATCRPCS-HDR
           MOVE 1 TO PCS-HDR-L

           MOVE LENGTH OF BATCRPCS-HDR TO PCS-HDR-L
           SUBTRACT 1 FROM PCS-HDR-L
           PERFORM UNTIL BATCRPCS-HDR(PCS-HDR-L:1) NOT = ' '
           OR PCS-HDR-L <= 10
               SUBTRACT 1 FROM PCS-HDR-L
           END-PERFORM
           DISPLAY 'BATCHART: HEADER SET TO "'
           BATCRPCS-HDR(1:PCS-HDR-L) '"'
           GOBACK



           .
       END PROGRAM 'BATCHDR'.



       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCREAD'.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INFILE ASSIGN TO SYSIN ORGANISATION SEQUENTIAL
           FILE STATUS IS INFILE-STATUS
           .

       DATA DIVISION.
       FILE  SECTION.

       FD   INFILE
            RECORD CONTAINS 80 CHARACTERS
            BLOCK CONTAINS 0 RECORDS
            RECORDING MODE F
            .

       01   INFILE-LINE PIC X(80).

       WORKING-STORAGE SECTION.


       01  SYSIN PIC X(80).

       01  SYSIN-STATUS     PIC X VALUE 'C'.
       01  SYSIN-LENGTH     PIC S9(7)      COMP  VALUE +80.
       01  INFILE-STATUS    PIC XX.

       01  MSG      PICTURE X(250) VALUE ' '.

       01  CONTINUATION  PIC X.

       01  SYSIN-L PIC S9(7) COMP.
       01  S-PTR   PIC S9(7) COMP.
       01  I     PIC S9(7) COMP.
       01  J     PIC S9(7) COMP.
       01  L     PIC S9(7) COMP.

       LINKAGE          SECTION.

       01  S     PIC X(800).
       01  P1    PIC X(800).
       01  P2    PIC X(800).
       01  PREST PIC X(800).

       PROCEDURE DIVISION USING S P1 P2 PREST.

      *
      *  READ SYSIN.  STOP WHEN RIGHT HAND CHAR NOT = '+'

      *    DISPLAY  'BATCREAD ENTERED'

           IF SYSIN-STATUS = 'C'
               OPEN INPUT INFILE
               IF INFILE-STATUS >  '00'
                   DISPLAY 'BATCHART: SYSIN ERROR FILE STATUS '
                   INFILE-STATUS
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART I/O ERROR ON SYSIN$'
               END-IF
               MOVE ' ' TO SYSIN-STATUS
      *        DISPLAY  'BATCREAD SYSIN OPENED'
           END-IF

           .
       READ-AGAIN.
           MOVE ' ' TO S P1 P2 PREST
           IF SYSIN-STATUS = 'E'
               DISPLAY 'BATCHART: END OF INPUT'
               GOBACK
           END-IF


           MOVE 1 TO S-PTR
           PERFORM READ-SYSIN
           MOVE SYSIN(1:SYSIN-L) TO S(S-PTR:)
      *    DISPLAY S(1:40)
           COMPUTE S-PTR = SYSIN-L + S-PTR

           PERFORM UNTIL CONTINUATION = 'N'
               PERFORM READ-SYSIN
               MOVE 1 TO I
               PERFORM UNTIL SYSIN(I:1) NOT = ' '
               OR I NOT < SYSIN-L
                   ADD 1 TO I
               END-PERFORM
               COMPUTE J = SYSIN-L - I + 1
               IF J > 0
                   MOVE SYSIN(I:J) TO S(S-PTR:)
      *            DISPLAY S(1:40)
                   COMPUTE S-PTR = S-PTR + J
               END-IF
           END-PERFORM

           IF S(1:1) = '*' GO TO READ-AGAIN END-IF
           IF S      = ' ' GO TO READ-AGAIN END-IF




           MOVE ' ' TO P1 P2 PREST
           MOVE 1 TO I

           COMPUTE L = LENGTH OF S - 1

           PERFORM UNTIL S(I:1) NOT = ' '
           OR I >= L
               ADD 1 TO I
           END-PERFORM

           MOVE 1 TO J
           PERFORM UNTIL S(I:1) = ' '
           OR I >= L
               MOVE S(I:1) TO P1(J:1)
               ADD 1 TO I
               ADD 1 TO J
           END-PERFORM

           PERFORM UNTIL S(I:1) NOT = ' '
           OR I >= L
               ADD 1 TO I
           END-PERFORM

           MOVE S(I:) TO PREST
           UNSTRING PREST DELIMITED ALL SPACE INTO P2


      *    DISPLAY 'P2=' P2
      *    DISPLAY 'PREST=' PREST

           IF FUNCTION UPPER-CASE (P1) = 'GROUP'
           OR FUNCTION UPPER-CASE (P1) = 'DATUM'
           OR FUNCTION UPPER-CASE (P1) = 'FORMAT'
           OR FUNCTION UPPER-CASE (P1) = 'HEADER'
           OR FUNCTION UPPER-CASE (P1) = 'BUILD'
           OR FUNCTION UPPER-CASE (P1) = 'PLOT'
           OR FUNCTION UPPER-CASE (P1) = 'NOTE'
           OR FUNCTION UPPER-CASE (P1) = 'XNOTE'
           OR FUNCTION UPPER-CASE (P1) = 'YNOTE'
           OR FUNCTION UPPER-CASE (P1) = 'PRINT'
           OR FUNCTION UPPER-CASE (P1) = 'GIF'
           OR FUNCTION UPPER-CASE (P1) = 'PSEG'
           OR FUNCTION UPPER-CASE (P1) = 'TIEDXVALUES'
           OR FUNCTION UPPER-CASE (P1) = 'SAVE'
               PERFORM Z999-DUMMY
           ELSE
               STRING 'C BATCHART INVALID INPUT ' P1
               DELIMITED SIZE INTO MSG
               DISPLAY '                 INPUT LINE ' S(1:40)
               CALL 'BATCONM' USING MSG
           END-IF

           GOBACK


           .
       Z999-DUMMY.

           .
       READ-SYSIN.
           MOVE ' ' TO SYSIN
           MOVE 'N' TO CONTINUATION
           READ INFILE
               AT END MOVE 'E' TO SYSIN-STATUS
           END-READ
           IF INFILE-STATUS > 10
               DISPLAY 'BATCHART: SYSIN ERROR FILE STATUS '
               INFILE-STATUS
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART I/O ERROR ON SYSIN$'
           END-IF
      *    DISPLAY 'BATCREAD: SYSIN READ ' INFILE-LINE

           MOVE INFILE-LINE TO SYSIN
           MOVE LENGTH OF INFILE-LINE TO SYSIN-LENGTH
           MOVE ' ' TO SYSIN(73:)
           MOVE 1 TO SYSIN-L

           IF SYSIN-STATUS = 'E' MOVE ' ' TO SYSIN

           ELSE

               COMPUTE SYSIN-L = LENGTH OF SYSIN - 1
               PERFORM UNTIL SYSIN-L < 2 OR
               SYSIN(SYSIN-L:1) NOT = ' '
                   COMPUTE SYSIN-L = SYSIN-L - 1
               END-PERFORM

               IF SYSIN(SYSIN-L:1) = '+'
                   MOVE ' ' TO SYSIN(SYSIN-L:1)
                   COMPUTE SYSIN-L = SYSIN-L - 1
                   MOVE 'Y' TO CONTINUATION
               END-IF
           END-IF

           .
       END PROGRAM 'BATCREAD'.



       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCFSIN'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.


      *
      *        ESLIB PARMS TO MAKE IT READ FROM RO1CFORM
      *
       01  ESLIB-PARMS.
           04 ESLIB-TYPE            PICTURE S9(8) COMP VALUE +4.
           04 ESLIB-COUNT           PICTURE S9(8) COMP VALUE +2.
           04 ESLIB-DDNAMES.
               07 ESLIB-DDNAME-RW       PIC X(8) VALUE 'ADMCFORM'.
               07 ESLIB-DDNAME-RO       PIC X(8) VALUE 'RO1CFORM'.


       PROCEDURE DIVISION.

      *    DISPLAY  'BATCFSIN ENTERED'
           CALL 'FSINN'
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN FSINN$'
           END-IF
           CALL 'ESLIB' USING ESLIB-TYPE ESLIB-COUNT
           ESLIB-DDNAMES
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN ESLIB$'
           END-IF

           .
       END PROGRAM 'BATCFSIN'.





       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCNUM'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  BATCNUMC-REPLY    PIC X.

       01  NUM2              PIC S9(6)V9(12).
       01  NUM2-FORMAT       PIC X(5)        VALUE '18N12'.

       01  NUM1              PIC S9(12)V9(6).
       01  NUM1-FORMAT       PIC X(5)        VALUE '18N06'.

       01  NUM3              PIC S9(18).
       01  NUM3-FORMAT       PIC X(5)        VALUE '18N00'.

       LINKAGE SECTION.
       01  FREEFORMAT PIC X(30).
       01  FP COMP-1.
       PROCEDURE DIVISION USING FREEFORMAT FP.

           CALL 'BATCNUMC' USING
                          FREEFORMAT
                          BY CONTENT LENGTH OF FREEFORMAT
                          BY REFERENCE
                          NUM1 NUM1-FORMAT BATCNUMC-REPLY
           IF BATCNUMC-REPLY = 'V'
               MOVE NUM1 TO FP
               MOVE 0 TO RETURN-CODE
               GOBACK
           END-IF
           CALL 'BATCNUMC' USING
                          FREEFORMAT
                          BY CONTENT LENGTH OF FREEFORMAT
                          BY REFERENCE
                          NUM2 NUM2-FORMAT BATCNUMC-REPLY
           IF BATCNUMC-REPLY = 'V'
               MOVE NUM2 TO FP
               MOVE 0 TO RETURN-CODE
               GOBACK
           END-IF
           CALL 'BATCNUMC' USING
                          FREEFORMAT
                          BY CONTENT LENGTH OF FREEFORMAT
                          BY REFERENCE
                          NUM3 NUM3-FORMAT BATCNUMC-REPLY
           IF BATCNUMC-REPLY = 'V'
               MOVE NUM3 TO FP
               MOVE 0 TO RETURN-CODE
               GOBACK
           END-IF
           MOVE 20 TO RETURN-CODE
           GOBACK
           .
       END PROGRAM 'BATCNUM'.






       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCXNUM'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  BASE-DATE     PIC S9(8) COMP.
       01  I             PIC S9(8) COMP.
       01  W-F           PIC X(30).
       01  W-F1          PIC X(30).
       01  W-FP COMP-1.

       LINKAGE SECTION.
       01  FREEFORMAT PIC X(30).
       01  FP COMP-1.
       COPY BATCRPCS.
       PROCEDURE DIVISION USING
           FREEFORMAT FP BATCRPCS-TABLED-LABELS.


           CALL 'BATCNUM' USING FREEFORMAT FP
           IF RETURN-CODE  = 0
               GOBACK
           END-IF

      *    TEST FOR TIED LABEL

           PERFORM VARYING I FROM 1 BY 1
           UNTIL BATCRPCS-TABLED-LABEL(I) = ' '

               IF BATCRPCS-TABLED-LABEL(I) = FREEFORMAT
                   MOVE I TO FP
                   MOVE 0 TO RETURN-CODE
                   GOBACK
               END-IF

           END-PERFORM

      *    TEST FOR DATES DD/MM/YY DD.MM.CCYY CCYY-MM-DD

           CALL 'BATCDATE' USING FREEFORMAT BASE-DATE
           IF BASE-DATE NOT = -1
               COMPUTE FP = BASE-DATE + 365.2425556 - 1
               MOVE 0 TO RETURN-CODE
               GOBACK
           END-IF
           IF FUNCTION UPPER-CASE (FREEFORMAT) (1:8) = 'RUN_DATE'
               MOVE FUNCTION CURRENT-DATE(1:8) TO W-F1
               CALL 'BATCDATE' USING W-F1 BASE-DATE
               IF BASE-DATE NOT = -1
                   IF FREEFORMAT (9:) = ' '
                       COMPUTE FP = BASE-DATE + 365.2425556  - 1
                       MOVE 0 TO RETURN-CODE
                       GOBACK
                   ELSE
      *                DISPLAY FREEFORMAT
                       MOVE FREEFORMAT (9:) TO W-F
      *                DISPLAY W-F
                       CALL 'BATCNUM' USING W-F W-FP
                       IF RETURN-CODE = 0
                           COMPUTE FP = BASE-DATE + 365.2425556 + W-FP
                           - 1
                           GOBACK
                       END-IF
                   END-IF
               END-IF
           END-IF
           MOVE 12 TO RETURN-CODE
           GOBACK
           .
       END PROGRAM 'BATCXNUM'.






       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCDUM'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.

      *
      *        DSOPEN PARAMETERS FOR DUMMY DEVICE
      *
       01  DSOPEN-PARAMETERS.
           02  DSOPEN-DEV-ID     PIC S9(8) COMP VALUE +0.
           02  DSOPEN-FAM-TYPE   PIC S9(8) COMP VALUE +1.
           02  DSOPEN-DEV-TOKEN  PIC X(8)       VALUE 'ADMKPCA1'.
           02  DSOPEN-PROCOPT-COUNT PIC S9(8) COMP VALUE +0.
           02  DSOPEN-PROCOPT.
               03  DSOPEN-PROCOPT1 PIC S9(8) COMP VALUE +0.
               03  DSOPEN-PROCOPT2 PIC S9(8) COMP VALUE +0.
           02  DSOPEN-NMLIST-COUNT PIC S9(8) COMP VALUE +1.
           02  DSOPEN-NMLIST.
               03  DSOPEN-NMLIST1 PIC X(8) VALUE ' '.
      *
       01  DSUSE-PARAMETERS.
           02  DSUSE-PRIMARY-USE PIC S9(8) COMP VALUE +1.

       LINKAGE SECTION.

       COPY BATCRPCS.

       PROCEDURE DIVISION USING BATCRPCS-SWITCHES.

           MOVE DUMMY-DEV-TOKEN TO DSOPEN-DEV-TOKEN
           MOVE DUMMY-FAM-TYPE TO DSOPEN-FAM-TYPE
      *    DISPLAY  'BATCDUM ENTERED'
           CALL 'DSOPEN' USING
               DSOPEN-DEV-ID
               DSOPEN-FAM-TYPE
               DSOPEN-DEV-TOKEN
               DSOPEN-PROCOPT-COUNT
               DSOPEN-PROCOPT
               DSOPEN-NMLIST-COUNT
               DSOPEN-NMLIST
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN DSOPEN$'
           END-IF

           CALL 'DSUSE' USING
               DSUSE-PRIMARY-USE
               DSOPEN-DEV-ID
           IF RETURN-CODE > 0 THEN
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART ERROR IN DSUSE$'
           END-IF



           GOBACK




           .
       END PROGRAM 'BATCDUM'.








       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCNOTE'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  W-FP      COMP-1.
       01  W-DISP    PIC ZZZ9.
       01  W-NUM     PIC 999999999.
       01  I         PIC S9(8) COMP.
       01  J         PIC S9(8) COMP.
       01  K         PIC S9(8) COMP.
       01  NOTE-NUMBER PIC S9(8) COMP.
       01  LINE-NUMBER PIC S9(8) COMP.
       01  NOTE    PIC X(7000).



       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                                  BATCRPCS-TABLED-GROUP-NAMES
                                  BATCRPCS-NOTES
                                  .


           MOVE 0 TO NOTE-NUMBER
           PERFORM UNTIL NOTE-NUMBER > 99
           OR BATCRPCS-NOTE(NOTE-NUMBER) = ' '
               ADD 1 TO NOTE-NUMBER
           END-PERFORM

           DISPLAY '          NOTE NUMBER IS ' NOTE-NUMBER
           IF NOTE-NUMBER > 99 THEN
               DISPLAY '              TOO MANY NOTES'
               MOVE 12 TO RETURN-CODE
               GOBACK
           END-IF


           MOVE 0 TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           MOVE 0 TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)
           MOVE 0 TO BATCRPCS-NOTE-ROTATE(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-BOX(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER)



           MOVE ' ' TO DS
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20

           SET D-X TO 1
           PERFORM UNTIL D-X > 19
           OR D(D-X) = ' '
      *        DISPLAY 'PROCESSING ' FUNCTION UPPER-CASE ( D(D-X) )
               EVALUATE TRUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'COLSACROSS'
                   PERFORM SET-COLSACROSS
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'XVALUE'
                   PERFORM SET-XVALUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ROWSUP'
                   PERFORM SET-ROWSUP
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'YVALUE'
                   PERFORM SET-YVALUE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'ROTATE'
                   PERFORM SET-ROTATE
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'BOX'
                   MOVE 1 TO BATCRPCS-NOTE-BOX(NOTE-NUMBER)
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOBOX'
                   MOVE 2 TO BATCRPCS-NOTE-BOX(NOTE-NUMBER)
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'PREBLANK'
                   MOVE 1 TO BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER)
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'NOPREBLANK'
                   MOVE 2 TO BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER)
                   SET D-X UP BY 1
               WHEN FUNCTION UPPER-CASE ( D(D-X) ) = 'TEXT'
                   PERFORM SET-TEXT
               WHEN OTHER
                   DISPLAY 'BATCHART: INVALID MODIFIER '
                   D(D-X) ' SUPPLIED TO "NOTE"'
                   CALL 'BATCONM' USING BY CONTENT
                   'C BATCHART INVALID "NOTE" CARD$'
               END-EVALUATE

           END-PERFORM



           GOBACK




           .
       SET-TEXT.

           MOVE D (D-X + 1) TO
           BATCRPCS-NOTE-DATA(NOTE-NUMBER)

           MOVE 1 TO I

           PERFORM UNTIL
           BATCRPCS-NOTE-DATA(NOTE-NUMBER) (I:1) = ' '
               ADD 1 TO I
           END-PERFORM

           SUBTRACT 1 FROM I

           MOVE I TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)

           DISPLAY '          NOTE NUMBER ' NOTE-NUMBER
           ' LOADED '

           SET D-X UP BY 2



           .
       SET-COLSACROSS.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "NOTE COLSACROSS"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "NOTE" CARD$'
           END-IF
           MOVE W-FP
           TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           DISPLAY '          START COLUMN SET TO '
              BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           SET D-X UP BY 2
           MOVE 1 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)



           .
       SET-XVALUE.
           CALL 'BATCXNUM' USING D(D-X + 1) W-FP
           BATCRPCS-TABLED-LABELS
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER OR NAME '
               D(D-X + 1) ' SUPPLIED TO "NOTE XVALUE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "NOTE" CARD$'
           END-IF

           MOVE W-FP
           TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           DISPLAY '          START XVALUE SET TO '
              BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           SET D-X UP BY 2
           MOVE 2 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)


           .
       SET-ROWSUP.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "NOTE ROWSUP"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "NOTE" CARD$'
           END-IF
           MOVE W-FP
           TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           DISPLAY '          START ROW UP SET TO '
              BATCRPCS-NOTE-UP(NOTE-NUMBER)
           SET D-X UP BY 2
           MOVE 1 TO BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER)

           .
       SET-YVALUE.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "NOTE YVALUE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "NOTE" CARD$'
           END-IF
           MOVE W-FP
           TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           DISPLAY '          START YVALUE SET TO '
              BATCRPCS-NOTE-UP(NOTE-NUMBER)
           SET D-X UP BY 2
           MOVE 2 TO BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER)


           .
       SET-ROTATE.
           CALL 'BATCNUM' USING D(D-X + 1) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER '
               D(D-X + 1) ' SUPPLIED TO "NOTE ROTATE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "NOTE" CARD$'
           END-IF
           MOVE W-FP
           TO BATCRPCS-NOTE-ROTATE(NOTE-NUMBER)
           DISPLAY '          START ROW SET TO '
              BATCRPCS-NOTE-ROTATE(NOTE-NUMBER)
           SET D-X UP BY 2



           .
       END PROGRAM 'BATCNOTE'.



       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCXMRK'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  W-TICK-UP COMP-1.
       01  W-FP      COMP-1.
       01  W-DISP    PIC ZZZ9.
       01  W-NUM     PIC 999999999.
       01  I         PIC S9(8) COMP.
       01  J         PIC S9(8) COMP.
       01  K         PIC S9(8) COMP.
       01  NOTE-NUMBER PIC S9(8) COMP.
       01  LINE-NUMBER PIC S9(8) COMP.
       01  NOTE    PIC X(7000).



       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                                  BATCRPCS-TABLED-GROUP-NAMES
                                  BATCRPCS-NOTES
                                  .


           MOVE -0.0001 TO W-TICK-UP
           MOVE 0 TO NOTE-NUMBER
           PERFORM UNTIL NOTE-NUMBER > 99
           OR BATCRPCS-NOTE(NOTE-NUMBER) = ' '
               ADD 1 TO NOTE-NUMBER
           END-PERFORM

           DISPLAY '          NOTE NUMBER IS ' NOTE-NUMBER
           IF NOTE-NUMBER > 99 THEN
               DISPLAY '              TOO MANY NOTES'
               MOVE 12 TO RETURN-CODE
               GOBACK
           END-IF


           MOVE 0 TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           MOVE -1.5 TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)
           MOVE 0 TO BATCRPCS-NOTE-ROTATE(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-BOX(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER)



           MOVE ' ' TO DS
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20



           SET D-X TO 1
           PERFORM SET-XVALUE
           MOVE 2 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)
           SET D-X TO 2
           PERFORM SET-TEXT
           IF BATCRPCS-NOTE-DATA(NOTE-NUMBER) = ' '
               MOVE ' ' TO BATCRPCS-NOTE(NOTE-NUMBER)
               SUBTRACT 1 FROM NOTE-NUMBER
               MOVE -0.2  TO W-TICK-UP
           END-IF


      *    ALSO DUMMY VERTICAL LINE AS TICK MARK

           ADD 1 TO NOTE-NUMBER

           MOVE W-FP TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           MOVE W-TICK-UP TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)
           MOVE 0 TO BATCRPCS-NOTE-ROTATE(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-BOX(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER)
           MOVE '|' TO BATCRPCS-NOTE-DATA(NOTE-NUMBER)
           IF W-TICK-UP = -0.2
               MOVE "'" TO BATCRPCS-NOTE-DATA(NOTE-NUMBER)
           END-IF


           GOBACK




           .
       SET-TEXT.

           MOVE D(D-X) TO BATCRPCS-NOTE-DATA(NOTE-NUMBER)

           MOVE 1 TO I

           PERFORM UNTIL
           BATCRPCS-NOTE-DATA(NOTE-NUMBER) (I:1) = ' '
               ADD 1 TO I
           END-PERFORM

           SUBTRACT 1 FROM I

           MOVE I TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)

           DISPLAY '          NOTE NUMBER ' NOTE-NUMBER
           ' LOADED '


           .
       SET-XVALUE.
           CALL 'BATCXNUM' USING D(D-X) W-FP
           BATCRPCS-TABLED-LABELS
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER OR NAME '
               D(D-X + 1) ' SUPPLIED TO "XNOTE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "XNOTE" CARD$'
           END-IF

           MOVE W-FP
           TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           DISPLAY '          XNOTE COLUMN SET TO '
              BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)




           .
       END PROGRAM 'BATCXMRK'.






       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCYMRK'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  DS.
           04  D1    PIC X(80).
           04  D2    PIC X(80).
           04  D3    PIC X(80).
           04  D4    PIC X(80).
           04  D5    PIC X(80).
           04  D6    PIC X(80).
           04  D7    PIC X(80).
           04  D8    PIC X(80).
           04  D9    PIC X(80).
           04  D10   PIC X(80).
           04  D11   PIC X(80).
           04  D12   PIC X(80).
           04  D13   PIC X(80).
           04  D14   PIC X(80).
           04  D15   PIC X(80).
           04  D16   PIC X(80).
           04  D17   PIC X(80).
           04  D18   PIC X(80).
           04  D19   PIC X(80).
           04  D20   PIC X(80).
       01  FILLER REDEFINES DS.
           04  D     PIC X(80) OCCURS 20 INDEXED BY D-X.

       01  W-FP      COMP-1.
       01  W-DISP    PIC ZZZ9.
       01  W-NUM     PIC 999999999.
       01  I         PIC S9(8) COMP.
       01  J         PIC S9(8) COMP.
       01  K         PIC S9(8) COMP.
       01  NOTE-NUMBER PIC S9(8) COMP.
       01  LINE-NUMBER PIC S9(8) COMP.
       01  NOTE    PIC X(7000).



       LINKAGE SECTION.
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING         PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                                  BATCRPCS-TABLED-GROUP-NAMES
                                  BATCRPCS-NOTES
                                  .


           MOVE 0 TO NOTE-NUMBER
           PERFORM UNTIL NOTE-NUMBER > 99
           OR BATCRPCS-NOTE(NOTE-NUMBER) = ' '
               ADD 1 TO NOTE-NUMBER
           END-PERFORM

           DISPLAY '          NOTE NUMBER IS ' NOTE-NUMBER
           IF NOTE-NUMBER > 99 THEN
               DISPLAY '              TOO MANY NOTES'
               MOVE 12 TO RETURN-CODE
               GOBACK
           END-IF


           MOVE -0.99 TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           MOVE 0 TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-UPUNITS(NOTE-NUMBER)
           MOVE 1 TO BATCRPCS-NOTE-ACROSSUNITS(NOTE-NUMBER)
           MOVE 0 TO BATCRPCS-NOTE-ROTATE(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-BOX(NOTE-NUMBER)
           MOVE 2 TO BATCRPCS-NOTE-PREBLANK(NOTE-NUMBER)



           MOVE ' ' TO DS
           UNSTRING PREST DELIMITED ALL SPACE INTO
               D1  D2  D3  D4  D5  D6  D7  D8  D9  D10
               D11 D12 D13 D14 D15 D16 D17 D18 D19 D20



           SET D-X TO 1
           PERFORM SET-YVALUE
           SET D-X TO 2
           PERFORM SET-TEXT
      *    ALSO DUMMY DASH LINE AS TICK MARK
           ADD 1 TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)
           MOVE '-' TO BATCRPCS-NOTE-DATA(NOTE-NUMBER)
           (BATCRPCS-NOTE-LENGTH(NOTE-NUMBER):1)
           IF BATCRPCS-NOTE-LENGTH(NOTE-NUMBER) = 1
               MOVE -0.69 TO BATCRPCS-NOTE-ACROSS(NOTE-NUMBER)
           END-IF

           GOBACK




           .
       SET-TEXT.

           MOVE D(D-X) TO BATCRPCS-NOTE-DATA(NOTE-NUMBER)

           MOVE 1 TO I

           PERFORM UNTIL
           BATCRPCS-NOTE-DATA(NOTE-NUMBER) (I:1) = ' '
               ADD 1 TO I
           END-PERFORM

           SUBTRACT 1 FROM I

           MOVE I TO BATCRPCS-NOTE-LENGTH(NOTE-NUMBER)

           DISPLAY '          NOTE NUMBER ' NOTE-NUMBER
           ' LOADED '


           .
       SET-YVALUE.
           CALL 'BATCNUM' USING D(D-X) W-FP
           IF RETURN-CODE > 0
               DISPLAY 'BATCHART: INVALID NUMBER  '
               D(D-X + 1) ' SUPPLIED TO "YNOTE"'
               CALL 'BATCONM' USING BY CONTENT
               'C BATCHART INVALID "YNOTE" CARD$'
           END-IF

           MOVE W-FP
           TO BATCRPCS-NOTE-UP(NOTE-NUMBER)
           DISPLAY '          YNOTE VALUE SET TO '
              BATCRPCS-NOTE-UP(NOTE-NUMBER)




           .
       END PROGRAM 'BATCYMRK'.








       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCRF'.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.

      *
      * ATTEMPT TO CONVERT FROM FREE TO TIED DATA
      *
      * IF IT DOESN'T WORK, DO NOWT
      *
       01  DATUM-COUNT       PIC S9(4) COMP.

       01  MSG      PICTURE X(250) VALUE ' '.

       01  NUM-LABELS-PARSED PIC S9(8) COMP VALUE 0.

       01  I                 PIC S9(8) COMP VALUE 0.
       01  J                 PIC S9(8) COMP VALUE 0.
       01  K                 PIC S9(8) COMP VALUE 0.
       01  L                 PIC S9(8) COMP VALUE 0.
       01  M                 PIC S9(8) COMP VALUE 0.
       01  N                 PIC S9(8) COMP VALUE 0.

       01  D     PIC X(80).
       01  D1    PIC X(80).
       01  D2    PIC X(80).
      *
      * Y-DATA
      *

       01  NEW-Y-DATA.
           02  NEW-Y-DATUM COMP-1 OCCURS 999 INDEXED BY NEW-Y-DATUM-X.

       01  FP-1  COMP-1.
       01  W-M PIC X.

       01  PACKED-1 PIC S9(9)V9(6)  COMP-3.

       01  W-UNIQUE-XVALUE-WORK  COMP-1.

       01  W-UNIQUE-XVALUES.
           04  W-UNIQUE-XVALUE   COMP-1 OCCURS 99
                   INDEXED BY
                   W-UNIQUE-XVALUE-X.

       01  W-NO-UNIQUE-XVALUES  PIC S9(8) COMP.

       01  W-NO-XVALUES  PIC S9(8) COMP.

       01  W-START-THIS-GROUP PIC S9(8) COMP.
       01  W-END-THIS-GROUP   PIC S9(8) COMP.

       01  W-GROUP-NO    PIC S9(8) COMP.
       01  w-sorted      PIC X.


       LINKAGE SECTION.
       01  S     PIC X(800).
       01  P1    PIC X(800).
       01  P2    PIC X(800).
       01  PREST PIC X(800).
       COPY BATCRPCS.
       PROCEDURE DIVISION USING S P1 P2 PREST BATCRPCS
                                  BATCRPCS-DATUM-COUNTS
                                  BATCRPCS-X-DATA
                                  BATCRPCS-Y-DATA
                                  BATCRPCS-GROUP-NAMES
                                  BATCRPCS-GROUP-LABELS
                                  BATCRPCS-HDR
                                  BATCRPCS-SWITCHES
                                  BATCRPCS-TABLED-LABELS
                             BATCRPCS-TABLED-GROUP-NAMES BATCRPCS-NOTES
                                  .

      *    DISPLAY  'BATCRF ENTERED'
           IF PCS-PAIR = 0
               MOVE 0 TO RETURN-CODE
               GOBACK
           END-IF
      *
      * COUNT NUMBER OF UNIQUE X VALUES
      *
           MOVE 0 TO W-NO-UNIQUE-XVALUES

           MOVE 0 TO W-NO-XVALUES
           DISPLAY '          NO DATA GROUPS= ' PCS-NG
           PERFORM VARYING W-GROUP-NO FROM 1 BY 1
           UNTIL W-GROUP-NO > PCS-NG
               ADD GROUP-DATUM-COUNT(W-GROUP-NO) TO W-NO-XVALUES
           END-PERFORM


      *  COMPUTE NO UNIQUE X VALUES
           PERFORM VARYING X-DATUM-X FROM 1 BY 1
           UNTIL X-DATUM-X > W-NO-XVALUES
               MOVE 'N' TO W-M
               PERFORM VARYING J FROM 1 BY 1
               UNTIL W-M = 'Y' OR J > W-NO-UNIQUE-XVALUES
                   IF W-UNIQUE-XVALUE(J) = X-DATUM(X-DATUM-X)
                       MOVE 'Y' TO W-M
                   END-IF
               END-PERFORM
               IF W-M = 'N'
                   IF J > 99
                       DISPLAY '          TOO MANY UNIQUE VALUES '
                       MOVE 4 TO RETURN-CODE
                       GOBACK
                   END-IF
                   MOVE X-DATUM(X-DATUM-X) TO W-UNIQUE-XVALUE(J)
                   MOVE J TO W-NO-UNIQUE-XVALUES
                   DISPLAY '          UNIQUE VALUE ' X-DATUM(X-DATUM-X)
               END-IF

           END-PERFORM

           DISPLAY '          NO OF UNIQUE X VALUES '
           W-NO-UNIQUE-XVALUES

      *  MAKE SURE ROOM FOR ALL Y-VALUES
           COMPUTE I = W-NO-UNIQUE-XVALUES * PCS-NG
           DISPLAY '          NO OF TIED Y VALUES REQUIRED = ' I
           IF I > 999
               DISPLAY '          NO OF TIED Y VALUES TOO HIGH'
               MOVE 4 TO RETURN-CODE
               GOBACK
           END-IF
           MOVE W-NO-UNIQUE-XVALUES TO PCS-NE

      *  CHECK ALL X VALUES ARE ASCENDING WITHIN GROUPS


           DISPLAY '          CHECKING ALL X VALUES IN ASCENDING ORDER'
           SET X-DATUM-X TO 1
           MOVE 1 TO W-START-THIS-GROUP
           PERFORM VARYING W-GROUP-NO
           FROM 1 BY 1
           UNTIL W-GROUP-NO > PCS-NG

               DISPLAY '          CHECKING GROUP ' W-GROUP-NO

               COMPUTE W-END-THIS-GROUP
               = W-START-THIS-GROUP + GROUP-DATUM-COUNT(W-GROUP-NO) - 1

               IF GROUP-DATUM-COUNT(W-GROUP-NO) > 1
                   COMPUTE K = W-END-THIS-GROUP - 1
                   MOVE 1 TO L
                   PERFORM VARYING X-DATUM-X
                   FROM W-START-THIS-GROUP BY 1
                   UNTIL X-DATUM-X > K
                       ADD 1 TO L
                       IF X-DATUM(X-DATUM-X + 1) <= X-DATUM(X-DATUM-X)
                           DISPLAY '          DATUM NOT ASCENDING ' L
                           MOVE 4 TO RETURN-CODE
                           GOBACK
                       END-IF
                   END-PERFORM
               END-IF
               COMPUTE W-START-THIS-GROUP = W-END-THIS-GROUP + 1

           END-PERFORM


      *  SORT UNIQUE X VALUES
      *



           MOVE 'N' TO w-sorted
           PERFORM UNTIL w-sorted = 'A'
           OR PCS-NE < 2
               MOVE 'A' TO w-sorted
               PERFORM VARYING
               W-UNIQUE-XVALUE-X FROM 2 BY 1 UNTIL
               W-UNIQUE-XVALUE-X > PCS-NE
                   IF W-UNIQUE-XVALUE (W-UNIQUE-XVALUE-X)
                   >  W-UNIQUE-XVALUE (W-UNIQUE-XVALUE-X - 1)

                       MOVE W-UNIQUE-XVALUE (W-UNIQUE-XVALUE-X)
                       TO   W-UNIQUE-XVALUE-WORK
                       MOVE W-UNIQUE-XVALUE (W-UNIQUE-XVALUE-X - 1)
                       TO   W-UNIQUE-XVALUE (W-UNIQUE-XVALUE-X)
                       MOVE W-UNIQUE-XVALUE-WORK
                       TO   W-UNIQUE-XVALUE (W-UNIQUE-XVALUE-X - 1)
                       MOVE 'N' TO w-sorted

                   END-IF
               END-PERFORM
           END-PERFORM


      *    DISPLAY W-UNIQUE-XVALUE(1)
      *    DISPLAY W-UNIQUE-XVALUE(2)
      *    DISPLAY W-UNIQUE-XVALUE(3)
      *    DISPLAY W-UNIQUE-XVALUE(4)




      *  REFORMAT ALL GROUPS

           PERFORM VARYING I FROM 1 BY 1 UNTIL I > 999
                MOVE 1.0E+72 TO NEW-Y-DATUM(I)
           END-PERFORM

           DISPLAY '          REFORMATTING Y DATUMS '
           SET X-DATUM-X TO 1
           MOVE 1 TO W-START-THIS-GROUP
           PERFORM VARYING W-GROUP-NO
           FROM 1 BY 1
           UNTIL W-GROUP-NO > PCS-NG

               DISPLAY '          REFORMATTING GROUP ' W-GROUP-NO

               COMPUTE W-END-THIS-GROUP
               = W-START-THIS-GROUP + GROUP-DATUM-COUNT(W-GROUP-NO) - 1

               PERFORM VARYING X-DATUM-X
               FROM W-START-THIS-GROUP BY 1
               UNTIL X-DATUM-X > W-END-THIS-GROUP

                   PERFORM VARYING I FROM 1 BY 1
                   UNTIL W-UNIQUE-XVALUE(I) = X-DATUM(X-DATUM-X)
                       PERFORM Z999-DUMMY
                   END-PERFORM
                   COMPUTE J = ((W-GROUP-NO - 1) * PCS-NE)
                   + I
                   SET Y-DATUM-X TO X-DATUM-X
                   MOVE Y-DATUM(Y-DATUM-X) TO NEW-Y-DATUM(J)

                   NEW-Y-DATUM(J)

               END-PERFORM
               COMPUTE W-START-THIS-GROUP = W-END-THIS-GROUP + 1

           END-PERFORM

           MOVE NEW-Y-DATA TO BATCRPCS-Y-DATA

           PERFORM VARYING W-GROUP-NO FROM 1 BY 1 UNTIL W-GROUP-NO
           > PCS-NG
               PERFORM VARYING I FROM 1 BY 1 UNTIL I >
               PCS-NE
                   COMPUTE J = ((W-GROUP-NO - 1) * PCS-NE) + I
                   SET X-DATUM-X TO J
                   MOVE W-UNIQUE-XVALUE(I) TO X-DATUM(X-DATUM-X)
                   SET Y-DATUM-X TO X-DATUM-X
                   DISPLAY '          DATUM '
                   I ' FOR GROUP ' W-GROUP-NO
                   ' SET TO X(' J ') = '
                   X-DATUM(X-DATUM-X)
                   ' Y(' J ')= '
                   Y-DATUM(Y-DATUM-X)
                   ADD 1 TO GROUP-DATUM-COUNT(PCS-NG)
               END-PERFORM

           END-PERFORM
           MOVE 0 TO PCS-PAIR



           MOVE 0 TO RETURN-CODE
           GOBACK

           .
       Z999-DUMMY.


           .
       END PROGRAM 'BATCRF'.


       IDENTIFICATION DIVISION.
       PROGRAM-ID.  'BATCDATE'
       ENVIRONMENT DIVISION.
       DATA DIVISION.

       WORKING-STORAGE SECTION.

       01  CHRDATE.
           02  VSTRING-LENGTH      PIC S9(4) BINARY.
           02  VSTRING-TEXT.
               03  VSTRING-CHAR    PIC X
                           OCCURS 0 TO 256 TIMES
                           DEPENDING ON VSTRING-LENGTH
                               OF CHRDATE.
       01  PICSTR.
           02  VSTRING-LENGTH      PIC S9(4) BINARY.
           02  VSTRING-TEXT.
               03  VSTRING-CHAR    PIC X
                           OCCURS 0 TO 256 TIMES
                           DEPENDING ON VSTRING-LENGTH
                               OF PICSTR.
       01  LILIAN                  PIC S9(9) BINARY.
       01  FC.
           02  CONDITION-TOKEN-VALUE.
           COPY  CEEIGZCT.
               03  CASE-1-CONDITION-ID.
                   04  SEVERITY    PIC S9(4) BINARY.
                   04  MSG-NO      PIC S9(4) BINARY.
               03  CASE-2-CONDITION-ID
                         REDEFINES CASE-1-CONDITION-ID.
                   04  CLASS-CODE  PIC S9(4) BINARY.
                   04  CAUSE-CODE  PIC S9(4) BINARY.
               03  CASE-SEV-CTL    PIC X.
               03  FACILITY-ID     PIC XXX.
           02  I-S-INFO            PIC S9(9) BINARY.


       LINKAGE SECTION.


       01   L-DATEC     PIC X(10).
       01   L-NEWBASE   PIC S9(8) COMP.

       PROCEDURE DIVISION USING
           L-DATEC L-NEWBASE
           .

           COMPUTE L-NEWBASE = -1



      *
      * Start of customisation
      *



      *
      *
      * This part may be customised to adapt date
      * processing as you desire
      *
      *



           MOVE 10 TO VSTRING-LENGTH OF PICSTR
           MOVE 'YYYY-MM-DD' TO VSTRING-TEXT OF PICSTR
           MOVE 10 TO VSTRING-LENGTH OF CHRDATE
           MOVE L-DATEC TO VSTRING-TEXT OF CHRDATE

           CALL "CEEDAYS" USING CHRDATE, PICSTR, LILIAN, FC
           IF  CEE000 OF FC
               COMPUTE L-NEWBASE = LILIAN + 577735
               GOBACK
           END-IF

           MOVE 10 TO VSTRING-LENGTH OF CHRDATE
           MOVE L-DATEC TO VSTRING-TEXT OF CHRDATE
           MOVE 10 TO VSTRING-LENGTH OF PICSTR
           MOVE 'DD.MM.YYYY' TO VSTRING-TEXT OF PICSTR
           CALL "CEEDAYS" USING CHRDATE, PICSTR, LILIAN, FC
           IF  CEE000 OF FC
               COMPUTE L-NEWBASE = LILIAN + 577735
               GOBACK
           END-IF

      *
      * for uk dates DD/MM/YY leave this para uncommented
      *
           MOVE 08 TO VSTRING-LENGTH OF CHRDATE
           MOVE L-DATEC TO VSTRING-TEXT OF CHRDATE
           MOVE 08 TO VSTRING-LENGTH OF PICSTR
           MOVE 'DD/MM/YY' TO VSTRING-TEXT OF PICSTR
           CALL "CEEDAYS" USING CHRDATE, PICSTR, LILIAN, FC
           IF  CEE000 OF FC
               COMPUTE L-NEWBASE = LILIAN + 577735
               GOBACK
           END-IF

      *
      * for usa dates MM/DD/YY comment above para and uncomment this
      *
      *   MOVE 08 TO VSTRING-LENGTH OF CHRDATE
      *   MOVE L-DATEC TO VSTRING-TEXT OF CHRDATE
      *   MOVE 08 TO VSTRING-LENGTH OF PICSTR
      *   MOVE 'MM/DD/YY' TO VSTRING-TEXT OF PICSTR
      *   CALL "CEEDAYS" USING CHRDATE, PICSTR, LILIAN, FC
      *   IF  CEE000 OF FC
      *       COMPUTE L-NEWBASE = LILIAN + 577735
      *       GOBACK
      *   END-IF
      *


           MOVE 08 TO VSTRING-LENGTH OF CHRDATE
           MOVE L-DATEC TO VSTRING-TEXT OF CHRDATE
           MOVE 08 TO VSTRING-LENGTH OF PICSTR
           MOVE 'YYYYMMDD' TO VSTRING-TEXT OF PICSTR
           CALL "CEEDAYS" USING CHRDATE, PICSTR, LILIAN, FC
           IF  CEE000 OF FC
               COMPUTE L-NEWBASE = LILIAN + 577735
               GOBACK
           END-IF

      *
      * end of customisation
      *

           GOBACK
           .
       END PROGRAM BATCDATE.

       IDENTIFICATION DIVISION.

       PROGRAM-ID.                    BATCONM.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.

       01  W-COUNT                   PIC S9(8) COMP.

       01  W-DUMMY                   PIC X(200) VALUE ' '.
       01  W-STARS                   PIC X(70) VALUE ALL '*'.
       01  W-DISPLAY.
           04  W-DISPLAY-START       PIC X VALUE  '*'.
           04  W-DISPLAY-MID         PIC X(70) VALUE ALL ' '.
       01  W-LAST-MSG-CHAR           PIC X     VALUE     ' '.
       01  W-LASTLINE.
           04  W-LASTLINE-START PIC X(27) VALUE ALL '*'.
           04  W-LASTLINE-MID   PIC X(16) VALUE
           ' BATCONM CLASS '.
           04  W-LASTLINE-TYPE  PIC X VALUE     '?'.
           04  FILLER           PIC X VALUE     ' '.
           04  W-LASTLINE-END   PIC X(25) VALUE ALL '*'.

       LINKAGE SECTION.

       01  CON-MSG                   PIC X(72).


       PROCEDURE DIVISION USING CON-MSG .

           MOVE 1 TO W-COUNT
           PERFORM VARYING W-COUNT FROM 1 BY 1
           UNTIL W-COUNT = LENGTH OF CON-MSG
           OR CON-MSG(W-COUNT:1) = '$'
           END-PERFORM

           SUBTRACT 2 FROM W-COUNT

           IF W-COUNT < 1
               MOVE 1 TO W-COUNT
           END-IF

           IF W-LAST-MSG-CHAR NOT = 'S'

               DISPLAY W-STARS UPON CONSOLE

           END-IF



           MOVE CON-MSG(2:W-COUNT) TO W-DISPLAY-MID

           DISPLAY W-DISPLAY UPON CONSOLE

           IF CON-MSG(1:1)  NOT   = 'S'

               MOVE CON-MSG(1:1) TO W-LASTLINE-TYPE
               DISPLAY W-LASTLINE UPON CONSOLE

           END-IF

           IF CON-MSG(1:1) = 'C'

               MOVE 16 TO RETURN-CODE
               STOP RUN

           END-IF

           MOVE CON-MSG(1:1) TO W-LAST-MSG-CHAR
           MOVE 0 TO RETURN-CODE

           GOBACK.
       END PROGRAM BATCONM.


       IDENTIFICATION DIVISION.

       PROGRAM-ID.     BATCNUMC.

       ENVIRONMENT DIVISION.

       DATA DIVISION.
       WORKING-STORAGE SECTION.


       01   W-NUMBER-INT-DEC.
           04   W-NUMBER-INT-X.
               07   W-NUMBER-INT PIC 9(18).
           04   W-NUMBER-DEC-X.
               07   W-NUMBER-DEC PIC 9(18).

       01   W-NUMBER   PIC S9(18).
       01   w-REPLY    PIC S9(18).
       01   W-SXX.
           04   W-S99      PIC S99.
       01   W-X.
           04   W-9        PIC 9.
       01   I          PIC S9(8) COMP.
       01   J          PIC S9(8) COMP.
       01   K          PIC S9(8) COMP.

       01   W-SIGN     PIC X.
       01   W-SD       PIC S9(8) COMP.
       01   W-SD-INT   PIC S9(8) COMP.
       01   W-SD-DEC   PIC S9(8) COMP.

       01   W-PARSE    PIC X(80).
       01   W-PARSE1   PIC X(80).
       01   W-PARSE2   PIC X(80).
       01   W-PARSE3   PIC X(80).

       01   W-PARSE-NUMBER PIC X(80).


       LINKAGE SECTION.

       01   INPUT-FIELD     PIC X(80).
       01   INPUT-LENGTH    PIC S9(9) COMP.
       01   OUTPUT-NUMBER   PIC X(60).
       01   OUTPUT-FORMAT.
            04   OUTPUT-FORMAT-SD-X.
                 07   OUTPUT-FORMAT-SD PIC 99.
            04   OUTPUT-FORMAT-TYPE PIC X.
            04   OUTPUT-FORMAT-DEC-X.
                 07   OUTPUT-FORMAT-DEC PIC 99.
       01   REPLY           PIC X.

       PROCEDURE DIVISION USING INPUT-FIELD INPUT-LENGTH OUTPUT-NUMBER
                                OUTPUT-FORMAT REPLY.

           MOVE 'N' TO REPLY

           IF OUTPUT-FORMAT-TYPE NOT = 'N' GOBACK END-IF
           IF OUTPUT-FORMAT-DEC-X NOT NUMERIC GOBACK END-IF
           IF OUTPUT-FORMAT-DEC > 18         GOBACK END-IF
           IF OUTPUT-FORMAT-DEC < 0          GOBACK END-IF
           IF OUTPUT-FORMAT-SD-X NOT NUMERIC GOBACK END-IF
           IF OUTPUT-FORMAT-SD > 18          GOBACK END-IF
           IF OUTPUT-FORMAT-SD < 1           GOBACK END-IF
           IF OUTPUT-FORMAT-SD < OUTPUT-FORMAT-DEC GOBACK END-IF


           MOVE 'I' TO REPLY

           IF INPUT-LENGTH > 30 GOBACK END-IF

           MOVE 1 TO I
           PERFORM UNTIL I > INPUT-LENGTH
           OR INPUT-FIELD(I:1) NOT = ' '
               ADD 1 TO I
           END-PERFORM

           IF I > INPUT-LENGTH GOBACK END-IF
           COMPUTE J = INPUT-LENGTH - I + 1
           MOVE INPUT-FIELD(I:J) TO W-PARSE

           MOVE ' ' TO W-PARSE1 W-PARSE2 W-PARSE3
           UNSTRING W-PARSE DELIMITED ' ' INTO W-PARSE1 W-PARSE2
           W-PARSE3

      **   DISPLAY 'DEBUG1: PARSE1=' W-PARSE1

           IF W-PARSE3 NOT = ' ' GOBACK END-IF

      *    ONLY 2 PARAMETERS,  OK

           EVALUATE TRUE
           WHEN W-PARSE1 = '+'
               MOVE W-PARSE1 TO W-SIGN
               MOVE W-PARSE2 TO W-PARSE-NUMBER
           WHEN W-PARSE2 = '+'
               MOVE W-PARSE2 TO W-SIGN
               MOVE W-PARSE1 TO W-PARSE-NUMBER
           WHEN W-PARSE1 = '-'
               MOVE W-PARSE1 TO W-SIGN
               MOVE W-PARSE2 TO W-PARSE-NUMBER
           WHEN W-PARSE2 = '-'
               MOVE W-PARSE2 TO W-SIGN
               MOVE W-PARSE1 TO W-PARSE-NUMBER
           WHEN W-PARSE2 = ' '
      **       DISPLAY 'PARSE1 ONLY'
      **       DISPLAY 'DEBUG2: PARSE1=' W-PARSE1
               IF W-PARSE1(1:1) = '+' OR '-'
                   MOVE W-PARSE1(1:1) TO W-SIGN
                   MOVE W-PARSE1(2:) TO W-PARSE-NUMBER
               ELSE
                   MOVE '+' TO W-SIGN
                   MOVE W-PARSE1 TO W-PARSE-NUMBER
               END-IF
           WHEN OTHER GOBACK
           END-EVALUATE

      **   DISPLAY '        SIGN =' W-SIGN
      **   DISPLAY '  PARSE-NUMBE=' W-PARSE-NUMBER
      *
      *    NOW UNSTRING W-PARSE-NUMBER
      *
           MOVE ' ' TO W-PARSE1 W-PARSE2 W-PARSE3
           UNSTRING W-PARSE-NUMBER DELIMITED '.' INTO W-PARSE1 W-PARSE2
           W-PARSE3
           IF W-PARSE3 NOT = ' ' GOBACK END-IF
           IF W-PARSE1 = ' ' AND W-PARSE2 = ' ' GOBACK END-IF

           MOVE W-PARSE1 TO W-PARSE-NUMBER
           PERFORM GET-NUMBER
           MOVE W-NUMBER TO W-NUMBER-INT
           MOVE W-SD     TO W-SD-INT
      **   DISPLAY 'W-NUMBER-INT =' W-NUMBER-INT

           MOVE W-PARSE2 TO W-PARSE-NUMBER
           PERFORM GET-NUMBER
           MOVE W-PARSE2 TO W-NUMBER-DEC-X
      **   DISPLAY 'W-NUMBER-DEC =' W-NUMBER-DEC
           INSPECT W-NUMBER-DEC-X CONVERTING ' ' TO '0'
           MOVE W-SD     TO W-SD-DEC
      **   DISPLAY 'W-NUMBER-DEC =' W-NUMBER-DEC


           IF W-SIGN = '-'
               COMPUTE I = 18 + OUTPUT-FORMAT-DEC
               MOVE W-NUMBER-INT-DEC(I:1) TO W-X
               COMPUTE W-S99 = (W-9 + 10) * (-1)
               MOVE W-SXX(2:1) TO W-NUMBER-INT-DEC(I:1)
           END-IF

           COMPUTE I = 18 - (OUTPUT-FORMAT-SD - OUTPUT-FORMAT-DEC) + 1
      **   DISPLAY 'I            =' I

      **   DISPLAY W-NUMBER-INT-DEC
           MOVE W-NUMBER-INT-DEC(I:OUTPUT-FORMAT-SD) TO
           OUTPUT-NUMBER (1:OUTPUT-FORMAT-SD)

      **   DISPLAY 'OUTPUT       =' OUTPUT-NUMBER


           MOVE 'V' TO REPLY

           IF W-SD-DEC > OUTPUT-FORMAT-DEC MOVE 'U' TO REPLY END-IF
           COMPUTE I = OUTPUT-FORMAT-SD - OUTPUT-FORMAT-DEC
           IF W-SD-INT > I MOVE 'O' TO REPLY END-IF
           GOBACK

           .

       GET-NUMBER.

      *
      *    NUMBER IS A STRING OF DIGITS LEFT-JUSTIFIED IN W-PARSE
      *
      **   DISPLAY 'DEBUG2:' W-PARSE-NUMBER
           MOVE 0 TO W-NUMBER
           MOVE 0 TO W-SD
           IF W-PARSE-NUMBER NOT = ' '
               MOVE 1 TO K
               MOVE W-PARSE-NUMBER(K:1) TO W-X
               PERFORM UNTIL W-X NOT NUMERIC
      **           DISPLAY 'DEBUG3: W-X=' W-X
                   COMPUTE W-NUMBER = (W-NUMBER * 10) + W-9
                   ADD 1 TO K
                   ADD 1 TO W-SD
                   MOVE W-PARSE-NUMBER(K:1) TO W-X
               END-PERFORM
               IF W-PARSE-NUMBER(K:) NOT = ' '
      **           DISPLAY 'DEBUG4:    =' W-PARSE-NUMBER(K:)
                   MOVE 'I' TO REPLY
                   GOBACK
               END-IF
           END-IF
           .
       END PROGRAM BATCNUMC.

      ******************************************************************
      *                                                                *
      * This is a COBOL program to allow batch programs to issue TSO/E *
      * commands EVEN THOUGH THEY ARE NOT RUNNING UNDER THE TMP.       *
      *                                                                *
      * It does this by using the TSO environment service facility     *
      *                                                                *
      ******************************************************************

      ******************************************************************
      * HISTORY                                                        *
      ******************************************************************
      *                                                                *
      * 22 Nov 2000 1.0  written                                  AWR  *
      *                                                                *
      ******************************************************************




       IDENTIFICATION DIVISION.
       PROGRAM-ID. BATCCOMM




       ENVIRONMENT DIVISION.
       DATA DIVISION.
       FILE SECTION.
       WORKING-STORAGE SECTION.

         01 TSOEV-PARM1          PIC S9(8) VALUE +0   COMP.
         01 TSOEV-RETURN-CODE    PIC S9(8) VALUE +0   COMP.
         01 TSOEV-REASON-CODE    PIC S9(8) VALUE +0   COMP.
         01 TSOEV-ABEND-CODE     PIC S9(8) VALUE +0   COMP.
         01 TSOEV-CPPL-ADDR      PIC S9(8) VALUE +0   COMP.

         01 TSF-FLAGS            PIC S9(8)            COMP.
         01 TSF-COMMAND          PIC X(255).
         01 TSF-COMMAND-LEN      PIC S9(8) VALUE +255 COMP.
         01 TSF-COMMAND-RC       PIC S9(8) VALUE +0   COMP.
         01 TSF-REASON-CODE      PIC S9(8) VALUE +0   COMP.
         01 TSF-COMMAND-ABEND-CODE PIC S9(8) VALUE +0 COMP.

         01 CALL-UNAUTH          PIC S9(8) VALUE +65536 COMP.
         01 REQUEST-DUMP         PIC S9(8) VALUE +256 COMP.
         01 INVOKE-REXX          PIC S9(8) VALUE +1   COMP.

         01 FIRST-TIME           PIC X VALUE 'Y'.

         01 W-DIAGNOSTIC         PIC X(200) VALUE ' '.
         01 W-N1                 PIC 9(8).
         01 W-N2                 PIC 9(8).
         01 W-N3                 PIC 9(8).
         01 N-IKJTSOEV           PIC X(8) VALUE 'IKJTSOEV'.
         01 N-TSOLNK             PIC X(8) VALUE 'TSOLNK  '.

         01 BATCCOMM-COMMAND-RC  PIC S9(8) COMP.

       LINKAGE SECTION.


         01 BATCCOMM-COMMAND     PIC X(255).

       PROCEDURE DIVISION USING
           BATCCOMM-COMMAND
           .

           IF FIRST-TIME = 'Y'

               CALL N-IKJTSOEV USING TSOEV-PARM1
                                     TSOEV-RETURN-CODE
                                     TSOEV-REASON-CODE
                                     TSOEV-ABEND-CODE
                                     TSOEV-CPPL-ADDR

               IF RETURN-CODE > 0
               AND NOT(
               RETURN-CODE = 8
               OR RETURN-CODE = 16
               OR RETURN-CODE = 24
               )
                   MOVE RETURN-CODE TO W-N1
                   MOVE TSOEV-REASON-CODE TO W-N2
                   MOVE TSOEV-ABEND-CODE TO W-N3
                   MOVE 20  TO BATCCOMM-COMMAND-RC
                   MOVE 0 TO RETURN-CODE
                   STRING
                   'C IKJTSOEV FAILED RC='
                   W-N1
                   ' RSNCD='
                   W-N2
                   ' ABNDCD='
                   W-N2
                   DELIMITED SIZE INTO W-DIAGNOSTIC
                   CALL 'BATCONM' USING W-DIAGNOSTIC
                   GOBACK
               END-IF
               MOVE 'N' TO FIRST-TIME
           END-IF

           MOVE 0 TO TSF-FLAGS
           ADD CALL-UNAUTH TO TSF-FLAGS
           ADD INVOKE-REXX TO TSF-FLAGS

           MOVE BATCCOMM-COMMAND TO TSF-COMMAND

           MOVE 0 TO TSF-COMMAND-RC
           MOVE 0 TO TSF-REASON-CODE
           MOVE 0 TO TSF-COMMAND-ABEND-CODE

           CALL N-TSOLNK USING TSF-FLAGS
                               TSF-COMMAND
                               TSF-COMMAND-LEN
                               TSF-COMMAND-RC
                               TSF-REASON-CODE
                               TSF-COMMAND-ABEND-CODE


           IF RETURN-CODE > 4
               DISPLAY 'BATCHART: TSOLNK RC ' RETURN-CODE
                ' '
               TSF-COMMAND-RC
                ' '
               TSF-REASON-CODE
                ' '
               TSF-COMMAND-ABEND-CODE
               MOVE 24  TO RETURN-CODE
           ELSE
               MOVE TSF-COMMAND-RC TO RETURN-CODE
           END-IF

           GOBACK.


       END PROGRAM BATCCOMM.
./ ADD NAME=BATCICU  0117-03206-03280-1633-00109-00103-00027-TSO057
/******************************** REXX *******************************/
/*+-----------------------------------------------------------------+*/
/*| RUN ICU - sample exec to run ICU under BATCICU                  |*/
/*|                                                                 |*/
/*| This exec will probably need extensive customisation.           |*/
/*|                                                                 |*/
/*| it will create and allocate three libraries for your PRIVATE    |*/
/*| use                                                             |*/
/*|                                                                 |*/
/*|    userid.ADMCDATA                                              |*/
/*|    userid.ADMCFORM                                              |*/
/*|    userid.ADMGDF                                                |*/
/*|                                                                 |*/
/*| it will also allocate the BATCHART.ADMCFORM library as a        |*/
/*| READ ONLY library.                                              |*/
/*|                                                                 |*/
/*| The assumption is that you will create modified FORMATs on      |*/
/*| your userid.ADMCFORM library with new names.   When you have    |*/
/*| done this you may copy them to the BATCHART.ADMCFORM library    |*/
/*| using ISPF 3.3 and make them publicly available.                |*/
/*|                                                                 |*/
/*|                                                                 |*/
/*|                                                                 |*/
/*| CUSTOMISE WHERE YOU SEE /* CHANGE */                            |*/
/*|                                                                 |*/
/*|                                                                 |*/
/*+-----------------------------------------------------------------+*/
/*********************************************************************/

address TSO
x = msg('OFF')
user = sysvar(sysuid)
trace o

maxrc = 0



call allocrw ADMCFORM
call allocrw ADMCDATA
call allocrw ADMGDF


call allocrw BATCDUMY /* dummy library */

/* BATCDUMY is concatenated after the BTCHART.ADMCFORM library as a
safety measure - it makes it impossible to delete anything from it */


x = msg('ON')

/* R/O DATASET FOR FORMATS */

"ALLOC F(RO1CFORM) DA(",
                     "'SFT.BATCHART.ADMCFORM'" /* change */,
                     "'"user".BATCDUMY'"       /* change */,
                     ")  SHR REUSE"
if rc > maxrc then maxrc = rc



"ALLOC F(ADMSYMBL) DA('SYS1.Z130.SADMSYM')" /* change */ ,
"SHR REUSE LRECL(400) RECFM(F B)"
if rc > maxrc then maxrc = rc


if maxcc < 8 then do
   Address TSO  "CALL SFT.BATCHART.LOAD(BATCICU1) 'CFORM 1'" /*change*/
end

return











allocrw:


/*********************************************************************/
/*+-----------------------------------------------------------------+*/
/*|                                                                 |*/
/*|   this allocates the user's private libraries.  It is assumed   |*/
/*|   they have hlq equal to their userid.  Modify this section     |*/
/*|   as suitable.                                                  |*/
/*|                                                                 |*/
/*+-----------------------------------------------------------------+*/
/*********************************************************************/


arg type

"ALLOC F("type") DA('"user"."type"') SHR REUSE"
if rc > 0 then do
  x = msg('ON')
  say "BATCICU: allocating new user data set" user"."type
  "ALLOC F("type") DA('"user"."type"') NEW CATALOG REUSE" ,
  "SPACE (1 1) TRACK DIR(20) LRECL(400) RECFM(F B) UNIT(SYSALLDA)" ,
  "BLKSIZE(400)"
  if rc > maxrc then say "BATCICU: allocation failed"
  if rc > maxrc then maxrc = rc
end
return
./ ADD NAME=BATCICU1 0101-03206-03213-1408-00307-00307-00001-TSO057
000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID.  BATCICU1.
000300*
000400*    "BATCICU1" IS WRITTEN TO ALLOW THE GDDM ICU TO ACCESS
000500*     A HIERARCHY OF READ/WRITE LIBRARIES OF ANY TYPE
000600*
000700*     NORMALLY THE ICU ACCESSES OBJECTS OF A GIVEN TYPE THROUGH A
000800*     SINGLE DDNAME.  FOR INSTANCE, FORMS HAVE A SINGLE DDNAME
000900*     TO WHICH FORM DEFINITIONS ARE BOTH WRITTEN AND READ:
001000*
001100*        ADMCFORM   READ  WRITE
001200*
001300*     IF THIS PROGRAM IS CALLED WITH "CFORM 2 " IN THE PARM FIELD
001400*     THIS IS REPLACED BY A SET OF DDNAMES:
001500*
001600*        ADMCFORM   READ  WRITE
001700*        RO1CFORM   READ
001800*        RO2CFORM   READ
001900*
002000*
002100*     FORMS ARE WRITTEN TO ADMCFORM ONLY.  FORMS ARE READ FROM
002200*     ADMCFORM AND THEN FROM RO1CFORM AND THEN RO2CFROM
002300*
002400*
002500*     THE SAME THING CAN BE DONE WITH ANY GDDM DDNAME.  FOR DDNAME
002600*     ADMXXXXX SPECIFY XXXXX N IN THE PARM FIELD AND THE DDNAMES
002700*     WILL BE REPLACED BY:
002800*
002900*        ADMXXXXX   READ  WRITE
003000*        RO1XXXXX   READ
003100*        RO2XXXXX   READ
003200*          . . . . . . .
003300*        RONXXXXX   READ
003400*
003500*
003600*
003700*     SEVERAL DIFFERENT XXXXXX N'S MAY BE SPECFIED
003800*
003900*     E.G.
004000*
004100*        'CALL  YOUR.LIBRARY.NAME(BATCICU1)' 'GDF 1 CDATA 1'
004200*
004300*     WILL GIVE YOU
004310*
004311*        ADMGDF     READ  WRITE
004312*        RO1GDF     READ
004313*
004314*        ADMCDATA   READ  WRITE
004315*        RO1CDATA   READ
004316*
004317*
004318*     AND SO ON
004319*
004320*     SINCE THE R/O DDNAMES CAN ACCESS A CONCATENATION OF
004330*     LIBRARIES YOU SHOULD NOT NORMALLY NEED MORE THAN RO1XXXXX
004340*
004350*
004360 ENVIRONMENT DIVISION.
004370 DATA DIVISION.
004380 WORKING-STORAGE SECTION.
004390
004400 01  W-ADMTPCS.
004500      04  W-PCSLEVEL PICTURE S9(8) COMP VALUE +1.
004600*                  CHART UTILITY LEVEL IDENTIFIER
004700*                  1 = CHART UTILITY FOR RELEASE 3 ONWARDS
004800      04  W-PCSDISP PICTURE S9(8) COMP VALUE +1.
004900*                  CHART UTILITY FUNCTION REQUESTED
005000*                  1 = HOME PANEL
005100      04  W-PCSHELP PICTURE S9(8) COMP VALUE +1.
005200*                  PF KEY INFORMATION SWITCH
005300*                  1 = PF KEY INFORMATION IS DISPLAYED
005400      04  W-PCSISOL PICTURE S9(8) COMP VALUE +0.
005500*                  ISOLATION SWITCH
005600*                  0 = SAVE/RESTORE/DIRECTORY AVAILABLE
005700      04  W-PCSFNAME PICTURE X(8) VALUE '*       '.
005800*                  NAME OF PREVIOUSLY SAVED CHART FORMAT
005900*                  * = DEFAULT CHART FORMAT
006000      04  W-PCSDNAME PICTURE X(8) VALUE '*       '.
006100*                  NAME OF PREVIOUSLY SAVED CHART DATA
006200*                  * = DATA CONTAINED IN PARAMETERS
006300      04  W-PCSPAIR PICTURE S9(8) COMP VALUE +0.
006400*                  TIED OR FREE DATA SWITCH
006500*                  0 = TIED, ONE SET OF X-VALUES ONLY
006600      04  W-PCSNG  PICTURE S9(8) COMP VALUE +0.
006700*                  NUMBER OF DATA GROUPS.
006800*                  0 = NO DATA TO DISPLAY
006900      04  W-PCSNE  PICTURE S9(8) COMP VALUE +0.
007000*                  NUMBER OF ELEMENTS  (PER DATA GROUP)
007100      04  W-PCSKEYL PICTURE S9(8) COMP VALUE +0.
007200*                  LENGTH OF 'KEYS' ARRAY ELEMENT
007300      04  W-PCSLABL PICTURE S9(8) COMP VALUE +0.
007400*                  LENGTH OF 'LABELS' ARRAY ELEMENT
007500      04  W-PCSHEADL PICTURE S9(8) COMP VALUE +0.
007600*                  LENGTH OF 'HEADING' PARAMETER
007700      04  W-PCSPNAME PICTURE X(8) VALUE '*       '.
007800*                  LOCAL PRINTER DESTINATION NAME
007900      04  W-PCSPRDEP COMP-1 VALUE 6.4E+1.
008000*                  PRINTER DEPTH (ROWS) OF CHART AREA
008100      04  W-PCSPRWID COMP-1 VALUE 1.2E+2.
008200*                  PRINTER WIDTH (COLS) OF CHART AREA
008300      04  W-PCSPCOPY PICTURE S9(8) COMP VALUE +1.
008400*                  NUMBER OF COPIES OF PRINT FILE
008500      04  W-PCSPHEAD PICTURE S9(8) COMP VALUE +0.
008600*                  PRINTER HEADER PAGE CONTROL
008700*                  0 = DEFAULT, HEADER PAGE OUTPUT
008800      04  W-PCSPVOFF COMP-1 VALUE 0.0E+1.
008900*                  PRINTER VERTICAL OFFSET (ROWS)
009000      04  W-PCSPHOFF COMP-1 VALUE 0.0E+1.
009100*                  PRINTER HORIZONTAL OFFSET (COLUMNS)
009200      04  W-PCSPUNIT PICTURE S9(8) COMP VALUE +4.
009300*                  PRINTER LAYOUT PARAMETER UNITS
009400*                  4 = ROWS AND COLUMNS
009500      04  W-PCSDUMMY PICTURE S9(8) COMP VALUE +0.
009600*                  RESERVED
009700      04  W-PCSDYNAM PICTURE X(8) VALUE '        '.
009800*                  DIRECTORY LISTING OBJECT NAME
009900      04  W-PCSDYTYP PICTURE S9(8) COMP VALUE +0.
010000*                  DIRECTORY LISTING OBJECT TYPE
010100*                  0 = DEFAULT, NO INITIAL LIST
010200      04  W-PCSDYTYQ PICTURE S9(8) COMP VALUE +0.
010300*                  DIRECTORY LISTING OBJECT SUBTYPE
010400*                  0 = DEFAULT
010500      04  W-PCSDYLIB PICTURE X(8) VALUE '        '.
010600*                  DIRECTORY LISTING OBJECT LIBRARY
010700      04  W-PCSEXPL PICTURE S9(8) COMP VALUE +0.
010800*                  INITIAL EXPERIENCE LEVEL VALUE
010900*
011000 01  W-DUMMY.
011100     04 W-DUMMY1 PICTURE S9(8) COMP VALUE +0.
011200
011300 01  W-ESLIB-PARMS.
011400     04 W-ESLIB-TYPE          PICTURE S9(8) COMP VALUE +0.
011500     04 W-ESLIB-COUNT         PICTURE S9(8) COMP VALUE +0.
011600     04 W-ESLIB-DDNAMES.
011700         07 W-ESLIB-DDNAME-READWRITE PIC X(8).
011800         07 W-ESLIB-DDNAME-READS.
011900             10 W-ESLIB-DDNAME-READ     PIC X(8) OCCURS 10
012000                INDEXED BY
012100                W-ESLIB-DDNAME-READ-IX.
012200
012300 01  W-WORK.
012400     04 W-WORK-PARM                  PIC X(100).
012500     04 W-PARSES.
012600         07 W-PARSE                  PIC X(8)
012700         OCCURS 40 INDEXED BY W-PARSE-IX.
012800     04  W-PARSE-TEMP.
012900         07 W-PARSE-TEMP-1-N     PIC 9.
013000         07 FILLER               PIC X(7).
013100     04  W-DDNAME-CH3            PIC 9.
013200     04  W-NO-ROLIBS             PIC S9(9) COMP.
013300
013400
013500
013600
013700 LINKAGE SECTION.
013800
013900 01  W-PARM.
014000     04  W-PARM-LENGTH      PIC S9(4) COMP.
014100     04  W-PARM-VALUE       PIC X(100).
014200
014300 PROCEDURE DIVISION USING W-PARM.
014400
014500
014600
014700
014800
014900     CALL 'FSINN'
015000*
015100*    NOTE FSINN IS THE ONLY MODULE THAT ACTUALLY EXISTS AS A MEMBE
015200*    ON THE GDDM LIBRARY.  ALL OTHER CALLED ROUTINES ARE ESD'S IN
015300*    THIS MODULE.
015400*
015500
015600     MOVE ' ' TO W-PARSES
015700     MOVE ' ' TO W-WORK-PARM
015800     MOVE W-PARM-VALUE(1:W-PARM-LENGTH)
015900     TO W-WORK-PARM
016000     UNSTRING W-WORK-PARM
016100     DELIMITED SPACE
016200     INTO W-PARSE(01)
016300          W-PARSE(02)
016400          W-PARSE(03)
016500          W-PARSE(04)
016600          W-PARSE(05)
016700          W-PARSE(06)
016800          W-PARSE(07)
016900          W-PARSE(08)
017000          W-PARSE(09)
017100          W-PARSE(10)
017200          W-PARSE(11)
017300          W-PARSE(12)
017400          W-PARSE(13)
017500          W-PARSE(14)
017600          W-PARSE(15)
017700          W-PARSE(16)
017800          W-PARSE(17)
017900          W-PARSE(18)
018000          W-PARSE(19)
018100          W-PARSE(20)
018200          W-PARSE(21)
018300          W-PARSE(22)
018400          W-PARSE(23)
018500          W-PARSE(24)
018600          W-PARSE(25)
018700          W-PARSE(26)
018800          W-PARSE(27)
018900          W-PARSE(28)
019000          W-PARSE(29)
019100          W-PARSE(30)
019200          W-PARSE(31)
019300          W-PARSE(32)
019400          W-PARSE(33)
019500          W-PARSE(34)
019600          W-PARSE(35)
019700          W-PARSE(36)
019800          W-PARSE(37)
019900          W-PARSE(38)
020000          W-PARSE(39)
020100          W-PARSE(40)
020200
020300     SET W-PARSE-IX TO 1
020400     PERFORM UNTIL W-PARSE-IX > 35
020500         EVALUATE W-PARSE(W-PARSE-IX)
020600         WHEN ' '
020700             MOVE -1 TO W-ESLIB-TYPE
020800             SET W-PARSE-IX UP BY 1
020900         WHEN 'SYMBL'
021000             MOVE 1 TO W-ESLIB-TYPE
021100         WHEN 'GGMAP'
021200             MOVE 2 TO W-ESLIB-TYPE
021300         WHEN 'SAVE'
021400             MOVE 3 TO W-ESLIB-TYPE
021500         WHEN 'CFORM'
021600             MOVE 4 TO W-ESLIB-TYPE
021700         WHEN 'CDATA'
021800             MOVE 5 TO W-ESLIB-TYPE
021900         WHEN 'GDF'
022000             MOVE 7 TO W-ESLIB-TYPE
022100         WHEN 'CDEF'
022200             MOVE 9 TO W-ESLIB-TYPE
022300         WHEN 'PROJ'
022400             MOVE 10 TO W-ESLIB-TYPE
022500         WHEN 'IMG'
022600             MOVE 11 TO W-ESLIB-TYPE
022700         WHEN OTHER
022800             DISPLAY 'BATCICU1: INVALID DDNAME "'
022900             W-PARSE(W-PARSE-IX)
023000             '" SPECIFIED'
023100             MOVE 8 TO RETURN-CODE
023200             CALL 'FSTERM'
023300             GOBACK
023400         END-EVALUATE
023500         IF W-ESLIB-TYPE NOT = -1
023600
023700             MOVE ' ' TO W-ESLIB-DDNAME-READWRITE
023800             STRING 'ADM'
023900             W-PARSE(W-PARSE-IX)
024000             DELIMITED SIZE INTO W-ESLIB-DDNAME-READWRITE
024100             MOVE 1 TO W-ESLIB-COUNT
024200
024300             MOVE W-PARSE(W-PARSE-IX + 1) TO W-PARSE-TEMP
024400             IF W-PARSE-TEMP(2:) NOT = ' '
024500                 DISPLAY
024600                 'BATCICU1: INVALID CONCATENATION NUMBER "'
024700                 W-PARSE-TEMP
024800                 '" SPECIFIED'
024900                 MOVE 8 TO RETURN-CODE
025000                 CALL 'FSTERM'
025100                 GOBACK
025200             END-IF
025300             IF W-PARSE-TEMP(1:1) < '0'
025400             OR W-PARSE-TEMP(1:1) > '9'
025500                 DISPLAY
025600                 'BATCICU1: INVALID CONCATENATION NUMBER "'
025700                 W-PARSE-TEMP
025800                 '" SPECIFIED'
025900                 MOVE 8 TO RETURN-CODE
026000                 CALL 'FSTERM'
026100                 GOBACK
026200             END-IF
026300
026400             MOVE W-PARSE-TEMP-1-N TO  W-NO-ROLIBS
026500             MOVE ' ' TO W-ESLIB-DDNAME-READS
026600             PERFORM VARYING W-ESLIB-DDNAME-READ-IX
026700             FROM 1 BY 1
026800             UNTIL W-ESLIB-DDNAME-READ-IX
026900             > W-NO-ROLIBS
027000                 SET W-DDNAME-CH3 TO
027100                 W-ESLIB-DDNAME-READ-IX
027200                 STRING 'RO'
027300                 W-DDNAME-CH3
027400                 W-PARSE(W-PARSE-IX)
027500                 DELIMITED SIZE INTO W-ESLIB-DDNAME-READ
027600                 (W-ESLIB-DDNAME-READ-IX)
027700                 ADD 1 TO W-ESLIB-COUNT
027800             END-PERFORM
027900             CALL 'ESLIB' USING W-ESLIB-TYPE W-ESLIB-COUNT
028000             W-ESLIB-DDNAMES
028100             SET W-PARSE-IX UP BY 2
028200         END-IF
028300     END-PERFORM
028400
028500     CALL 'CHART' USING W-ADMTPCS W-DUMMY W-DUMMY W-DUMMY
028600     W-DUMMY W-DUMMY W-DUMMY
028700     CALL 'FSTERM'
028800     GOBACK.
028900
./ ADD NAME=BATCINS1 0122-01047-03206-1142-00121-00090-00000-TSO057
//TSO05701 JOB (T951V00),
//          NOTIFY=TSO057,MSGCLASS=T,CLASS=A
//*
//******************************************************************
//*                                                                *
//*  This job will compile and link BATCHART and BATCICU1 into a   *
//*  load library, which you must pre-allocate before running      *
//*                                                                *
//******************************************************************
//*
//******************************************************************
//* HISTORY                                                        *
//******************************************************************
//*                                                                *
//* 12 Jan 2001 1.0  written                                  AWR  *
//*                                                                *
//******************************************************************
//*
//*      TO RUN THIS JOB
//*      ---------------
//*
//*  1) CHANGE THE JOBCARD
//*
//*  2) CHANGE THE NAMES OF:
//*
//*        SFT.BATCHART.COBOL - to the BATCHART COBOL library
//*
//*        SFT.BATCHART.LOAD  - to the load library where you want
//*                             BATCHART to be stored
//*
//*        CEE, GDDM libraries- as appropriate.  In most places
//*                             these will have hlq CEE & GDDM but
//*                             some sites change these.
//*
//*
//*   3) ADD STEPLIBS IF NEEDED for compiler, prelinker.  You may
//*                             have to change hlq's.
//*
//*   4) SUBMIT JOB
//*
//*
//* Expect RC 4
//*
//*
//*
//*
//BATCINS  PROC N=,
//         SCEERUN=CEE.SCEERUN,
//         SCEEMSGP=CEE.SCEEMSGP,
//         SCEELKED=CEE.SCEELKED,
//         ACEESRC1=CEE.ACEESRC1,
//         SIGYCOMP=IGY.SIGYCOMP,
//         SADMMOD=GDDM.SADMMOD,
//         BATCHART=SFT.BATCHART.COBOL,
//         LOADLIB=SFT.BATCHART.LOAD
//*
//C        EXEC PGM=IGYCRCTL,COND=(4,LT),REGION=7M,
// PARM=('NOOFFSET,NOSSRANGE,RENT',
//       'NODYNAM,LIB,NOCICS,APOST,DATA(24)')
//STEPLIB  DD   DISP=SHR,DSN=&SIGYCOMP
//SYSUT1   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSUT2   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSUT3   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSUT4   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSUT5   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSUT6   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSUT7   DD   UNIT=SYSALLDA,SPACE=(6233,(150,300),,,ROUND)
//SYSPRINT DD   SYSOUT=*
//SYSLIB   DD   DISP=SHR,DSN=&BATCHART
//         DD   DSN=&ACEESRC1,DISP=SHR
//SYSIN    DD   DSN=&BATCHART(&N),DISP=SHR
//SYSLIN   DD   DSN=&&OBJ,DISP=(NEW,PASS),BLKSIZE=3120,
//         UNIT=SYSALLDA,SPACE=(80,(1500,7750))
//*
//* PRE-LINKEDIT STEP:
//*
//PLKED   EXEC PGM=EDCPRLK,COND=(4,LT),REGION=7M,
// PARM=''
//STEPLIB  DD   DISP=SHR,DSN=&SCEERUN
//SYSMSGS  DD   DSNAME=&SCEEMSGP(EDCPMSGE),DISP=SHR
//SYSMOD   DD   DSNAME=&&OBJ,UNIT=SYSALLDA,DISP=(NEW,PASS),
//         SPACE=(32000,(30,30)),
//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200)
//SYSOUT   DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   DSN=&&OBJ,DISP=(SHR,DELETE)
//SYSLIB   DD   DUMMY
//*
//* LINKEDIT
//*
//LINK     EXEC PGM=HEWL,COND=(4,LT),
// PARM=('XREF,LIST,MAP',
// 'AMODE=24,RMODE=24,NOREUS,NORENT')
//SYSUT1   DD   UNIT=SYSALLDA,SPACE=(1024,(100,30))
//SYSPRINT DD   SYSOUT=*
//SYSLMOD  DD   DSN=&LOADLIB(&N),DISP=SHR
//SYSLIB   DD   DSN=&SCEELKED,DISP=SHR
//         DD   DSN=&SADMMOD,DISP=SHR
//SYSLIN   DD   DSN=&&OBJ,DISP=(OLD,DELETE)
//         PEND
//*
//      EXEC BATCINS,N=BATCHART,
//         SCEERUN=SYS1.Z130.SCEERUN,          <=== CHANGE AS SUITABLE
//         SCEEMSGP=SYS1.Z130.SCEEMSGP,        <=== CHANGE AS SUITABLE
//         SCEELKED=SYS1.Z130.SCEELKED,        <=== CHANGE AS SUITABLE
//         ACEESRC1=SYS1.Z130.ACEESRC1,        <=== CHANGE AS SUITABLE
//         SIGYCOMP=SYSPP.COBOS310.SIGYCOMP,   <=== CHANGE AS SUITABLE
//         SADMMOD=SYS1.Z130.SADMMOD,          <=== CHANGE AS SUITABLE
//         BATCHART=SFT.BATCHART.COBOL,        <=== CHANGE AS SUITABLE
//         LOADLIB=SFT.BATCHART.LOAD           <=== CHANGE AS SUITABLE
//*
//      EXEC BATCINS,N=BATCICU1,
//         SCEERUN=SYS1.Z130.SCEERUN,          <=== CHANGE AS SUITABLE
//         SCEEMSGP=SYS1.Z130.SCEEMSGP,        <=== CHANGE AS SUITABLE
//         SCEELKED=SYS1.Z130.SCEELKED,        <=== CHANGE AS SUITABLE
//         ACEESRC1=SYS1.Z130.ACEESRC1,        <=== CHANGE AS SUITABLE
//         SIGYCOMP=SYSPP.COBOS310.SIGYCOMP,   <=== CHANGE AS SUITABLE
//         SADMMOD=SYS1.Z130.SADMMOD,          <=== CHANGE AS SUITABLE
//         BATCHART=SFT.BATCHART.COBOL,        <=== CHANGE AS SUITABLE
//         LOADLIB=SFT.BATCHART.LOAD           <=== CHANGE AS SUITABLE
//*
./ ADD NAME=BATCINS2 0104-01047-01075-1249-00042-00042-00000-TSO057
//TSO05702 JOB  (T100E057),'002',CLASS=A,MSGCLASS=T,
//*      TYPRUN=SCAN,
//         MSGLEVEL=(1,1),NOTIFY=TSO057
//*
//******************************************************************
//*                                                                *
//*  THIS JOB WILL CREATE THE BATCHART ADMCFORM LIBRARY            *
//*                                                                *
//******************************************************************
//*
//******************************************************************
//* HISTORY                                                        *
//******************************************************************
//*                                                                *
//* 12 Jan 2001 1.0  written                                  AWR  *
//*                                                                *
//******************************************************************
//*
//*      TO RUN THIS JOB
//*      ---------------
//*
//*  1) Change the jobcard
//*
//*
//*  2) Change the names of:
//*
//*        SFT.BATCHART.COBOL    - TO THE BATCHART COBOL LIBRARY
//*        SFT.BATCHART.ADMCFORM - TO THE BATCHART ADMCFORM LIBRARY
//*
//*  3) SUBMIT JOB
//*
//*
//         EXEC PGM=IKJEFT01,DYNAMNBR=100
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DDNAME=SYSIN

PROFILE NOPREFIX

DEL     SFT.BATCHART.ADMCFORM

RECEIVE INDS(SFT.BATCHART.COBOL(BATCFORM))
DATASET(SFT.BATCHART.ADMCFORM)
./ ADD NAME=BATCIVP1 0127-01044-01075-1252-00293-00062-00000-TSO057
//TSO05765 JOB (T951V00),
//     NOTIFY=TSO057,MSGCLASS=T,CLASS=E
//*
//******************************************************************
//*                                                                *
//*  This job will create GDF members  using BATCHART              *
//*                                                                *
//******************************************************************
//*
//******************************************************************
//* HISTORY                                                        *
//******************************************************************
//*                                                                *
//* 12 Jan 2001 1.0  written                                  AWR  *
//*                                                                *
//******************************************************************
//*
//*      TO RUN THIS JOB
//*      ---------------
//*
//*  1) Change the jobcard
//*
//*
//*  2) Change the names of:
//*
//*        SFT.BATCHART.COBOL - to the BATCHART COBOL library
//*
//*
//*  3) Create a user GDF library - here called TSO057.ADMGDF - FB-400
//*
//*
//*  4) Customise BATCPROC procedure as described within it
//*
//*
//*  5) Submit job
//*
//*
//       JCLLIB ORDER=(SFT.BATCHART.COBOL)  <= change
//*
//         EXEC BATCPROC,PAPER=*
//ADMGDF   DD   DSN=TSO057.ADMGDF,DISP=OLD  <= change
//SYSIN    DD   *

  BUILD Sales

  TIEDXVALUES Jan Feb Mar Apr May Jun Jul Aug +
  Sep Oct Nov Dec


  GROUP Factories
   DATUM Jan  1444
   DATUM Feb  148871
   DATUM Mar  98871
   DATUM Apr  98871
   DATUM May  84871
   DATUM Jun  78871
   DATUM Jul  68871
   DATUM Aug  54871
   DATUM Sep  48871
   DATUM Oct  48871
   DATUM Nov  58871
   DATUM Dec  53333

  GROUP Dept_stores
   DATUM Jan  107692
   DATUM Feb  188871
   DATUM Mar  128871
   DATUM Apr  158871
   DATUM May  178871
   DATUM Jun  178871
   DATUM Jul  128871
   DATUM Aug  138871
   DATUM Sep  158871
   DATUM Oct  118871
   DATUM Nov  128871
   DATUM Dec  198871

  GROUP Supermarkets
   DATUM Jan  107692
   DATUM Feb  148871
   DATUM Mar  198871
   DATUM Apr  148871
   DATUM May  185871
   DATUM Jun  148871
   DATUM Jul  148871
   DATUM Aug  148871
   DATUM Sep  118871
   DATUM Oct  148871
   DATUM Nov  128871
   DATUM Dec  138871


  FORMAT  BATWEBBA +
    YRANGE 0 200000 +
    YTITLE millions_of_pounds XTITLE Sales_for_1988 +
    CHARSACROSS 60 CHARSDOWN 24 +
    LEGEND NOBOX +
    YMULTIPLIER 0.000001

  SAVE IVPWEBBA

*
* A MEMBER CALLED IVPWEBBA SHOULD NOW EXIST ON THE GDF LIBRARY
* IT SHOULD BE A BAR CHART
*
* LET'S REPLOT THIS DATA AS A LINE GRAPH
*

* put a note in
  note xvalue 1 nopreblank  yvalue 150000 text factory;opened;Jan!

  FORMAT  BATWEBLI +
    YRANGE 0 200000 +
    CHARSACROSS 60 CHARSDOWN 24 +
    LEGEND NOBOX +
    YTITLE millions_of_pounds XTITLE Sales_for_1988 +
    YMULTIPLIER 0.000001


  SAVE IVPWEBLI

*
* A MEMBER CALLED IVPWEBLI SHOULD NOW EXIST ON THE GDF LIBRARY
* IT SHOULD BE A LINE CHART WITH THE SAME DATA AS IVPWEBBA
*
*
* LET'S REPLOT IT AS A TOWER CHART
*

  FORMAT  BATWEBTO +
    YRANGE 0 200000 +
    CHARSACROSS 60 CHARSDOWN 24 +
    LEGEND NOBOX +
    YTITLE millions_of_pounds XTITLE Sales_for_1988 +
    LEFTMARGIN 8 +
    YMULTIPLIER 0.000001

  SAVE IVPWEBTO


*
* A MEMBER CALLED IVPWEBTO SHOULD NOW EXIST ON THE GDF LIBRARY
* IT SHOULD BE A TOWER CHART WITH THE SAME DATA AS IVPWEBBA
*
*
* Hmmm.  Let's play around a bit

  FORMAT  BATWEBTO +
    YRANGE 0 200000 +
    LEGEND NOBOX +
    CHARSDOWN 24 +
    LEftmargin 16 +
    YTITLE millions XTITLE Sales_for_1988 +
    YMULTIPLIER 0.000001 +
    Zsize 30 +
    ZANGLE 50

  SAVE IVPWEBT2


*
* COMPARE IVPWEBTO TO IVPWEBT2
*
* NOW LET'S START A NEW GRAPH, A POLAR CHART
*
*
 BUILD Wind Jan
 TIEDXVALUES N NNW NW WNW W WSW SW SSW S SSE SE ESE E ENE NE NNE _N_
  GROUP avg_knots
   DATUM   N      12
   DATUM   NNW    11
   DATUM   NW     14
   DATUM   WNW    16
   DATUM   W      14
   DATUM   WSW    1
   DATUM   SW     3
   DATUM   SSW    3
   DATUM   S      11
   DATUM   SSE    14
   DATUM   SE     12
   DATUM   ESE    10
   DATUM   E      4
   DATUM   ENE    5
   DATUM   NE     6
   DATUM   NNE    16
   DATUM   _N_    12
* note how you need a dummy "last datum"
  GROUP days
   DATUM   N      2
   DATUM   NNW    1
   DATUM   NW     1
   DATUM   WNW    1
   DATUM   W      2
   DATUM   WSW    2
   DATUM   SW     3
   DATUM   SSW    6
   DATUM   S      4
   DATUM   SSE    1
   DATUM   SE     1
   DATUM   ESE    1
   DATUM   E      1
   DATUM   ENE    1
   DATUM   NE     1
   DATUM   NNE    1
   DATUM   _N_    2
  FORMAT BATWEBPO XRANGE N _N_  CENTRELABELS  CHARSACROSS 90 +
    LEGEND NOBOX +
   CHARSDOWN 24
  SAVE IVPWEBPO

*
* TRY AGAIN WITH lines rather than solid masses of color
*
*
  FORMAT BATWEBPO XRANGE N _N_  CENTRELABELS  CHARSACROSS 90 +
    LEGEND NOBOX +
   CHARSDOWN 24 shadeclear days avg_knots

  SAVE IVPWEBP2

*
* NOW LET'S DO A PIE GRAPH
*
*
 BUILD Pies
  TIEDXVALUES dough meat fruit spices cream
  GROUP apple_pie
   DATUM   dough  12
   DATUM   meat   1
   DATUM   fruit  15
   DATUM   cream 6
   DATUM   spices 1
  FORMAT BATWEBPI +
    LEGEND NOBOX +
    ZANGLE 30

  SAVE IVPWEBPI

*
* Now a line graph that doesn't use tiedxvalues
*


  BUILD Yippie


  GROUP Yip
   DATUM 1.2  1444
   DATUM 2.1  148871
   DATUM 3.33 98871
   DATUM 7    98871
   DATUM 9    84871

  GROUP Yup
   DATUM 1.6  3444
   DATUM 2.66 48871
   DATUM 3.73 28871
   DATUM 7.5  38871
   DATUM 8    74871

  FORMAT  BATWEBLI +
    LEGEND NOBOX

  SAVE IVPWEBL3

*
* Now a line graph that uses dates as xvalue
*


  BUILD Nukees


  GROUP Gav
   DATUM 2001-01-03  33
   DATUM 2002-02-04  777
   DATUM 2003-05-24  477

  GROUP Danny
   DATUM 2001-01-13  66
   DATUM 2001-05-04  577
   DATUM 2001-08-04  767
   DATUM 2003-05-24  477

  HEADER BIG ATOMIC POWERED METAL ANTS!

  FORMAT  BATWEBLI +
    YEARS +
    XRANGE 2000-01-01  2005-12-30 +
    LEGEND NOBOX

  SAVE IVPWEBL4

./ ADD NAME=BATCIVP2 0119-01050-03197-0957-00124-00096-00000-TSO057
//TSO05765 JOB (T951V00),
//     NOTIFY=TSO057,MSGCLASS=T,CLASS=E
//*
//******************************************************************
//*                                                                *
//*  This job will create GIF members  using BATCHART              *
//*  it demonstrates how to put these on PDS's and/or HFS files    *
//*                                                                *
//******************************************************************
//*
//******************************************************************
//* HISTORY                                                        *
//******************************************************************
//*                                                                *
//* 12 Jan 2001 1.0  written                                  AWR  *
//*                                                                *
//******************************************************************
//*
//*      TO RUN THIS JOB
//*      ---------------
//*
//*  1) Change the jobcard
//*
//*
//*  2) Change the names of:
//*
//*        SFT.BATCHART.COBOL - to the BATCHART COBOL library
//*
//*
//*  3) Create a user GDF library - here called TSO057.ADMGDF - FB 400
//*
//*
//*  4) Create a user GIF    PDS - here called TSO057.GIF - FB 80
//*
//*
//*  5) If you want to run the step that puts a chart on a HFS file,
//*     create an HFS directory to put it on - here /u/tso057
//*
//*
//*  6) Customise BATCPROC procedure as described within it
//*
//*
//*  7) Submit job
//*
//*
//*
//       JCLLIB ORDER=(SFT.BATCHART.COBOL)  <= change
//*
//         EXEC BATCPROC,PAPER=*
//ADMGDF   DD   DSN=TSO057.ADMGDF,DISP=OLD  <= change
//GIFWEBBA DD   DSN=TSO057.GIF(IVPWEBBA),DISP=OLD  <= change
//GIFWEBB2 DD   DSN=TSO057.GIF(IVPWEBB2),DISP=OLD  <= change
//SYSIN    DD   *

  BUILD Sales

  TIEDXVALUES Jan Feb Mar Apr May Jun Jul Aug +
  Sep Oct Nov Dec


  GROUP Factories
   DATUM Jan  1444
   DATUM Feb  148871
   DATUM Mar  98871
   DATUM Apr  98871
   DATUM May  84871
   DATUM Jun  78871
   DATUM Jul  68871
   DATUM Aug  54871
   DATUM Sep  48871
   DATUM Oct  48871
   DATUM Nov  58871
   DATUM Dec  53333

  GROUP Dept_stores
   DATUM Jan  107692
   DATUM Feb  188871
   DATUM Mar  128871
   DATUM Apr  158871
   DATUM May  178871
   DATUM Jun  178871
   DATUM Jul  128871
   DATUM Aug  138871
   DATUM Sep  158871
   DATUM Oct  118871
   DATUM Nov  128871
   DATUM Dec  198871

  GROUP Supermarkets
   DATUM Jan  107692
   DATUM Feb  148871
   DATUM Mar  198871
   DATUM Apr  148871
   DATUM May  185871
   DATUM Jun  148871
   DATUM Jul  148871
   DATUM Aug  148871
   DATUM Sep  118871
   DATUM Oct  148871
   DATUM Nov  128871
   DATUM Dec  138871


  FORMAT  BATWEBBA +
    YRANGE 0 200000 +
    YTITLE millions_of_pounds XTITLE Sales_for_1988 +
    CHARSACROSS 60 CHARSDOWN 24 +
    LEGEND NOBOX +
    YMULTIPLIER 0.000001

  GIF OUTFILE GIFWEBBA  TRANSPARENT WIDTH 700 DEPTH 500

* convert it to a MVS dataset
*

  GIF OUTFILE GIFWEBB2  BLACK WIDTH 400 DEPTH 300

* convert it to HFS file
*

  GIF OUTFILE /u/tso057/web2.gif  BLACK WIDTH 400 DEPTH 300

  GIF OUTFILE /u/tso057/web1.gif  TRANSPARENT

./ ADD NAME=BATCPROC 0132-01023-03350-1737-00119-00032-00000-TSO057
//BATCPROC PROC GDFOUT=NULLFILE,
//         PAPER='*'
//*
//******************************************************************
//*                                                                *
//*  this procedure will run batchart under the TMP in batch       *
//*                                                                *
//******************************************************************
//*
//******************************************************************
//* HISTORY                                                        *
//******************************************************************
//*                                                                *
//* 12 JAN 2001 1.0  WRITTEN                                  AWR  *
//*                                                                *
//******************************************************************
//*
//*      TO CUSTOMISE THIS PROCEDURE
//*      ---------------------------
//*
//*  1) CHANGE THE STEPLIB TO THE NAME OF THE LOAD LIBRARY INTO WHICH
//*     BATCHART HAS BEEN COMPILED AND LINKED.  IF YOU DO NOT HAVE
//*     YOUR SCEERUN AND SADMMOD LIBRARIES IN THE LINK/LPA LIST YOU
//*     MUST ALSO ADD THEM
//*
//*  2) CHANGE THE SFT.BATCHART.ADMCFORM LIBRARY, WHERE THE PROVIDIED
//*     FORMS RESIDE, TO WHATEVER NAME YOU HAVE CALLED IT
//*
//*  3) CHANGE THE SFT.BATCHART.COBOL LIBRARY TO WHATEVER NAME
//*     YOU HAVE CALLED IT
//*
//*  4) CHANGE THE NAME OF THE ADMDEFS, ADMSYMBL, AND ADMPC DATASETS
//*     TO FIT YOUR INSTALLATION'S STANDARDS
//*
//*  5) IF YOU WANT TO CONCATENATE OTHER ADMCFORM LIBRARIES E.G. THOSE
//*     DISTRIBUTED WITH QMF, CONCATENATE THEM TO THE R01CFORM DDNAME.
//*
//*  6) UPDATE THE WORK DDNAMES ADMCOL1-8 IF APPROPRIATE
//*
//*
//*
//*
//         SET D='LRECL=400,RECFM=FB,BLKSIZE=8800'
//*
//         EXEC PGM=IKJEFT01,DYNAMNBR=100,REGION=6M,
//         PARM='BATCHART'
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DUMMY
//STEPLIB  DD DISP=SHR,DSN=SFT.BATCHART.LOAD         <=CHANGE
//*        DD DISP=SHR,DSN=CEE.SCEERUN               <=MAY BE NEEDED
//*        DD DISP=SHR,DSN=GDDM.SADMMOD              <=MAY BE NEEDED
//*
//*
//SYSPROC  DD DISP=SHR,DSN=SFT.BATCHART.COBOL        <=CHANGE
//*
//SYSOUT   DD SYSOUT=*
//*
//* do not change ADMCDATA or ADMCFORM ddnames!!!  these are r/w!!!
//* (but you may want to change UNIT=SYSALLDA)
//*
//ADMCDATA DD LRECL=400,RECFM=FB,UNIT=SYSALLDA,SPACE=(TRK,(9,9,99))
//ADMCFORM DD LRECL=400,RECFM=FB,UNIT=SYSALLDA,SPACE=(TRK,(9,9,99))
//*
//*
//*
//* CUSTOMISE DDNAMES BELOW
//*
//*
//*
//RO1CFORM DD &D,DISP=SHR,DSN=SFT.BATCHART.ADMCFORM  <=CHANGE
//         DD &D,DISP=SHR,DSN=SFT.BATCHART.ADMCFORM  <=CHANGE
//*
//*        DD &D,DISP=SHR,DSN=ANY.OTHER.ADMCFORM.LIB
//*
//* Add as many as you like e.g from  QMF, Performance Reporter . .
//*
//* note dataset is in there twice as insurance against overwriting
//* just in case
//*
//*
//*
//ADMSYMBL DD &D,DISP=SHR,DSN=GDDM.SADMSYM           <=CHANGE
//         DD &D,DISP=SHR,DSN=GDDM.SADMSYM           <=CHANGE
//*
//*
//*
//*
//ADMPC    DD &D,DISP=SHR,DSN=GDDM.SADMSAM           <=CHANGE
//         DD &D,DISP=SHR,DSN=GDDM.SADMSAM           <=CHANGE
//*
//*
//*
//*
//ADMDEFS  DD DISP=SHR,DSN=USER.LIVE.GDDM.ADMDEFS    <=CHANGE
//         DD DISP=SHR,DSN=USER.LIVE.GDDM.ADMDEFS    <=CHANGE
//*
//* If you don't have an ADMDEFS file just use this dummy
//*
//*ADMDEFS  DD DUMMY,LRECL=80,RECFM=FB,BLKSIZE=80
//*
//*
//* Work files
//* Change UNIT and allocation as appropriate.  VIO can be used.
//*
//ADMCOL1 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL2 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL3 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL4 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL5 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL6 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL7 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//ADMCOL8 DD LRECL=8206,RECFM=VBM,SPACE=(999,(999,9999)),UNIT=SYSALLDA
//*
//*
//* leave these alone
//*
//ADMPRINT DD SYSOUT=&PAPER     printed stuff
//ADMGDF   DD DSN=&GDFOUT,DISP=OLD,LRECL=400,RECFM=FB the GDF's go here
//                  This is your output datset.  Note DISP=OLD
./ ADD NAME=BATCRPCS 0103-01044-01056-1732-00142-00130-00000-TSO000
      ******************************************************************
      *   internal copybook do not customise
      ******************************************************************
      *   HISTORY
      ******************************************************************
      *
      *   JAN 2001 1.0  WRITTEN                                  AWR
      *
      ******************************************************************


      *
       01  BATCRPCS.
            02  PCS-LEVEL PICTURE S9(8) COMP.
      *                  CHART UTILITY LEVEL IDENTIFIER
      *                  1 = CHART UTILITY FOR RELEASE 3 ONWARDS
            02  PCS-DISP PICTURE S9(8) COMP.
      *                  CHART UTILITY FUNCTION REQUESTED
      *                  9 = GDF FILE
            02  PCS-HELP PICTURE S9(8) COMP.
      *                  PF KEY INFORMATION SWITCH
      *                  1 = PF KEY INFORMATION IS DISPLAYED
            02  PCS-ISOL PICTURE S9(8) COMP.
      *                  ISOLATION SWITCH
      *                  0 = SAVE/RESTORE/DIRECTORY AVAILABLE
            02  PCS-FNAME PICTURE X(8).
      *                  NAME OF PREVIOUSLY SAVED CHART FORMAT
      *                  * = DEFAULT CHART FORMAT
            02  PCS-DNAME PICTURE X(8).
      *                  NAME OF PREVIOUSLY SAVED CHART DATA
      *                  * = DATA CONTAINED IN PARAMETERS
            02  PCS-PAIR PICTURE S9(8) COMP.
      *                  TIED OR FREE DATA SWITCH
      *                  0 = TIED, ONE SET OF X-VALUES ONLY
            02  PCS-NG   PICTURE S9(8) COMP.
      *                  NUMBER OF DATA GROUPS.
            02  PCS-NE   PICTURE S9(8) COMP.
      *                  NUMBER OF ELEMENTS  (PER DATA GROUP)
            02  PCS-KEY-L PICTURE S9(8) COMP.
      *                  LENGTH OF 'KEYS' ARRAY ELEMENT
            02  PCS-LABEL-L PICTURE S9(8) COMP.
      *                  LENGTH OF 'LABELS' ARRAY ELEMENT
            02  PCS-HDR-L PICTURE S9(8) COMP.
      *                  LENGTH OF 'HEADER' PARAMETER
            02  PCS-PNAME PICTURE X(8).
      *                  LOCAL PRINTER DESTINATION NAME
            02  PCS-PRDEP COMP-1.
      *                  PRINTER DEPTH (INS) OF CHART AREA
            02  PCS-PRWID COMP-1.
      *                  PRINTER WIDTH (INS) OF CHART AREA
            02  PCS-PCOPY PICTURE S9(8) COMP.
      *                  NUMBER OF COPIES OF PRINT FILE
            02  PCS-PHEAD PICTURE S9(8) COMP.
      *                  PRINTER HEADER PAGE CONTROL
      *                  0 = DEFAULT, HEADER PAGE OUTPUT
            02  PCS-PVOFF COMP-1.
      *                  PRINTER VERTICAL OFFSET (ROWS)
            02  PCS-PHOFF COMP-1.
      *                  PRINTER HORIZONTAL OFFSET (COLUMNS)
            02  PCS-PUNIT PICTURE S9(8) COMP.
      *                  PRINTER LAYOUT PARAMETER UNITS
      *                  2 = INS
      *                  4 = ROWS AND COLUMNS
            02  PCS-DUMMY PICTURE S9(8) COMP VALUE +0.
      *                  RESERVED
            02  PCS-DYNAM PICTURE X(8) VALUE '        '.
      *                  DIRECTORY LISTING OBJECT NAME
            02  PCS-DYTYP PICTURE S9(8) COMP VALUE +0.
      *                  DIRECTORY LISTING OBJECT TYPE
      *                  0 = DEFAULT, NO INITIAL LIST
            02  PCS-DYTYQ PICTURE S9(8) COMP VALUE +0.
      *                  DIRECTORY LISTING OBJECT SUBTYPE
      *                  0 = DEFAULT
            02  PCS-DYLIB PICTURE X(8) VALUE '        '.
      *                  DIRECTORY LISTING OBJECT LIBRARY
            02  PCS-EXPL PICTURE S9(8) COMP VALUE +0.
      *                  INITIAL EXPERIENCE LEVEL VALUE
      *                  0 = DEFAULT, STANDARD LEVEL
      *
      *         END OF CHART UTILITY PANEL CONTROL STRUCTURE
      *
      *            PAIRED DATA CONTROL STRUCTURE
      *
       01  BATCRPCS-DATUM-COUNTS.
           02 GROUP-DATUM-COUNT PICTURE S9(8) COMP OCCURS 99.
      *
      * X-DATA
      *
       01  BATCRPCS-X-DATA.
           02  X-DATUM COMP-1 OCCURS 999 INDEXED BY X-DATUM-X.
      *
      * Y-DATA
      *

       01  BATCRPCS-Y-DATA.
           02  Y-DATUM COMP-1 OCCURS 999 INDEXED BY Y-DATUM-X.
      *
      * KEYS, LABELS, HEADERS
      *

       01  BATCRPCS-GROUP-NAMES.
           02  FILLER            PICTURE X(80) OCCURS 99 TIMES.

       01  BATCRPCS-GROUP-LABELS.
           02  FILLER              PICTURE X(80) OCCURS 99 TIMES.

       01  BATCRPCS-HDR.
           02  FILLER              PICTURE X(255).

       01  BATCRPCS-TABLED-LABELS.
           02  FILLER OCCURS 99 TIMES.
               03  BATCRPCS-TABLED-LABEL PICTURE X(80).

       01  BATCRPCS-TABLED-GROUP-NAMES.
           02  BATCRPCS-TABLED-GROUP-NAME PICTURE X(80) OCCURS 99 TIMES.
      *
      * NOTES
      *

       01  BATCRPCS-NOTES.
           02  BATCRPCS-NOTE     OCCURS 99 TIMES.
               03  BATCRPCS-NOTE-ACROSS   COMP-1.
               03  BATCRPCS-NOTE-UP       COMP-1.
               03  BATCRPCS-NOTE-UPUNITS  PIC S9(8) COMP.
               03  BATCRPCS-NOTE-ACROSSUNITS PIC S9(8) COMP.
               03  BATCRPCS-NOTE-PREBLANK PIC S9(8) COMP.
               03  BATCRPCS-NOTE-BOX      PIC S9(8) COMP.
               03  BATCRPCS-NOTE-LENGTH   PIC S9(8) COMP.
               03  BATCRPCS-NOTE-ROTATE   PIC S9(8) COMP.
               03  BATCRPCS-NOTE-DATA     PIC X(600).

      *
      * SWITCHES
      *


       01  BATCRPCS-SWITCHES.
           02  USE-XNOTES          PIC X.
           02  USE-YNOTES          PIC X.
           02  CENTRE-LABELS       PIC X.
           02  DUMMY-DEV-TOKEN     PIC X(8).
           02  DUMMY-FAM-TYPE      PIC S9(8) COMP.
./ ADD NAME=BATCUSO  0117-02057-02060-1615-00025-00018-00000-TSO057
    /* rexx */
    /*************************************************************/
    /*                                                           */
    /*  This is a "wrapper" for ADMUCDSO.                        */
    /*                                                           */
    /*************************************************************/
    trace o
    arg parm

    parm = strip(parm)

    ddname = word(parm,words(parm))
    ddname = strip(ddname,,')')
    ddname = strip(ddname,,'(')

    call batcckps ddname

    if result <>0 then exit 12


    say "BATCUSO: ADMUCDSO being called with:"   parm
    address LINKMVS "ADMUCDSO parm"
    exit rc


